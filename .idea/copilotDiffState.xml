<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/404.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/404.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;Page not found - Atlas Games. The page you're looking for doesn't exist, but we can help you find what you need.&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;404, page not found, Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;robots&quot; content=&quot;noindex, nofollow&quot;&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;assets/css/style.css&quot;&gt;&#10;    &#10;    &lt;title&gt;Page Not Found - Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;div class=&quot;error-page section&quot;&gt;&#10;                &lt;div class=&quot;error-content&quot;&gt;&#10;                    &lt;div class=&quot;error-image&quot;&gt;&#10;                        &lt;h1 class=&quot;error-code&quot;&gt;404&lt;/h1&gt;&#10;                        &lt;div class=&quot;error-icon&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;error-text&quot;&gt;&#10;                        &lt;h2&gt;Game Over... Page Not Found!&lt;/h2&gt;&#10;                        &lt;p&gt;Looks like this page took a wrong turn in the digital realm. Don't worry, even the best games have hidden areas that are hard to find!&lt;/p&gt;&#10;                        &#10;                        &lt;div class=&quot;error-actions&quot;&gt;&#10;                            &lt;a href=&quot;index.html&quot; class=&quot;btn btn-primary&quot;&gt;Return to Home Base&lt;/a&gt;&#10;                            &lt;button class=&quot;btn btn-secondary&quot; id=&quot;go-back-btn&quot;&gt;Go Back&lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Search Section --&gt;&#10;                &lt;div class=&quot;error-search section&quot;&gt;&#10;                    &lt;h3&gt;Looking for something specific?&lt;/h3&gt;&#10;                    &lt;div class=&quot;search-form&quot;&gt;&#10;                        &lt;input &#10;                            type=&quot;text&quot; &#10;                            id=&quot;error-search&quot; &#10;                            class=&quot;search-input&quot; &#10;                            placeholder=&quot;Search our games, blog posts, or team...&quot;&#10;                            aria-label=&quot;Search site content&quot;&#10;                        &gt;&#10;                        &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot; id=&quot;search-btn&quot;&gt;Search&lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div id=&quot;search-results&quot; class=&quot;search-results&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Quick Links --&gt;&#10;                &lt;div class=&quot;quick-links section&quot;&gt;&#10;                    &lt;h3&gt;Quick Links&lt;/h3&gt;&#10;                    &lt;div class=&quot;links-grid&quot;&gt;&#10;                        &lt;div class=&quot;link-category&quot;&gt;&#10;                            &lt;h4&gt;Our Games&lt;/h4&gt;&#10;                            &lt;ul&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;games.html&quot;&gt;Browse All Games&lt;/a&gt;&lt;/li&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;games.html?status=released&quot;&gt;Released Games&lt;/a&gt;&lt;/li&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;games.html?status=in-development&quot;&gt;Games in Development&lt;/a&gt;&lt;/li&gt;&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                        &#10;                        &lt;div class=&quot;link-category&quot;&gt;&#10;                            &lt;h4&gt;Content&lt;/h4&gt;&#10;                            &lt;ul&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;blogs.html&quot;&gt;Latest Blog Posts&lt;/a&gt;&lt;/li&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;team.html&quot;&gt;Meet Our Team&lt;/a&gt;&lt;/li&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;awards.html&quot;&gt;Our Achievements&lt;/a&gt;&lt;/li&gt;&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                        &#10;                        &lt;div class=&quot;link-category&quot;&gt;&#10;                            &lt;h4&gt;Get in Touch&lt;/h4&gt;&#10;                            &lt;ul&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;contact.html&quot;&gt;Contact Us&lt;/a&gt;&lt;/li&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;contact.html?subject=Technical%20Support&quot;&gt;Report a Bug&lt;/a&gt;&lt;/li&gt;&#10;                                &lt;li&gt;&lt;a href=&quot;contact.html?subject=General%20Inquiry&quot;&gt;General Inquiry&lt;/a&gt;&lt;/li&gt;&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Popular Content --&gt;&#10;                &lt;div class=&quot;popular-content section&quot;&gt;&#10;                    &lt;h3&gt;Popular Content&lt;/h3&gt;&#10;                    &lt;div class=&quot;popular-grid&quot;&gt;&#10;                        &lt;div id=&quot;popular-games&quot; class=&quot;popular-section&quot;&gt;&#10;                            &lt;h4&gt;Featured Games&lt;/h4&gt;&#10;                            &lt;div class=&quot;popular-items&quot;&gt;&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &#10;                        &lt;div id=&quot;popular-blogs&quot; class=&quot;popular-section&quot;&gt;&#10;                            &lt;h4&gt;Popular Posts&lt;/h4&gt;&#10;                            &lt;div class=&quot;popular-items&quot;&gt;&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/search.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            initializeErrorPage();&#10;            loadPopularContent();&#10;        });&#10;&#10;        function initializeErrorPage() {&#10;            // Go back button functionality&#10;            const goBackBtn = document.getElementById('go-back-btn');&#10;            goBackBtn.addEventListener('click', () =&gt; {&#10;                if (window.history.length &gt; 1) {&#10;                    window.history.back();&#10;                } else {&#10;                    window.location.href = 'index.html';&#10;                }&#10;            });&#10;&#10;            // Search functionality&#10;            const searchInput = document.getElementById('error-search');&#10;            const searchBtn = document.getElementById('search-btn');&#10;            &#10;            const performSearch = async () =&gt; {&#10;                const query = searchInput.value.trim();&#10;                if (!query) return;&#10;&#10;                const resultsContainer = document.getElementById('search-results');&#10;                resultsContainer.innerHTML = '&lt;div class=&quot;loading&quot;&gt;Searching...&lt;/div&gt;';&#10;&#10;                try {&#10;                    const [games, blogs, team] = await Promise.all([&#10;                        fetch('data/games.json').then(r =&gt; r.json()),&#10;                        fetch('data/blogs.json').then(r =&gt; r.json()),&#10;                        fetch('data/team.json').then(r =&gt; r.json())&#10;                    ]);&#10;&#10;                    const allContent = [&#10;                        ...games.map(item =&gt; ({...item, type: 'game', url: item.detailPath})),&#10;                        ...blogs.map(item =&gt; ({...item, type: 'blog', url: item.detailPath})),&#10;                        ...team.map(item =&gt; ({...item, type: 'team', url: item.detailPath}))&#10;                    ];&#10;&#10;                    const results = allContent.filter(item =&gt; {&#10;                        const searchFields = item.type === 'game' &#10;                            ? [item.title, item.description, ...(item.tags || [])]&#10;                            : item.type === 'blog'&#10;                            ? [item.title, item.excerpt, ...(item.tags || [])]&#10;                            : [item.name, item.role, item.bio, ...(item.skills || [])];&#10;                        &#10;                        return searchFields.some(field =&gt; &#10;                            field &amp;&amp; field.toString().toLowerCase().includes(query.toLowerCase())&#10;                        );&#10;                    }).slice(0, 5);&#10;&#10;                    if (results.length &gt; 0) {&#10;                        resultsContainer.innerHTML = `&#10;                            &lt;h4&gt;Search Results (${results.length} found)&lt;/h4&gt;&#10;                            &lt;div class=&quot;results-list&quot;&gt;&#10;                                ${results.map(item =&gt; `&#10;                                    &lt;div class=&quot;result-item&quot;&gt;&#10;                                        &lt;a href=&quot;${item.url}&quot;&gt;&#10;                                            &lt;h5&gt;${item.title || item.name}&lt;/h5&gt;&#10;                                            &lt;p class=&quot;result-type&quot;&gt;${item.type.charAt(0).toUpperCase() + item.type.slice(1)}&lt;/p&gt;&#10;                                            &lt;p class=&quot;result-desc&quot;&gt;${(item.description || item.excerpt || item.bio || '').substring(0, 100)}...&lt;/p&gt;&#10;                                        &lt;/a&gt;&#10;                                    &lt;/div&gt;&#10;                                `).join('')}&#10;                            &lt;/div&gt;&#10;                        `;&#10;                    } else {&#10;                        resultsContainer.innerHTML = `&#10;                            &lt;div class=&quot;no-results&quot;&gt;&#10;                                &lt;p&gt;No results found for &quot;${query}&quot;. Try different keywords or browse our &lt;a href=&quot;games.html&quot;&gt;games&lt;/a&gt;, &lt;a href=&quot;blogs.html&quot;&gt;blog&lt;/a&gt;, or &lt;a href=&quot;team.html&quot;&gt;team&lt;/a&gt; pages.&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        `;&#10;                    }&#10;                } catch (error) {&#10;                    console.error('Search error:', error);&#10;                    resultsContainer.innerHTML = '&lt;div class=&quot;error-message&quot;&gt;Search is temporarily unavailable. Please try again later.&lt;/div&gt;';&#10;                }&#10;            };&#10;&#10;            searchBtn.addEventListener('click', performSearch);&#10;            searchInput.addEventListener('keypress', (e) =&gt; {&#10;                if (e.key === 'Enter') {&#10;                    performSearch();&#10;                }&#10;            });&#10;        }&#10;&#10;        async function loadPopularContent() {&#10;            try {&#10;                // Load popular games&#10;                const gamesResponse = await fetch('data/games.json');&#10;                const games = await gamesResponse.json();&#10;                const popularGames = games.slice(0, 3);&#10;&#10;                const gamesContainer = document.querySelector('#popular-games .popular-items');&#10;                gamesContainer.innerHTML = popularGames.map(game =&gt; `&#10;                    &lt;div class=&quot;popular-item&quot;&gt;&#10;                        &lt;a href=&quot;${game.detailPath}&quot;&gt;&#10;                            &lt;img src=&quot;${game.thumbnail}&quot; alt=&quot;${game.title}&quot; loading=&quot;lazy&quot;&gt;&#10;                            &lt;div class=&quot;item-info&quot;&gt;&#10;                                &lt;h5&gt;${game.title}&lt;/h5&gt;&#10;                                &lt;p&gt;${game.genre}&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                `).join('');&#10;&#10;                // Load popular blogs&#10;                const blogsResponse = await fetch('data/blogs.json');&#10;                const blogs = await blogsResponse.json();&#10;                const popularBlogs = blogs.slice(0, 3);&#10;&#10;                const blogsContainer = document.querySelector('#popular-blogs .popular-items');&#10;                blogsContainer.innerHTML = popularBlogs.map(blog =&gt; `&#10;                    &lt;div class=&quot;popular-item&quot;&gt;&#10;                        &lt;a href=&quot;${blog.detailPath}&quot;&gt;&#10;                            &lt;img src=&quot;${blog.thumbnail}&quot; alt=&quot;${blog.title}&quot; loading=&quot;lazy&quot;&gt;&#10;                            &lt;div class=&quot;item-info&quot;&gt;&#10;                                &lt;h5&gt;${blog.title}&lt;/h5&gt;&#10;                                &lt;p&gt;By ${blog.author}&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                `).join('');&#10;&#10;            } catch (error) {&#10;                console.error('Error loading popular content:', error);&#10;            }&#10;        }&#10;    &lt;/script&gt;&#10;&#10;    &lt;style&gt;&#10;        /* 404 Page Specific Styles */&#10;        .error-page {&#10;            text-align: center;&#10;            padding: 2rem 0;&#10;        }&#10;&#10;        .error-content {&#10;            display: grid;&#10;            grid-template-columns: 1fr 1fr;&#10;            gap: 3rem;&#10;            align-items: center;&#10;            margin-bottom: 3rem;&#10;        }&#10;&#10;        .error-code {&#10;            font-size: 8rem;&#10;            font-weight: 700;&#10;            color: var(--primary-red);&#10;            margin: 0;&#10;            line-height: 1;&#10;        }&#10;&#10;        .error-icon {&#10;            font-size: 4rem;&#10;            margin-top: 1rem;&#10;        }&#10;&#10;        .error-text h2 {&#10;            color: var(--charcoal-black);&#10;            margin-bottom: 1rem;&#10;        }&#10;&#10;        .error-text p {&#10;            color: var(--steel-grey);&#10;            font-size: 1.125rem;&#10;            margin-bottom: 2rem;&#10;        }&#10;&#10;        .error-actions {&#10;            display: flex;&#10;            gap: 1rem;&#10;            justify-content: center;&#10;            flex-wrap: wrap;&#10;        }&#10;&#10;        .error-search {&#10;            background: var(--off-white);&#10;            padding: 2rem;&#10;            border-radius: var(--border-radius);&#10;            margin-bottom: 2rem;&#10;        }&#10;&#10;        .search-form {&#10;            display: flex;&#10;            gap: 1rem;&#10;            max-width: 400px;&#10;            margin: 0 auto 2rem;&#10;        }&#10;&#10;        .search-results {&#10;            max-width: 600px;&#10;            margin: 0 auto;&#10;        }&#10;&#10;        .results-list {&#10;            display: grid;&#10;            gap: 1rem;&#10;        }&#10;&#10;        .result-item {&#10;            background: var(--white);&#10;            border-radius: var(--border-radius);&#10;            padding: 1rem;&#10;            text-align: left;&#10;            box-shadow: var(--box-shadow);&#10;        }&#10;&#10;        .result-item a {&#10;            color: inherit;&#10;            text-decoration: none;&#10;        }&#10;&#10;        .result-item h5 {&#10;            color: var(--primary-red);&#10;            margin-bottom: 0.25rem;&#10;        }&#10;&#10;        .result-type {&#10;            color: var(--steel-grey);&#10;            font-size: 0.75rem;&#10;            text-transform: uppercase;&#10;            font-weight: 600;&#10;            margin-bottom: 0.5rem;&#10;        }&#10;&#10;        .result-desc {&#10;            color: var(--steel-grey);&#10;            font-size: 0.875rem;&#10;            margin: 0;&#10;        }&#10;&#10;        .links-grid {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;            gap: 2rem;&#10;            text-align: left;&#10;        }&#10;&#10;        .link-category h4 {&#10;            color: var(--primary-red);&#10;            margin-bottom: 1rem;&#10;            border-bottom: 2px solid var(--primary-red);&#10;            padding-bottom: 0.5rem;&#10;        }&#10;&#10;        .link-category ul {&#10;            list-style: none;&#10;            padding: 0;&#10;        }&#10;&#10;        .link-category li {&#10;            margin-bottom: 0.5rem;&#10;        }&#10;&#10;        .popular-grid {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;            gap: 2rem;&#10;            text-align: left;&#10;        }&#10;&#10;        .popular-section h4 {&#10;            color: var(--primary-red);&#10;            margin-bottom: 1rem;&#10;            border-bottom: 1px solid var(--primary-red);&#10;            padding-bottom: 0.5rem;&#10;        }&#10;&#10;        .popular-item {&#10;            display: flex;&#10;            gap: 1rem;&#10;            background: var(--off-white);&#10;            padding: 1rem;&#10;            border-radius: var(--border-radius);&#10;            margin-bottom: 1rem;&#10;        }&#10;&#10;        .popular-item img {&#10;            width: 60px;&#10;            height: 60px;&#10;            object-fit: cover;&#10;            border-radius: var(--border-radius);&#10;        }&#10;&#10;        .popular-item a {&#10;            color: inherit;&#10;            text-decoration: none;&#10;            display: flex;&#10;            gap: 1rem;&#10;            width: 100%;&#10;        }&#10;&#10;        .item-info h5 {&#10;            color: var(--charcoal-black);&#10;            margin-bottom: 0.25rem;&#10;        }&#10;&#10;        .item-info p {&#10;            color: var(--steel-grey);&#10;            font-size: 0.875rem;&#10;            margin: 0;&#10;        }&#10;&#10;        @media (max-width: 768px) {&#10;            .error-content {&#10;                grid-template-columns: 1fr;&#10;                gap: 2rem;&#10;            }&#10;&#10;            .error-code {&#10;                font-size: 6rem;&#10;            }&#10;&#10;            .search-form {&#10;                flex-direction: column;&#10;            }&#10;&#10;            .links-grid {&#10;                grid-template-columns: 1fr;&#10;            }&#10;&#10;            .popular-grid {&#10;                grid-template-columns: 1fr;&#10;            }&#10;&#10;            .error-actions {&#10;                flex-direction: column;&#10;                align-items: center;&#10;            }&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/css/awards-detail.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/css/awards-detail.css" />
              <option name="updatedContent" value="/**&#10; * Awards Detail Page Styles - Atlas Games&#10; */&#10;&#10;/* Award Detail */&#10;.award-detail {&#10;    max-width: 1000px;&#10;    margin: 0 auto;&#10;}&#10;&#10;/* Award Header */&#10;.award-header {&#10;    background: linear-gradient(135deg, var(--off-white) 0%, var(--white) 100%);&#10;    border-radius: var(--border-radius);&#10;    padding: 3rem 2rem;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.award-hero {&#10;    display: grid;&#10;    grid-template-columns: 300px 1fr;&#10;    gap: 3rem;&#10;    align-items: center;&#10;}&#10;&#10;.award-image {&#10;    position: relative;&#10;    text-align: center;&#10;}&#10;&#10;.award-image img {&#10;    width: 250px;&#10;    height: 250px;&#10;    object-fit: cover;&#10;    border-radius: 50%;&#10;    border: 4px solid var(--primary-red);&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;.award-rank {&#10;    position: absolute;&#10;    top: -10px;&#10;    right: 20px;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    padding: 0.5rem 1rem;&#10;    border-radius: 20px;&#10;    font-weight: 700;&#10;    font-size: 0.875rem;&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;.rank-1st-place {&#10;    background: #FFD700;&#10;    color: var(--charcoal-black);&#10;}&#10;&#10;.rank-2nd-place {&#10;    background: #C0C0C0;&#10;    color: var(--charcoal-black);&#10;}&#10;&#10;.rank-3rd-place {&#10;    background: #CD7F32;&#10;    color: var(--white);&#10;}&#10;&#10;.award-info h1 {&#10;    font-size: 2.5rem;&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.award-meta {&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.meta-item {&#10;    display: flex;&#10;    align-items: center;&#10;    margin-bottom: 0.75rem;&#10;}&#10;&#10;.meta-label {&#10;    font-weight: 600;&#10;    color: var(--steel-grey);&#10;    min-width: 120px;&#10;    margin-right: 1rem;&#10;}&#10;&#10;.meta-value {&#10;    color: var(--charcoal-black);&#10;    font-weight: 500;&#10;}&#10;&#10;.rank-badge {&#10;    padding: 0.25rem 0.75rem;&#10;    border-radius: 15px;&#10;    font-size: 0.75rem;&#10;    font-weight: 700;&#10;    color: var(--white);&#10;}&#10;&#10;.award-description {&#10;    font-size: 1.125rem;&#10;    line-height: 1.6;&#10;    color: var(--steel-grey);&#10;}&#10;&#10;/* Related Game Section */&#10;.related-game-section {&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.related-game-section h2 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1.5rem;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.linked-game-card {&#10;    display: grid;&#10;    grid-template-columns: 200px 1fr;&#10;    gap: 2rem;&#10;    background: var(--off-white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;    align-items: start;&#10;}&#10;&#10;.game-image {&#10;    width: 100%;&#10;    height: 150px;&#10;    object-fit: cover;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;.game-info h3 {&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.game-info h3 a {&#10;    color: var(--charcoal-black);&#10;    text-decoration: none;&#10;}&#10;&#10;.game-info h3 a:hover {&#10;    color: var(--primary-red);&#10;}&#10;&#10;.game-meta {&#10;    color: var(--steel-grey);&#10;    font-size: 0.875rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.game-description {&#10;    margin-bottom: 1rem;&#10;    line-height: 1.6;&#10;}&#10;&#10;.game-tags {&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    gap: 0.5rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.game-actions {&#10;    display: flex;&#10;    gap: 0.5rem;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;/* Team Section */&#10;.team-section {&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.team-section h2 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1.5rem;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.team-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 1.5rem;&#10;}&#10;&#10;.member-card {&#10;    background: var(--off-white);&#10;    padding: 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    text-align: center;&#10;    box-shadow: var(--box-shadow);&#10;    transition: var(--transition);&#10;}&#10;&#10;.member-card:hover {&#10;    transform: translateY(-4px);&#10;    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);&#10;}&#10;&#10;.member-image {&#10;    width: 80px;&#10;    height: 80px;&#10;    object-fit: cover;&#10;    border-radius: 50%;&#10;    border: 2px solid var(--primary-red);&#10;    margin: 0 auto 1rem;&#10;}&#10;&#10;.member-info h4 {&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.member-info h4 a {&#10;    color: var(--charcoal-black);&#10;    text-decoration: none;&#10;}&#10;&#10;.member-info h4 a:hover {&#10;    color: var(--primary-red);&#10;}&#10;&#10;.member-role {&#10;    color: var(--primary-red);&#10;    font-weight: 600;&#10;    font-size: 0.875rem;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.member-contribution {&#10;    color: var(--steel-grey);&#10;    font-size: 0.8rem;&#10;    margin: 0;&#10;}&#10;&#10;/* Award Story */&#10;.award-story {&#10;    background: var(--white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;    border-left: 4px solid var(--primary-red);&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.award-story h2 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.story-content {&#10;    font-size: 1rem;&#10;    line-height: 1.7;&#10;    color: var(--charcoal-black);&#10;}&#10;&#10;.achievement-stats {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));&#10;    gap: 1.5rem;&#10;    margin-top: 2rem;&#10;    padding-top: 2rem;&#10;    border-top: 1px solid var(--off-white);&#10;}&#10;&#10;.stat-item {&#10;    text-align: center;&#10;    background: var(--off-white);&#10;    padding: 1rem;&#10;    border-radius: var(--border-radius);&#10;}&#10;&#10;.stat-label {&#10;    display: block;&#10;    color: var(--steel-grey);&#10;    font-size: 0.75rem;&#10;    text-transform: uppercase;&#10;    font-weight: 600;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.stat-value {&#10;    display: block;&#10;    color: var(--charcoal-black);&#10;    font-size: 1.125rem;&#10;    font-weight: 700;&#10;}&#10;&#10;/* Competition Info */&#10;.competition-info {&#10;    background: var(--off-white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.competition-info h2 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.competition-content {&#10;    font-size: 1rem;&#10;    line-height: 1.7;&#10;    color: var(--charcoal-black);&#10;}&#10;&#10;/* Award Actions */&#10;.award-actions {&#10;    text-align: center;&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.actions-grid {&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 1rem;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;/* Related Awards */&#10;.related-awards {&#10;    background: var(--off-white);&#10;    padding: 3rem 2rem;&#10;    border-radius: var(--border-radius);&#10;}&#10;&#10;.related-awards h2 {&#10;    text-align: center;&#10;    color: var(--primary-red);&#10;    margin-bottom: 2rem;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 1rem;&#10;}&#10;&#10;/* Toast Messages */&#10;.toast-message {&#10;    position: fixed;&#10;    bottom: 2rem;&#10;    right: 2rem;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    padding: 1rem 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;    z-index: 1000;&#10;    animation: slideInUp 0.3s ease-out;&#10;}&#10;&#10;@keyframes slideInUp {&#10;    from {&#10;        transform: translateY(100%);&#10;        opacity: 0;&#10;    }&#10;    to {&#10;        transform: translateY(0);&#10;        opacity: 1;&#10;    }&#10;}&#10;&#10;/* Responsive Design */&#10;@media (max-width: 768px) {&#10;    .award-hero {&#10;        grid-template-columns: 1fr;&#10;        gap: 2rem;&#10;        text-align: center;&#10;    }&#10;    &#10;    .award-image img {&#10;        width: 200px;&#10;        height: 200px;&#10;    }&#10;    &#10;    .award-rank {&#10;        top: -5px;&#10;        right: 50%;&#10;        transform: translateX(50%);&#10;    }&#10;    &#10;    .award-info h1 {&#10;        font-size: 2rem;&#10;    }&#10;    &#10;    .meta-item {&#10;        flex-direction: column;&#10;        align-items: center;&#10;        text-align: center;&#10;        gap: 0.25rem;&#10;    }&#10;    &#10;    .meta-label {&#10;        min-width: auto;&#10;        margin-right: 0;&#10;    }&#10;    &#10;    .linked-game-card {&#10;        grid-template-columns: 1fr;&#10;        gap: 1rem;&#10;        text-align: center;&#10;    }&#10;    &#10;    .team-grid {&#10;        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;    }&#10;    &#10;    .achievement-stats {&#10;        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));&#10;        gap: 1rem;&#10;    }&#10;    &#10;    .actions-grid {&#10;        flex-direction: column;&#10;        align-items: center;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    .award-header {&#10;        padding: 2rem 1rem;&#10;    }&#10;    &#10;    .award-info h1 {&#10;        font-size: 1.75rem;&#10;    }&#10;    &#10;    .award-image img {&#10;        width: 150px;&#10;        height: 150px;&#10;    }&#10;    &#10;    .team-grid {&#10;        grid-template-columns: 1fr;&#10;    }&#10;    &#10;    .achievement-stats {&#10;        grid-template-columns: 1fr;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/css/blogs-detail.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/css/blogs-detail.css" />
              <option name="updatedContent" value="/**&#10; * Blog Detail Page Styles - Atlas Games&#10; */&#10;&#10;/* Blog Article */&#10;.blog-article {&#10;    max-width: 800px;&#10;    margin: 0 auto;&#10;}&#10;&#10;/* Article Header */&#10;.article-header {&#10;    text-align: center;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.article-meta {&#10;    display: flex;&#10;    justify-content: center;&#10;    flex-wrap: wrap;&#10;    gap: 1rem;&#10;    margin-bottom: 1rem;&#10;    font-size: 0.875rem;&#10;    color: var(--steel-grey);&#10;}&#10;&#10;.article-meta span {&#10;    background: var(--off-white);&#10;    padding: 0.5rem 1rem;&#10;    border-radius: 20px;&#10;}&#10;&#10;.blog-article h1 {&#10;    font-size: 2.5rem;&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 1rem;&#10;    line-height: 1.2;&#10;}&#10;&#10;.article-excerpt {&#10;    font-size: 1.125rem;&#10;    color: var(--steel-grey);&#10;    line-height: 1.6;&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.article-tags {&#10;    display: flex;&#10;    justify-content: center;&#10;    flex-wrap: wrap;&#10;    gap: 0.5rem;&#10;}&#10;&#10;/* Featured Image */&#10;.featured-image {&#10;    margin-bottom: 3rem;&#10;    text-align: center;&#10;}&#10;&#10;.featured-image img {&#10;    width: 100%;&#10;    max-height: 400px;&#10;    object-fit: cover;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;/* Article Content */&#10;.article-content {&#10;    font-size: 1.125rem;&#10;    line-height: 1.7;&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.article-content h2,&#10;.article-content h3,&#10;.article-content h4 {&#10;    color: var(--primary-red);&#10;    margin-top: 2rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.article-content h2 {&#10;    font-size: 1.75rem;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.article-content h3 {&#10;    font-size: 1.5rem;&#10;}&#10;&#10;.article-content h4 {&#10;    font-size: 1.25rem;&#10;}&#10;&#10;.article-content p {&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.article-content ul,&#10;.article-content ol {&#10;    margin-bottom: 1.5rem;&#10;    padding-left: 2rem;&#10;}&#10;&#10;.article-content li {&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.article-content blockquote {&#10;    background: var(--off-white);&#10;    border-left: 4px solid var(--primary-red);&#10;    padding: 1.5rem;&#10;    margin: 2rem 0;&#10;    font-style: italic;&#10;    border-radius: 0 var(--border-radius) var(--border-radius) 0;&#10;}&#10;&#10;.article-content code {&#10;    background: var(--off-white);&#10;    padding: 0.25rem 0.5rem;&#10;    border-radius: 4px;&#10;    font-family: 'Courier New', monospace;&#10;    font-size: 0.875rem;&#10;    color: var(--primary-red);&#10;}&#10;&#10;.article-content pre {&#10;    background: var(--charcoal-black);&#10;    color: var(--white);&#10;    padding: 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    overflow-x: auto;&#10;    margin: 1.5rem 0;&#10;}&#10;&#10;.article-content pre code {&#10;    background: none;&#10;    color: var(--white);&#10;    padding: 0;&#10;}&#10;&#10;.article-content img {&#10;    max-width: 100%;&#10;    height: auto;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;    margin: 1.5rem 0;&#10;}&#10;&#10;.article-content a {&#10;    color: var(--primary-red);&#10;    text-decoration: underline;&#10;}&#10;&#10;.article-content a:hover {&#10;    color: var(--charcoal-black);&#10;}&#10;&#10;/* Article Footer */&#10;.article-footer {&#10;    border-top: 2px solid var(--off-white);&#10;    padding-top: 2rem;&#10;    text-align: center;&#10;}&#10;&#10;.article-actions {&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 1rem;&#10;    margin-bottom: 2rem;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;.related-links {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;    gap: 2rem;&#10;    margin-top: 2rem;&#10;}&#10;&#10;.related-game,&#10;.related-team {&#10;    background: var(--off-white);&#10;    padding: 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    text-align: center;&#10;}&#10;&#10;.related-game h3,&#10;.related-team h3 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1rem;&#10;    font-size: 1rem;&#10;    text-transform: uppercase;&#10;    font-weight: 600;&#10;}&#10;&#10;.related-link {&#10;    display: inline-block;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    padding: 0.75rem 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    text-decoration: none;&#10;    font-weight: 500;&#10;    transition: var(--transition);&#10;}&#10;&#10;.related-link:hover {&#10;    background: var(--charcoal-black);&#10;    color: var(--white);&#10;}&#10;&#10;/* Related Articles */&#10;.related-articles {&#10;    background: var(--off-white);&#10;    padding: 3rem 2rem;&#10;    border-radius: var(--border-radius);&#10;    margin-top: 3rem;&#10;}&#10;&#10;.related-articles h2 {&#10;    text-align: center;&#10;    color: var(--primary-red);&#10;    margin-bottom: 2rem;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 1rem;&#10;}&#10;&#10;/* Toast Messages */&#10;.toast-message {&#10;    position: fixed;&#10;    bottom: 2rem;&#10;    right: 2rem;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    padding: 1rem 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;    z-index: 1000;&#10;    animation: slideInUp 0.3s ease-out;&#10;}&#10;&#10;@keyframes slideInUp {&#10;    from {&#10;        transform: translateY(100%);&#10;        opacity: 0;&#10;    }&#10;    to {&#10;        transform: translateY(0);&#10;        opacity: 1;&#10;    }&#10;}&#10;&#10;/* Reading Progress Bar */&#10;.reading-progress {&#10;    position: fixed;&#10;    top: 0;&#10;    left: 0;&#10;    width: 0%;&#10;    height: 3px;&#10;    background: var(--primary-red);&#10;    z-index: 1000;&#10;    transition: width 0.1s ease;&#10;}&#10;&#10;/* Table of Contents */&#10;.table-of-contents {&#10;    background: var(--off-white);&#10;    padding: 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    margin: 2rem 0;&#10;    border-left: 4px solid var(--primary-red);&#10;}&#10;&#10;.table-of-contents h3 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1rem;&#10;    font-size: 1rem;&#10;    text-transform: uppercase;&#10;}&#10;&#10;.table-of-contents ul {&#10;    list-style: none;&#10;    padding-left: 0;&#10;    margin: 0;&#10;}&#10;&#10;.table-of-contents li {&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.table-of-contents a {&#10;    color: var(--charcoal-black);&#10;    text-decoration: none;&#10;    padding: 0.25rem 0;&#10;    display: block;&#10;    transition: var(--transition);&#10;}&#10;&#10;.table-of-contents a:hover {&#10;    color: var(--primary-red);&#10;    padding-left: 1rem;&#10;}&#10;&#10;/* Responsive Design */&#10;@media (max-width: 768px) {&#10;    .blog-article {&#10;        padding: 0 1rem;&#10;    }&#10;    &#10;    .blog-article h1 {&#10;        font-size: 2rem;&#10;    }&#10;    &#10;    .article-content {&#10;        font-size: 1rem;&#10;    }&#10;    &#10;    .article-meta {&#10;        flex-direction: column;&#10;        align-items: center;&#10;    }&#10;    &#10;    .article-actions {&#10;        flex-direction: column;&#10;        align-items: center;&#10;    }&#10;    &#10;    .related-links {&#10;        grid-template-columns: 1fr;&#10;    }&#10;    &#10;    .related-articles {&#10;        padding: 2rem 1rem;&#10;    }&#10;    &#10;    .article-content pre {&#10;        padding: 1rem;&#10;        font-size: 0.875rem;&#10;    }&#10;    &#10;    .article-content blockquote {&#10;        padding: 1rem;&#10;        margin: 1rem 0;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    .blog-article h1 {&#10;        font-size: 1.75rem;&#10;    }&#10;    &#10;    .article-excerpt {&#10;        font-size: 1rem;&#10;    }&#10;    &#10;    .featured-image img {&#10;        max-height: 250px;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/css/games-detail.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/css/games-detail.css" />
              <option name="updatedContent" value="/**&#10; * Game Detail Page Styles - Atlas Games&#10; */&#10;&#10;/* Breadcrumbs */&#10;.breadcrumbs {&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.breadcrumbs ol {&#10;    list-style: none;&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;    font-size: 0.875rem;&#10;    color: var(--steel-grey);&#10;}&#10;&#10;.breadcrumbs li:not(:last-child)::after {&#10;    content: &quot;/&quot;;&#10;    margin-left: 0.5rem;&#10;    color: var(--steel-grey);&#10;}&#10;&#10;.breadcrumbs a {&#10;    color: var(--steel-grey);&#10;    text-decoration: none;&#10;}&#10;&#10;.breadcrumbs a:hover {&#10;    color: var(--primary-red);&#10;}&#10;&#10;/* Game Header */&#10;.game-header {&#10;    background: linear-gradient(135deg, var(--off-white) 0%, var(--white) 100%);&#10;    border-radius: var(--border-radius);&#10;    padding: 3rem 2rem;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.game-hero {&#10;    display: grid;&#10;    grid-template-columns: 2fr 1fr;&#10;    gap: 3rem;&#10;    align-items: center;&#10;}&#10;&#10;.game-info h1 {&#10;    font-size: 3rem;&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.game-meta {&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    gap: 1rem;&#10;    margin-bottom: 1.5rem;&#10;    font-size: 0.875rem;&#10;}&#10;&#10;.game-meta span {&#10;    background: var(--white);&#10;    padding: 0.5rem 1rem;&#10;    border-radius: 20px;&#10;    border: 1px solid var(--steel-grey);&#10;}&#10;&#10;.status {&#10;    font-weight: 600;&#10;    color: var(--white);&#10;    border: none !important;&#10;}&#10;&#10;.status-released {&#10;    background: #4CAF50;&#10;}&#10;&#10;.status-in-development {&#10;    background: #FF9800;&#10;}&#10;&#10;.status-beta {&#10;    background: #2196F3;&#10;}&#10;&#10;.status-coming-soon {&#10;    background: var(--primary-red);&#10;}&#10;&#10;.game-platforms {&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    gap: 0.5rem;&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.platform-badge {&#10;    background: var(--charcoal-black);&#10;    color: var(--white);&#10;    padding: 0.25rem 0.75rem;&#10;    border-radius: 15px;&#10;    font-size: 0.75rem;&#10;    font-weight: 500;&#10;}&#10;&#10;.game-description {&#10;    font-size: 1.125rem;&#10;    line-height: 1.6;&#10;    color: var(--steel-grey);&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.game-actions {&#10;    display: flex;&#10;    gap: 1rem;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;.game-thumbnail {&#10;    text-align: center;&#10;}&#10;&#10;.game-thumbnail img {&#10;    width: 100%;&#10;    max-width: 400px;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;/* Screenshots Gallery */&#10;.screenshots-section {&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.screenshots-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;    gap: 1rem;&#10;}&#10;&#10;.screenshot-thumb {&#10;    width: 100%;&#10;    height: 150px;&#10;    object-fit: cover;&#10;    border-radius: var(--border-radius);&#10;    cursor: pointer;&#10;    transition: var(--transition);&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;.screenshot-thumb:hover {&#10;    transform: scale(1.05);&#10;    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);&#10;}&#10;&#10;/* Trailer Section */&#10;.trailer-section {&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.trailer-container {&#10;    position: relative;&#10;    width: 100%;&#10;    height: 0;&#10;    padding-bottom: 56.25%; /* 16:9 aspect ratio */&#10;    background: var(--charcoal-black);&#10;    border-radius: var(--border-radius);&#10;    overflow: hidden;&#10;}&#10;&#10;.trailer-container iframe {&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;}&#10;&#10;/* Game Details */&#10;.game-details {&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.game-description-full {&#10;    font-size: 1rem;&#10;    line-height: 1.7;&#10;    margin-bottom: 2rem;&#10;    white-space: pre-line;&#10;}&#10;&#10;.game-specs {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;    gap: 2rem;&#10;    background: var(--off-white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;}&#10;&#10;.spec-item h3 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 0.5rem;&#10;    font-size: 0.875rem;&#10;    text-transform: uppercase;&#10;    font-weight: 600;&#10;}&#10;&#10;.spec-item p {&#10;    margin: 0;&#10;    color: var(--charcoal-black);&#10;    font-weight: 500;&#10;}&#10;&#10;.platforms-list,&#10;.tags-list {&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.platforms-list .platform-badge,&#10;.tags-list .tag {&#10;    font-size: 0.75rem;&#10;}&#10;&#10;/* Related Content */&#10;.related-content {&#10;    background: var(--off-white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;}&#10;&#10;.related-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;    gap: 2rem;&#10;}&#10;&#10;.related-blogs h3,&#10;.patch-notes h3 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1rem;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.related-item {&#10;    background: var(--white);&#10;    padding: 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    margin-bottom: 1rem;&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;.related-item h4 {&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.related-item h4 a {&#10;    color: var(--charcoal-black);&#10;    text-decoration: none;&#10;}&#10;&#10;.related-item h4 a:hover {&#10;    color: var(--primary-red);&#10;}&#10;&#10;.related-item p {&#10;    color: var(--steel-grey);&#10;    font-size: 0.875rem;&#10;    margin: 0;&#10;}&#10;&#10;/* Lightbox Modal */&#10;.lightbox-modal {&#10;    display: none;&#10;    position: fixed;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    background: rgba(0, 0, 0, 0.9);&#10;    z-index: 10000;&#10;    align-items: center;&#10;    justify-content: center;&#10;}&#10;&#10;.lightbox-content {&#10;    position: relative;&#10;    max-width: 90vw;&#10;    max-height: 90vh;&#10;    display: flex;&#10;    flex-direction: column;&#10;    align-items: center;&#10;}&#10;&#10;.lightbox-close {&#10;    position: absolute;&#10;    top: -40px;&#10;    right: 0;&#10;    background: none;&#10;    border: none;&#10;    color: var(--white);&#10;    font-size: 2rem;&#10;    cursor: pointer;&#10;    z-index: 10001;&#10;}&#10;&#10;#lightbox-image {&#10;    max-width: 100%;&#10;    max-height: 80vh;&#10;    object-fit: contain;&#10;    border-radius: var(--border-radius);&#10;}&#10;&#10;.lightbox-caption {&#10;    color: var(--white);&#10;    text-align: center;&#10;    margin-top: 1rem;&#10;    font-size: 1rem;&#10;}&#10;&#10;.lightbox-nav {&#10;    position: absolute;&#10;    top: 50%;&#10;    transform: translateY(-50%);&#10;    display: flex;&#10;    justify-content: space-between;&#10;    width: 100%;&#10;    pointer-events: none;&#10;}&#10;&#10;.lightbox-prev,&#10;.lightbox-next {&#10;    background: rgba(255, 255, 255, 0.1);&#10;    border: none;&#10;    color: var(--white);&#10;    font-size: 2rem;&#10;    padding: 1rem;&#10;    cursor: pointer;&#10;    pointer-events: all;&#10;    transition: var(--transition);&#10;    border-radius: 50%;&#10;}&#10;&#10;.lightbox-prev:hover,&#10;.lightbox-next:hover {&#10;    background: rgba(255, 255, 255, 0.2);&#10;}&#10;&#10;.lightbox-prev {&#10;    margin-left: -60px;&#10;}&#10;&#10;.lightbox-next {&#10;    margin-right: -60px;&#10;}&#10;&#10;/* Toast Messages */&#10;.toast-message {&#10;    position: fixed;&#10;    bottom: 2rem;&#10;    right: 2rem;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    padding: 1rem 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;    z-index: 1000;&#10;    animation: slideInUp 0.3s ease-out;&#10;}&#10;&#10;@keyframes slideInUp {&#10;    from {&#10;        transform: translateY(100%);&#10;        opacity: 0;&#10;    }&#10;    to {&#10;        transform: translateY(0);&#10;        opacity: 1;&#10;    }&#10;}&#10;&#10;/* Responsive Design */&#10;@media (max-width: 768px) {&#10;    .game-hero {&#10;        grid-template-columns: 1fr;&#10;        gap: 2rem;&#10;        text-align: center;&#10;    }&#10;    &#10;    .game-info h1 {&#10;        font-size: 2rem;&#10;    }&#10;    &#10;    .game-header {&#10;        padding: 2rem 1rem;&#10;    }&#10;    &#10;    .game-actions {&#10;        justify-content: center;&#10;    }&#10;    &#10;    .screenshots-grid {&#10;        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));&#10;    }&#10;    &#10;    .game-specs {&#10;        grid-template-columns: 1fr;&#10;        gap: 1rem;&#10;    }&#10;    &#10;    .related-grid {&#10;        grid-template-columns: 1fr;&#10;    }&#10;    &#10;    .lightbox-prev,&#10;    .lightbox-next {&#10;        font-size: 1.5rem;&#10;        padding: 0.5rem;&#10;    }&#10;    &#10;    .lightbox-prev {&#10;        margin-left: -40px;&#10;    }&#10;    &#10;    .lightbox-next {&#10;        margin-right: -40px;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/css/patch-notes.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/css/patch-notes.css" />
              <option name="updatedContent" value="/**&#10; * Patch Notes Page Styles - Atlas Games&#10; */&#10;&#10;/* Patch Notes Article */&#10;.patch-notes-article {&#10;    max-width: 800px;&#10;    margin: 0 auto;&#10;}&#10;&#10;/* Patch Header */&#10;.patch-header {&#10;    background: linear-gradient(135deg, var(--off-white) 0%, var(--white) 100%);&#10;    border-radius: var(--border-radius);&#10;    padding: 2rem;&#10;    margin-bottom: 2rem;&#10;    text-align: center;&#10;}&#10;&#10;.patch-meta {&#10;    display: flex;&#10;    justify-content: center;&#10;    flex-wrap: wrap;&#10;    gap: 1rem;&#10;    margin-bottom: 1rem;&#10;    font-size: 0.875rem;&#10;}&#10;&#10;.patch-meta span {&#10;    background: var(--white);&#10;    padding: 0.5rem 1rem;&#10;    border-radius: 20px;&#10;    border: 1px solid var(--steel-grey);&#10;}&#10;&#10;.game-name {&#10;    background: var(--primary-red) !important;&#10;    color: var(--white) !important;&#10;    border: none !important;&#10;    font-weight: 600;&#10;}&#10;&#10;.version {&#10;    background: var(--charcoal-black) !important;&#10;    color: var(--white) !important;&#10;    border: none !important;&#10;    font-weight: 600;&#10;}&#10;&#10;.patch-header h1 {&#10;    font-size: 2.25rem;&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.related-game-link {&#10;    margin-top: 1rem;&#10;}&#10;&#10;/* Patch Video */&#10;.patch-video {&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.patch-video h2 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1rem;&#10;    text-align: center;&#10;}&#10;&#10;.video-container {&#10;    position: relative;&#10;    width: 100%;&#10;    height: 0;&#10;    padding-bottom: 56.25%; /* 16:9 aspect ratio */&#10;    background: var(--charcoal-black);&#10;    border-radius: var(--border-radius);&#10;    overflow: hidden;&#10;}&#10;&#10;.video-container iframe {&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;}&#10;&#10;/* Patch Content */&#10;.patch-content {&#10;    font-size: 1rem;&#10;    line-height: 1.7;&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.patch-content h2 {&#10;    color: var(--primary-red);&#10;    font-size: 1.5rem;&#10;    margin-top: 2rem;&#10;    margin-bottom: 1rem;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.patch-content h3 {&#10;    color: var(--charcoal-black);&#10;    font-size: 1.25rem;&#10;    margin-top: 1.5rem;&#10;    margin-bottom: 0.75rem;&#10;}&#10;&#10;.patch-content h4 {&#10;    color: var(--steel-grey);&#10;    font-size: 1.125rem;&#10;    margin-top: 1rem;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.patch-content ul,&#10;.patch-content ol {&#10;    margin-bottom: 1.5rem;&#10;    padding-left: 2rem;&#10;}&#10;&#10;.patch-content li {&#10;    margin-bottom: 0.5rem;&#10;    line-height: 1.6;&#10;}&#10;&#10;.patch-content p {&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.patch-content strong {&#10;    color: var(--primary-red);&#10;    font-weight: 600;&#10;}&#10;&#10;.patch-content code {&#10;    background: var(--off-white);&#10;    padding: 0.25rem 0.5rem;&#10;    border-radius: 4px;&#10;    font-family: 'Courier New', monospace;&#10;    font-size: 0.875rem;&#10;    color: var(--primary-red);&#10;}&#10;&#10;.patch-content pre {&#10;    background: var(--charcoal-black);&#10;    color: var(--white);&#10;    padding: 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    overflow-x: auto;&#10;    margin: 1.5rem 0;&#10;    position: relative;&#10;}&#10;&#10;.patch-content pre code {&#10;    background: none;&#10;    color: var(--white);&#10;    padding: 0;&#10;}&#10;&#10;.copy-code-btn {&#10;    position: absolute;&#10;    top: 0.5rem;&#10;    right: 0.5rem;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    border: none;&#10;    padding: 0.25rem 0.5rem;&#10;    border-radius: 4px;&#10;    font-size: 0.75rem;&#10;    cursor: pointer;&#10;    transition: var(--transition);&#10;}&#10;&#10;.copy-code-btn:hover {&#10;    background: var(--white);&#10;    color: var(--primary-red);&#10;}&#10;&#10;.patch-content blockquote {&#10;    background: var(--off-white);&#10;    border-left: 4px solid var(--primary-red);&#10;    padding: 1rem 1.5rem;&#10;    margin: 1.5rem 0;&#10;    font-style: italic;&#10;    border-radius: 0 var(--border-radius) var(--border-radius) 0;&#10;}&#10;&#10;/* Patch Navigation */&#10;.patch-navigation {&#10;    background: var(--off-white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.nav-grid {&#10;    display: grid;&#10;    grid-template-columns: 1fr 1fr;&#10;    gap: 2rem;&#10;}&#10;&#10;.nav-item {&#10;    min-height: 80px;&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.nav-item.prev {&#10;    justify-content: flex-start;&#10;}&#10;&#10;.nav-item.next {&#10;    justify-content: flex-end;&#10;}&#10;&#10;.nav-link {&#10;    display: block;&#10;    background: var(--white);&#10;    padding: 1rem 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    text-decoration: none;&#10;    transition: var(--transition);&#10;    box-shadow: var(--box-shadow);&#10;    max-width: 250px;&#10;}&#10;&#10;.nav-link:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);&#10;}&#10;&#10;.nav-direction {&#10;    display: block;&#10;    font-size: 0.75rem;&#10;    color: var(--steel-grey);&#10;    text-transform: uppercase;&#10;    font-weight: 600;&#10;    margin-bottom: 0.25rem;&#10;}&#10;&#10;.nav-title {&#10;    display: block;&#10;    color: var(--charcoal-black);&#10;    font-weight: 600;&#10;    margin-bottom: 0.25rem;&#10;    line-height: 1.3;&#10;}&#10;&#10;.nav-version {&#10;    display: block;&#10;    font-size: 0.875rem;&#10;    color: var(--primary-red);&#10;    font-weight: 600;&#10;}&#10;&#10;.nav-placeholder {&#10;    color: var(--steel-grey);&#10;    font-style: italic;&#10;    text-align: center;&#10;    padding: 1rem;&#10;}&#10;&#10;/* Patch Footer */&#10;.patch-footer {&#10;    background: var(--white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;    border-left: 4px solid var(--primary-red);&#10;    margin-bottom: 3rem;&#10;    text-align: center;&#10;}&#10;&#10;.footer-actions {&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 1rem;&#10;    margin-bottom: 2rem;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;.feedback-section h3 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.feedback-section p {&#10;    color: var(--steel-grey);&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;/* All Patches */&#10;.all-patches {&#10;    background: var(--off-white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;}&#10;&#10;.all-patches h2 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1.5rem;&#10;    text-align: center;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.patch-item {&#10;    background: var(--white);&#10;    border-radius: var(--border-radius);&#10;    margin-bottom: 1rem;&#10;    box-shadow: var(--box-shadow);&#10;    transition: var(--transition);&#10;}&#10;&#10;.patch-item:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);&#10;}&#10;&#10;.patch-link {&#10;    display: block;&#10;    padding: 1.5rem;&#10;    text-decoration: none;&#10;    color: inherit;&#10;}&#10;&#10;.patch-info h4 {&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 0.5rem;&#10;    font-size: 1rem;&#10;}&#10;&#10;.patch-info .patch-meta {&#10;    display: flex;&#10;    gap: 1rem;&#10;    font-size: 0.875rem;&#10;    color: var(--steel-grey);&#10;}&#10;&#10;.patch-info .version {&#10;    background: var(--charcoal-black);&#10;    color: var(--white);&#10;    padding: 0.25rem 0.5rem;&#10;    border-radius: 12px;&#10;    font-size: 0.75rem;&#10;    font-weight: 600;&#10;}&#10;&#10;/* Toast Messages */&#10;.toast-message {&#10;    position: fixed;&#10;    bottom: 2rem;&#10;    right: 2rem;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    padding: 1rem 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;    z-index: 1000;&#10;    animation: slideInUp 0.3s ease-out;&#10;}&#10;&#10;@keyframes slideInUp {&#10;    from {&#10;        transform: translateY(100%);&#10;        opacity: 0;&#10;    }&#10;    to {&#10;        transform: translateY(0);&#10;        opacity: 1;&#10;    }&#10;}&#10;&#10;/* Responsive Design */&#10;@media (max-width: 768px) {&#10;    .patch-header {&#10;        padding: 1.5rem 1rem;&#10;    }&#10;    &#10;    .patch-header h1 {&#10;        font-size: 1.75rem;&#10;    }&#10;    &#10;    .patch-meta {&#10;        flex-direction: column;&#10;        align-items: center;&#10;    }&#10;    &#10;    .nav-grid {&#10;        grid-template-columns: 1fr;&#10;        gap: 1rem;&#10;    }&#10;    &#10;    .nav-item {&#10;        justify-content: center;&#10;    }&#10;    &#10;    .nav-link {&#10;        max-width: 100%;&#10;        text-align: center;&#10;    }&#10;    &#10;    .footer-actions {&#10;        flex-direction: column;&#10;        align-items: center;&#10;    }&#10;    &#10;    .patch-content pre {&#10;        padding: 1rem;&#10;        font-size: 0.875rem;&#10;    }&#10;    &#10;    .copy-code-btn {&#10;        position: static;&#10;        margin-top: 0.5rem;&#10;        display: block;&#10;        width: 100%;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    .patch-header h1 {&#10;        font-size: 1.5rem;&#10;    }&#10;    &#10;    .patch-content {&#10;        font-size: 0.9rem;&#10;    }&#10;    &#10;    .patch-content h2 {&#10;        font-size: 1.25rem;&#10;    }&#10;    &#10;    .all-patches {&#10;        padding: 1rem;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/css/style.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/css/style.css" />
              <option name="originalContent" value="/* Poppins font import */&#10;@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&amp;display=swap');&#10;&#10;body {&#10;  font-family: 'Poppins', Arial, sans-serif;&#10;  background: #F2F2F2;&#10;  color: #121212;&#10;  margin: 0;&#10;  padding: 0;&#10;}&#10;&#10;#site-header {&#10;  background: #C62828;&#10;  color: #F2F2F2;&#10;}&#10;&#10;#main-nav a {&#10;  color: #F2F2F2;&#10;  text-decoration: none;&#10;  font-weight: 500;&#10;  padding: 0.25em 0.5em;&#10;  border-radius: 3px;&#10;  transition: background 0.2s, color 0.2s;&#10;}&#10;#main-nav a.active, #main-nav a:hover {&#10;  background: #F2F2F2;&#10;  color: #C62828;&#10;}&#10;&#10;#site-footer {&#10;  background: #121212;&#10;  color: #F2F2F2;&#10;}&#10;&#10;&#10;" />
              <option name="updatedContent" value="/**&#10; * Atlas Games - Main Stylesheet&#10; * Colors: Primary Crimson Red #C62828, Charcoal Black #121212&#10; * Secondary Steel Grey #4F4F4F, Off-White #F2F2F2&#10; * Font: Poppins (Google Fonts), fallback system-ui, Arial&#10; */&#10;&#10;/* CSS Variables */&#10;:root {&#10;    --primary-red: #C62828;&#10;    --charcoal-black: #121212;&#10;    --steel-grey: #4F4F4F;&#10;    --off-white: #F2F2F2;&#10;    --white: #FFFFFF;&#10;    --font-family: 'Poppins', system-ui, Arial, sans-serif;&#10;    --border-radius: 8px;&#10;    --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);&#10;    --transition: all 0.3s ease;&#10;}&#10;&#10;/* Reset &amp; Base Styles */&#10;* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;html {&#10;    scroll-behavior: smooth;&#10;}&#10;&#10;body {&#10;    font-family: var(--font-family);&#10;    line-height: 1.6;&#10;    color: var(--charcoal-black);&#10;    background-color: var(--white);&#10;}&#10;&#10;/* Typography */&#10;h1, h2, h3, h4, h5, h6 {&#10;    font-weight: 600;&#10;    line-height: 1.2;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;h1 { font-size: 2.5rem; }&#10;h2 { font-size: 2rem; }&#10;h3 { font-size: 1.5rem; }&#10;h4 { font-size: 1.25rem; }&#10;&#10;p {&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;a {&#10;    color: var(--primary-red);&#10;    text-decoration: none;&#10;    transition: var(--transition);&#10;}&#10;&#10;a:hover, a:focus {&#10;    color: var(--charcoal-black);&#10;    outline: 2px solid var(--primary-red);&#10;    outline-offset: 2px;&#10;}&#10;&#10;img {&#10;    max-width: 100%;&#10;    height: auto;&#10;}&#10;&#10;/* Layout Containers */&#10;.container {&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;    padding: 0 1rem;&#10;}&#10;&#10;.section {&#10;    padding: 4rem 0;&#10;}&#10;&#10;/* Navigation */&#10;.main-nav {&#10;    background: var(--white);&#10;    box-shadow: var(--box-shadow);&#10;    position: sticky;&#10;    top: 0;&#10;    z-index: 1000;&#10;}&#10;&#10;.nav-container {&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;    padding: 1rem;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: space-between;&#10;}&#10;&#10;.nav-brand a {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;    color: var(--charcoal-black);&#10;    font-weight: 700;&#10;    font-size: 1.5rem;&#10;}&#10;&#10;.logo {&#10;    height: 40px;&#10;    width: auto;&#10;}&#10;&#10;.nav-toggle {&#10;    display: none;&#10;    flex-direction: column;&#10;    background: none;&#10;    border: none;&#10;    cursor: pointer;&#10;    padding: 0.5rem;&#10;}&#10;&#10;.nav-toggle span {&#10;    width: 25px;&#10;    height: 3px;&#10;    background: var(--charcoal-black);&#10;    margin: 3px 0;&#10;    transition: var(--transition);&#10;}&#10;&#10;.nav-menu {&#10;    display: flex;&#10;    list-style: none;&#10;    gap: 2rem;&#10;}&#10;&#10;.nav-menu a {&#10;    color: var(--charcoal-black);&#10;    font-weight: 500;&#10;    padding: 0.5rem 1rem;&#10;    border-radius: var(--border-radius);&#10;    transition: var(--transition);&#10;}&#10;&#10;.nav-menu a:hover,&#10;.nav-menu a:focus,&#10;.nav-menu a.active {&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;}&#10;&#10;/* Buttons */&#10;.btn {&#10;    display: inline-block;&#10;    padding: 0.75rem 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    font-weight: 500;&#10;    text-align: center;&#10;    cursor: pointer;&#10;    border: 2px solid transparent;&#10;    transition: var(--transition);&#10;    text-decoration: none;&#10;}&#10;&#10;.btn-primary {&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;}&#10;&#10;.btn-primary:hover,&#10;.btn-primary:focus {&#10;    background: var(--charcoal-black);&#10;    color: var(--white);&#10;}&#10;&#10;.btn-secondary {&#10;    background: transparent;&#10;    color: var(--primary-red);&#10;    border-color: var(--primary-red);&#10;}&#10;&#10;.btn-secondary:hover,&#10;.btn-secondary:focus {&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;}&#10;&#10;/* Cards */&#10;.card {&#10;    background: var(--white);&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;    overflow: hidden;&#10;    transition: var(--transition);&#10;}&#10;&#10;.card:hover {&#10;    transform: translateY(-4px);&#10;    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);&#10;}&#10;&#10;.card-image {&#10;    width: 100%;&#10;    height: 200px;&#10;    object-fit: cover;&#10;}&#10;&#10;.card-content {&#10;    padding: 1.5rem;&#10;}&#10;&#10;.card-title {&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.card-meta {&#10;    color: var(--steel-grey);&#10;    font-size: 0.875rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.card-tags {&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    gap: 0.5rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.tag {&#10;    background: var(--off-white);&#10;    color: var(--charcoal-black);&#10;    padding: 0.25rem 0.5rem;&#10;    border-radius: 12px;&#10;    font-size: 0.75rem;&#10;    font-weight: 500;&#10;}&#10;&#10;/* Grid Layouts */&#10;.grid {&#10;    display: grid;&#10;    gap: 2rem;&#10;}&#10;&#10;.grid-2 {&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;}&#10;&#10;.grid-3 {&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;}&#10;&#10;.grid-4 {&#10;    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;}&#10;&#10;/* Search &amp; Filters */&#10;.search-filters {&#10;    background: var(--off-white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.search-bar {&#10;    display: flex;&#10;    gap: 1rem;&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.search-input {&#10;    flex: 1;&#10;    padding: 0.75rem;&#10;    border: 2px solid var(--steel-grey);&#10;    border-radius: var(--border-radius);&#10;    font-family: var(--font-family);&#10;}&#10;&#10;.search-input:focus {&#10;    outline: none;&#10;    border-color: var(--primary-red);&#10;}&#10;&#10;.filters-row {&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    gap: 1rem;&#10;    align-items: center;&#10;}&#10;&#10;.filter-group {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.filter-group label {&#10;    font-weight: 500;&#10;    color: var(--charcoal-black);&#10;}&#10;&#10;.filter-select {&#10;    padding: 0.5rem;&#10;    border: 2px solid var(--steel-grey);&#10;    border-radius: var(--border-radius);&#10;    font-family: var(--font-family);&#10;}&#10;&#10;/* Loading States */&#10;.loading {&#10;    text-align: center;&#10;    padding: 3rem;&#10;    color: var(--steel-grey);&#10;}&#10;&#10;.loading::after {&#10;    content: &quot;&quot;;&#10;    display: inline-block;&#10;    width: 20px;&#10;    height: 20px;&#10;    border: 3px solid var(--off-white);&#10;    border-radius: 50%;&#10;    border-top-color: var(--primary-red);&#10;    animation: spin 1s ease-in-out infinite;&#10;    margin-left: 1rem;&#10;}&#10;&#10;.no-results {&#10;    text-align: center;&#10;    padding: 3rem;&#10;    color: var(--steel-grey);&#10;}&#10;&#10;@keyframes spin {&#10;    to { transform: rotate(360deg); }&#10;}&#10;&#10;/* Footer */&#10;.main-footer {&#10;    background: var(--charcoal-black);&#10;    color: var(--white);&#10;    padding: 3rem 0 1rem;&#10;}&#10;&#10;.footer-container {&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;    padding: 0 1rem;&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 2rem;&#10;}&#10;&#10;.footer-section h3,&#10;.footer-section h4 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.footer-section ul {&#10;    list-style: none;&#10;}&#10;&#10;.footer-section ul li {&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.footer-section a {&#10;    color: var(--white);&#10;}&#10;&#10;.footer-section a:hover,&#10;.footer-section a:focus {&#10;    color: var(--primary-red);&#10;}&#10;&#10;.social-links {&#10;    display: flex;&#10;    gap: 1rem;&#10;    margin-top: 1rem;&#10;}&#10;&#10;.social-icon {&#10;    width: 40px;&#10;    height: 40px;&#10;    background: var(--primary-red);&#10;    border-radius: 50%;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    transition: var(--transition);&#10;}&#10;&#10;.social-icon:hover {&#10;    background: var(--white);&#10;}&#10;&#10;.newsletter-form {&#10;    display: flex;&#10;    gap: 0.5rem;&#10;    margin-top: 1rem;&#10;}&#10;&#10;.newsletter-form input {&#10;    flex: 1;&#10;    padding: 0.5rem;&#10;    border: none;&#10;    border-radius: var(--border-radius);&#10;}&#10;&#10;.newsletter-form button {&#10;    padding: 0.5rem 1rem;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    border: none;&#10;    border-radius: var(--border-radius);&#10;    cursor: pointer;&#10;    transition: var(--transition);&#10;}&#10;&#10;.newsletter-form button:hover {&#10;    background: var(--white);&#10;    color: var(--primary-red);&#10;}&#10;&#10;.footer-bottom {&#10;    border-top: 1px solid var(--steel-grey);&#10;    margin-top: 2rem;&#10;    padding-top: 1rem;&#10;    text-align: center;&#10;    color: var(--steel-grey);&#10;}&#10;&#10;/* Responsive Design */&#10;@media (max-width: 768px) {&#10;    .nav-toggle {&#10;        display: flex;&#10;    }&#10;    &#10;    .nav-menu {&#10;        position: fixed;&#10;        top: 80px;&#10;        left: -100%;&#10;        width: 100%;&#10;        background: var(--white);&#10;        flex-direction: column;&#10;        text-align: center;&#10;        transition: var(--transition);&#10;        box-shadow: var(--box-shadow);&#10;    }&#10;    &#10;    .nav-menu.active {&#10;        left: 0;&#10;    }&#10;    &#10;    .nav-menu li {&#10;        margin: 1rem 0;&#10;    }&#10;    &#10;    h1 { font-size: 2rem; }&#10;    h2 { font-size: 1.5rem; }&#10;    &#10;    .search-bar {&#10;        flex-direction: column;&#10;    }&#10;    &#10;    .filters-row {&#10;        flex-direction: column;&#10;        align-items: stretch;&#10;    }&#10;}&#10;&#10;/* Accessibility */&#10;@media (prefers-reduced-motion: reduce) {&#10;    * {&#10;        animation-duration: 0.01ms !important;&#10;        animation-iteration-count: 1 !important;&#10;        transition-duration: 0.01ms !important;&#10;    }&#10;}&#10;&#10;/* Focus styles for keyboard navigation */&#10;button:focus,&#10;input:focus,&#10;select:focus,&#10;textarea:focus {&#10;    outline: 2px solid var(--primary-red);&#10;    outline-offset: 2px;&#10;}&#10;&#10;/* Skip link for accessibility */&#10;.skip-link {&#10;    position: absolute;&#10;    top: -40px;&#10;    left: 6px;&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;    padding: 8px;&#10;    text-decoration: none;&#10;    z-index: 10000;&#10;}&#10;&#10;.skip-link:focus {&#10;    top: 6px;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/css/team-detail.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/css/team-detail.css" />
              <option name="updatedContent" value="/**&#10; * Team Member Detail Page Styles - Atlas Games&#10; */&#10;&#10;/* Member Profile */&#10;.member-profile {&#10;    max-width: 1000px;&#10;    margin: 0 auto;&#10;}&#10;&#10;/* Profile Header */&#10;.profile-header {&#10;    background: linear-gradient(135deg, var(--off-white) 0%, var(--white) 100%);&#10;    border-radius: var(--border-radius);&#10;    padding: 3rem 2rem;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.profile-hero {&#10;    display: grid;&#10;    grid-template-columns: 300px 1fr;&#10;    gap: 3rem;&#10;    align-items: start;&#10;}&#10;&#10;.profile-image {&#10;    text-align: center;&#10;}&#10;&#10;.profile-image img {&#10;    width: 250px;&#10;    height: 250px;&#10;    object-fit: cover;&#10;    border-radius: 50%;&#10;    border: 4px solid var(--primary-red);&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;.profile-info h1 {&#10;    font-size: 2.5rem;&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.role {&#10;    font-size: 1.25rem;&#10;    color: var(--primary-red);&#10;    font-weight: 600;&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.bio {&#10;    font-size: 1.125rem;&#10;    line-height: 1.6;&#10;    color: var(--steel-grey);&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;/* Contact Information */&#10;.contact-info {&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.contact-item {&#10;    display: flex;&#10;    align-items: center;&#10;    margin-bottom: 0.75rem;&#10;    font-size: 0.9rem;&#10;}&#10;&#10;.contact-label {&#10;    font-weight: 600;&#10;    color: var(--charcoal-black);&#10;    min-width: 80px;&#10;    margin-right: 1rem;&#10;}&#10;&#10;.contact-item a {&#10;    color: var(--primary-red);&#10;    text-decoration: none;&#10;}&#10;&#10;.contact-item a:hover {&#10;    text-decoration: underline;&#10;}&#10;&#10;/* Social Links */&#10;.social-links {&#10;    display: flex;&#10;    gap: 1rem;&#10;    margin-bottom: 2rem;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;.social-link {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;    padding: 0.5rem 1rem;&#10;    background: var(--charcoal-black);&#10;    color: var(--white);&#10;    text-decoration: none;&#10;    border-radius: var(--border-radius);&#10;    font-size: 0.875rem;&#10;    transition: var(--transition);&#10;}&#10;&#10;.social-link:hover {&#10;    background: var(--primary-red);&#10;    color: var(--white);&#10;}&#10;&#10;.social-icon {&#10;    width: 20px;&#10;    height: 20px;&#10;    background: currentColor;&#10;    border-radius: 50%;&#10;}&#10;&#10;/* CV Download */&#10;.cv-download {&#10;    margin-top: 1rem;&#10;}&#10;&#10;/* Skills Section */&#10;.skills-section {&#10;    background: var(--off-white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.skills-section h3 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1.5rem;&#10;    text-align: center;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.skills-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));&#10;    gap: 1rem;&#10;}&#10;&#10;.skill-item {&#10;    background: var(--white);&#10;    padding: 1rem;&#10;    border-radius: var(--border-radius);&#10;    text-align: center;&#10;    box-shadow: var(--box-shadow);&#10;    transition: var(--transition);&#10;}&#10;&#10;.skill-item:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);&#10;}&#10;&#10;.skill-name {&#10;    font-weight: 600;&#10;    color: var(--charcoal-black);&#10;    font-size: 0.9rem;&#10;}&#10;&#10;/* Contributions Section */&#10;.contributions-section {&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.contributions-section h3 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 2rem;&#10;    text-align: center;&#10;    border-bottom: 2px solid var(--primary-red);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.contributions-content {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;    gap: 2rem;&#10;}&#10;&#10;.games-worked-on,&#10;.blog-posts,&#10;.awards-participated {&#10;    background: var(--off-white);&#10;    padding: 1.5rem;&#10;    border-radius: var(--border-radius);&#10;}&#10;&#10;.games-worked-on h4,&#10;.blog-posts h4,&#10;.awards-participated h4 {&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 1rem;&#10;    font-size: 1.125rem;&#10;    border-bottom: 1px solid var(--steel-grey);&#10;    padding-bottom: 0.5rem;&#10;}&#10;&#10;.contribution-item {&#10;    display: flex;&#10;    gap: 1rem;&#10;    background: var(--white);&#10;    padding: 1rem;&#10;    border-radius: var(--border-radius);&#10;    margin-bottom: 1rem;&#10;    box-shadow: var(--box-shadow);&#10;    transition: var(--transition);&#10;}&#10;&#10;.contribution-item:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.contribution-thumb {&#10;    width: 60px;&#10;    height: 60px;&#10;    object-fit: cover;&#10;    border-radius: var(--border-radius);&#10;    flex-shrink: 0;&#10;}&#10;&#10;.contribution-info {&#10;    flex: 1;&#10;}&#10;&#10;.contribution-info h5 {&#10;    margin-bottom: 0.25rem;&#10;    font-size: 0.9rem;&#10;}&#10;&#10;.contribution-info h5 a {&#10;    color: var(--charcoal-black);&#10;    text-decoration: none;&#10;}&#10;&#10;.contribution-info h5 a:hover {&#10;    color: var(--primary-red);&#10;}&#10;&#10;.contribution-role,&#10;.contribution-date {&#10;    font-size: 0.75rem;&#10;    color: var(--steel-grey);&#10;    margin-bottom: 0.25rem;&#10;}&#10;&#10;.contribution-desc {&#10;    font-size: 0.8rem;&#10;    color: var(--steel-grey);&#10;    margin: 0;&#10;    line-height: 1.4;&#10;}&#10;&#10;/* Journey Section */&#10;.journey-section {&#10;    background: var(--white);&#10;    padding: 2rem;&#10;    border-radius: var(--border-radius);&#10;    border-left: 4px solid var(--primary-red);&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.journey-section h3 {&#10;    color: var(--primary-red);&#10;    margin-bottom: 1.5rem;&#10;}&#10;&#10;.journey-content {&#10;    font-size: 1rem;&#10;    line-height: 1.7;&#10;    color: var(--charcoal-black);&#10;}&#10;&#10;.journey-content p {&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;/* Back to Team */&#10;.back-to-team {&#10;    text-align: center;&#10;}&#10;&#10;/* Professional Timeline */&#10;.timeline {&#10;    position: relative;&#10;    padding-left: 2rem;&#10;}&#10;&#10;.timeline::before {&#10;    content: '';&#10;    position: absolute;&#10;    left: 0;&#10;    top: 0;&#10;    bottom: 0;&#10;    width: 2px;&#10;    background: var(--primary-red);&#10;}&#10;&#10;.timeline-item {&#10;    position: relative;&#10;    margin-bottom: 2rem;&#10;    background: var(--white);&#10;    padding: 1.5rem;&#10;    border-radius: var(--border-radius);&#10;    box-shadow: var(--box-shadow);&#10;}&#10;&#10;.timeline-item::before {&#10;    content: '';&#10;    position: absolute;&#10;    left: -1.75rem;&#10;    top: 1.5rem;&#10;    width: 12px;&#10;    height: 12px;&#10;    background: var(--primary-red);&#10;    border-radius: 50%;&#10;    border: 2px solid var(--white);&#10;}&#10;&#10;.timeline-date {&#10;    color: var(--primary-red);&#10;    font-weight: 600;&#10;    font-size: 0.875rem;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.timeline-title {&#10;    color: var(--charcoal-black);&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.timeline-description {&#10;    color: var(--steel-grey);&#10;    font-size: 0.9rem;&#10;    line-height: 1.5;&#10;}&#10;&#10;/* Responsive Design */&#10;@media (max-width: 768px) {&#10;    .profile-hero {&#10;        grid-template-columns: 1fr;&#10;        gap: 2rem;&#10;        text-align: center;&#10;    }&#10;    &#10;    .profile-image img {&#10;        width: 200px;&#10;        height: 200px;&#10;    }&#10;    &#10;    .profile-info h1 {&#10;        font-size: 2rem;&#10;    }&#10;    &#10;    .contact-item {&#10;        flex-direction: column;&#10;        align-items: flex-start;&#10;        gap: 0.25rem;&#10;    }&#10;    &#10;    .contact-label {&#10;        min-width: auto;&#10;        margin-right: 0;&#10;    }&#10;    &#10;    .social-links {&#10;        justify-content: center;&#10;    }&#10;    &#10;    .skills-grid {&#10;        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));&#10;    }&#10;    &#10;    .contributions-content {&#10;        grid-template-columns: 1fr;&#10;    }&#10;    &#10;    .contribution-item {&#10;        flex-direction: column;&#10;        text-align: center;&#10;    }&#10;    &#10;    .contribution-thumb {&#10;        width: 80px;&#10;        height: 80px;&#10;        align-self: center;&#10;    }&#10;    &#10;    .timeline {&#10;        padding-left: 1.5rem;&#10;    }&#10;    &#10;    .timeline-item::before {&#10;        left: -1.25rem;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    .profile-header {&#10;        padding: 2rem 1rem;&#10;    }&#10;    &#10;    .profile-info h1 {&#10;        font-size: 1.75rem;&#10;    }&#10;    &#10;    .bio {&#10;        font-size: 1rem;&#10;    }&#10;    &#10;    .skills-grid {&#10;        grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));&#10;    }&#10;    &#10;    .social-link {&#10;        padding: 0.5rem;&#10;        font-size: 0.8rem;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/js/filters.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/js/filters.js" />
              <option name="originalContent" value="// Filters.js: (optional, for future advanced filter logic)&#10;// Currently handled in search.js. Placeholder for future expansion.&#10;&#10;&#10;" />
              <option name="updatedContent" value="/**&#10; * Filters system for Atlas Games website&#10; */&#10;&#10;class Filters {&#10;    constructor(containerSelector, onFilterChange) {&#10;        this.container = document.querySelector(containerSelector);&#10;        this.onFilterChange = onFilterChange;&#10;        this.activeFilters = {};&#10;        this.filterOptions = {};&#10;    }&#10;&#10;    /**&#10;     * Initialize filters with options&#10;     */&#10;    init(filterOptions) {&#10;        this.filterOptions = filterOptions;&#10;        this.createFilterUI();&#10;        this.bindEvents();&#10;        this.loadFromURL();&#10;    }&#10;&#10;    /**&#10;     * Create filter UI elements&#10;     */&#10;    createFilterUI() {&#10;        if (!this.container) return;&#10;&#10;        const filtersHTML = `&#10;            &lt;div class=&quot;search-filters&quot;&gt;&#10;                &lt;div class=&quot;search-bar&quot;&gt;&#10;                    &lt;input &#10;                        type=&quot;text&quot; &#10;                        id=&quot;search-input&quot; &#10;                        class=&quot;search-input&quot; &#10;                        placeholder=&quot;Search...&quot; &#10;                        aria-label=&quot;Search&quot;&#10;                    &gt;&#10;                    &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot; id=&quot;search-btn&quot;&gt;Search&lt;/button&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;filters-row&quot;&gt;&#10;                    ${this.createFilterSelect('status', 'Status', this.filterOptions.statuses)}&#10;                    ${this.createFilterSelect('genre', 'Genre', this.filterOptions.genres)}&#10;                    ${this.createFilterSelect('platform', 'Platform', this.filterOptions.platforms)}&#10;                    ${this.createFilterSelect('role', 'Role', this.filterOptions.roles)}&#10;                    ${this.createFilterSelect('competition', 'Competition', this.filterOptions.competitions)}&#10;                    ${this.createSortSelect()}&#10;                    &lt;div class=&quot;filter-group&quot;&gt;&#10;                        &lt;button type=&quot;button&quot; class=&quot;btn btn-secondary&quot; id=&quot;clear-filters&quot;&gt;Clear All&lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &#10;                ${this.createTagsFilter()}&#10;            &lt;/div&gt;&#10;        `;&#10;&#10;        this.container.innerHTML = filtersHTML;&#10;    }&#10;&#10;    /**&#10;     * Create a filter select dropdown&#10;     */&#10;    createFilterSelect(key, label, options) {&#10;        if (!options || options.length === 0) return '';&#10;&#10;        return `&#10;            &lt;div class=&quot;filter-group&quot;&gt;&#10;                &lt;label for=&quot;filter-${key}&quot;&gt;${label}&lt;/label&gt;&#10;                &lt;select id=&quot;filter-${key}&quot; class=&quot;filter-select&quot; data-filter=&quot;${key}&quot;&gt;&#10;                    &lt;option value=&quot;all&quot;&gt;All ${label}s&lt;/option&gt;&#10;                    ${options.map(option =&gt; &#10;                        `&lt;option value=&quot;${option}&quot;&gt;${option}&lt;/option&gt;`&#10;                    ).join('')}&#10;                &lt;/select&gt;&#10;            &lt;/div&gt;&#10;        `;&#10;    }&#10;&#10;    /**&#10;     * Create sort select dropdown&#10;     */&#10;    createSortSelect() {&#10;        return `&#10;            &lt;div class=&quot;filter-group&quot;&gt;&#10;                &lt;label for=&quot;sort-select&quot;&gt;Sort By&lt;/label&gt;&#10;                &lt;select id=&quot;sort-select&quot; class=&quot;filter-select&quot;&gt;&#10;                    &lt;option value=&quot;date-desc&quot;&gt;Date (Newest)&lt;/option&gt;&#10;                    &lt;option value=&quot;date-asc&quot;&gt;Date (Oldest)&lt;/option&gt;&#10;                    &lt;option value=&quot;title-asc&quot;&gt;Title (A-Z)&lt;/option&gt;&#10;                    &lt;option value=&quot;title-desc&quot;&gt;Title (Z-A)&lt;/option&gt;&#10;                    &lt;option value=&quot;status-asc&quot;&gt;Status&lt;/option&gt;&#10;                &lt;/select&gt;&#10;            &lt;/div&gt;&#10;        `;&#10;    }&#10;&#10;    /**&#10;     * Create tags filter checkboxes&#10;     */&#10;    createTagsFilter() {&#10;        if (!this.filterOptions.tags || this.filterOptions.tags.length === 0) {&#10;            return '';&#10;        }&#10;&#10;        return `&#10;            &lt;div class=&quot;tags-filter&quot;&gt;&#10;                &lt;h4&gt;Filter by Tags:&lt;/h4&gt;&#10;                &lt;div class=&quot;tags-grid&quot;&gt;&#10;                    ${this.filterOptions.tags.map(tag =&gt; `&#10;                        &lt;label class=&quot;tag-checkbox&quot;&gt;&#10;                            &lt;input type=&quot;checkbox&quot; value=&quot;${tag}&quot; data-filter=&quot;tags&quot;&gt;&#10;                            &lt;span class=&quot;tag&quot;&gt;${tag}&lt;/span&gt;&#10;                        &lt;/label&gt;&#10;                    `).join('')}&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        `;&#10;    }&#10;&#10;    /**&#10;     * Bind event listeners&#10;     */&#10;    bindEvents() {&#10;        const searchInput = document.getElementById('search-input');&#10;        const searchBtn = document.getElementById('search-btn');&#10;        const clearBtn = document.getElementById('clear-filters');&#10;        const sortSelect = document.getElementById('sort-select');&#10;&#10;        // Search functionality&#10;        if (searchInput) {&#10;            const debouncedSearch = Utils.debounce(() =&gt; {&#10;                this.handleFilterChange();&#10;            }, 300);&#10;&#10;            searchInput.addEventListener('input', debouncedSearch);&#10;            searchInput.addEventListener('keypress', (e) =&gt; {&#10;                if (e.key === 'Enter') {&#10;                    this.handleFilterChange();&#10;                }&#10;            });&#10;        }&#10;&#10;        if (searchBtn) {&#10;            searchBtn.addEventListener('click', () =&gt; this.handleFilterChange());&#10;        }&#10;&#10;        // Filter selects&#10;        document.querySelectorAll('.filter-select').forEach(select =&gt; {&#10;            select.addEventListener('change', () =&gt; this.handleFilterChange());&#10;        });&#10;&#10;        // Tag checkboxes&#10;        document.querySelectorAll('input[data-filter=&quot;tags&quot;]').forEach(checkbox =&gt; {&#10;            checkbox.addEventListener('change', () =&gt; this.handleFilterChange());&#10;        });&#10;&#10;        // Clear filters&#10;        if (clearBtn) {&#10;            clearBtn.addEventListener('click', () =&gt; this.clearAllFilters());&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Handle filter changes&#10;     */&#10;    handleFilterChange() {&#10;        this.activeFilters = this.getActiveFilters();&#10;        &#10;        // Update URL&#10;        Utils.updateURLParams(this.activeFilters);&#10;        &#10;        // Trigger callback&#10;        if (this.onFilterChange) {&#10;            this.onFilterChange(this.activeFilters);&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Get currently active filters&#10;     */&#10;    getActiveFilters() {&#10;        const filters = {};&#10;&#10;        // Search query&#10;        const searchInput = document.getElementById('search-input');&#10;        if (searchInput &amp;&amp; searchInput.value.trim()) {&#10;            filters.query = searchInput.value.trim();&#10;        }&#10;&#10;        // Filter selects&#10;        document.querySelectorAll('.filter-select').forEach(select =&gt; {&#10;            const filterType = select.dataset.filter;&#10;            if (filterType &amp;&amp; select.value !== 'all') {&#10;                filters[filterType] = select.value;&#10;            }&#10;        });&#10;&#10;        // Sort&#10;        const sortSelect = document.getElementById('sort-select');&#10;        if (sortSelect) {&#10;            const [sortBy, sortOrder] = sortSelect.value.split('-');&#10;            filters.sortBy = sortBy;&#10;            filters.sortOrder = sortOrder;&#10;        }&#10;&#10;        // Tags&#10;        const selectedTags = [];&#10;        document.querySelectorAll('input[data-filter=&quot;tags&quot;]:checked').forEach(checkbox =&gt; {&#10;            selectedTags.push(checkbox.value);&#10;        });&#10;        if (selectedTags.length &gt; 0) {&#10;            filters.tags = selectedTags;&#10;        }&#10;&#10;        return filters;&#10;    }&#10;&#10;    /**&#10;     * Load filters from URL parameters&#10;     */&#10;    loadFromURL() {&#10;        const params = Utils.getURLParams();&#10;        &#10;        Object.keys(params).forEach(key =&gt; {&#10;            if (key === 'query') {&#10;                const searchInput = document.getElementById('search-input');&#10;                if (searchInput) {&#10;                    searchInput.value = params[key];&#10;                }&#10;            } else if (key === 'tags') {&#10;                const tags = Array.isArray(params[key]) ? params[key] : [params[key]];&#10;                tags.forEach(tag =&gt; {&#10;                    const checkbox = document.querySelector(`input[data-filter=&quot;tags&quot;][value=&quot;${tag}&quot;]`);&#10;                    if (checkbox) {&#10;                        checkbox.checked = true;&#10;                    }&#10;                });&#10;            } else if (key === 'sortBy' || key === 'sortOrder') {&#10;                // Handle sort separately&#10;                const sortBy = params.sortBy || 'date';&#10;                const sortOrder = params.sortOrder || 'desc';&#10;                const sortSelect = document.getElementById('sort-select');&#10;                if (sortSelect) {&#10;                    sortSelect.value = `${sortBy}-${sortOrder}`;&#10;                }&#10;            } else {&#10;                const select = document.querySelector(`[data-filter=&quot;${key}&quot;]`);&#10;                if (select) {&#10;                    select.value = params[key];&#10;                }&#10;            }&#10;        });&#10;&#10;        // Trigger initial filter if URL has parameters&#10;        if (Object.keys(params).length &gt; 0) {&#10;            this.handleFilterChange();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Clear all active filters&#10;     */&#10;    clearAllFilters() {&#10;        // Clear search input&#10;        const searchInput = document.getElementById('search-input');&#10;        if (searchInput) {&#10;            searchInput.value = '';&#10;        }&#10;&#10;        // Reset all selects&#10;        document.querySelectorAll('.filter-select').forEach(select =&gt; {&#10;            if (select.id === 'sort-select') {&#10;                select.value = 'date-desc';&#10;            } else {&#10;                select.value = 'all';&#10;            }&#10;        });&#10;&#10;        // Uncheck all tag checkboxes&#10;        document.querySelectorAll('input[data-filter=&quot;tags&quot;]').forEach(checkbox =&gt; {&#10;            checkbox.checked = false;&#10;        });&#10;&#10;        // Clear URL parameters&#10;        Utils.updateURLParams({});&#10;&#10;        // Trigger filter change&#10;        this.handleFilterChange();&#10;    }&#10;&#10;    /**&#10;     * Update filter options (useful for dynamic updates)&#10;     */&#10;    updateOptions(newOptions) {&#10;        this.filterOptions = newOptions;&#10;        this.createFilterUI();&#10;        this.bindEvents();&#10;    }&#10;&#10;    /**&#10;     * Get active filter count for display&#10;     */&#10;    getActiveFilterCount() {&#10;        const filters = this.getActiveFilters();&#10;        let count = 0;&#10;&#10;        if (filters.query) count++;&#10;        if (filters.status &amp;&amp; filters.status !== 'all') count++;&#10;        if (filters.genre &amp;&amp; filters.genre !== 'all') count++;&#10;        if (filters.platform &amp;&amp; filters.platform !== 'all') count++;&#10;        if (filters.role &amp;&amp; filters.role !== 'all') count++;&#10;        if (filters.competition &amp;&amp; filters.competition !== 'all') count++;&#10;        if (filters.tags &amp;&amp; filters.tags.length &gt; 0) count += filters.tags.length;&#10;&#10;        return count;&#10;    }&#10;}&#10;&#10;// Export for use in other modules&#10;window.Filters = Filters;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/js/includes.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/js/includes.js" />
              <option name="originalContent" value="// Injects header, nav, and footer into the page&#10;function injectIncludes() {&#10;  // Helper to fetch and inject HTML&#10;  function inject(selector, url, cb) {&#10;    fetch(url).then(r =&gt; r.text()).then(html =&gt; {&#10;      document.querySelector(selector).outerHTML = html;&#10;      if (cb) cb();&#10;    });&#10;  }&#10;&#10;  // Header (contains nav placeholder)&#10;  inject('header#site-header, #site-header', '/reusables/header.html', function() {&#10;    // After header injected, inject nav into nav placeholder&#10;    fetch('/reusables/navigationbar.html').then(r =&gt; r.text()).then(navHtml =&gt; {&#10;      var nav = document.getElementById('main-nav-include');&#10;      if (nav) nav.outerHTML = navHtml;&#10;      // Highlight active link&#10;      var links = document.querySelectorAll('#main-nav a');&#10;      var path = location.pathname.replace(/\/index\.html$/, '/');&#10;      links.forEach(function(link) {&#10;        if (link.getAttribute('href') === path || (path === '/' &amp;&amp; link.getAttribute('href') === '/index.html')) {&#10;          link.classList.add('active');&#10;        }&#10;      });&#10;    });&#10;  });&#10;&#10;  // Footer&#10;  inject('footer#site-footer, #site-footer', '/reusables/footer.html');&#10;}&#10;&#10;document.addEventListener('DOMContentLoaded', injectIncludes);&#10;&#10;" />
              <option name="updatedContent" value="/**&#10; * Includes system for Atlas Games website&#10; * Loads reusable components (header, nav, footer) into pages&#10; */&#10;&#10;class IncludesLoader {&#10;    constructor() {&#10;        this.loadIncludes();&#10;    }&#10;&#10;    async loadIncludes() {&#10;        try {&#10;            // Load header&#10;            await this.loadComponent('header', 'reusables/header.html');&#10;            &#10;            // Load navigation&#10;            await this.loadComponent('nav', 'reusables/navigationbar.html');&#10;            &#10;            // Load footer&#10;            await this.loadComponent('footer', 'reusables/footer.html');&#10;            &#10;            // Initialize navigation after loading&#10;            this.initializeNavigation();&#10;            &#10;        } catch (error) {&#10;            console.error('Error loading includes:', error);&#10;        }&#10;    }&#10;&#10;    async loadComponent(elementId, filePath) {&#10;        const element = document.getElementById(elementId);&#10;        if (!element) return;&#10;&#10;        try {&#10;            const response = await fetch(filePath);&#10;            if (!response.ok) {&#10;                throw new Error(`Failed to load ${filePath}: ${response.status}`);&#10;            }&#10;            &#10;            const content = await response.text();&#10;            element.innerHTML = content;&#10;            &#10;        } catch (error) {&#10;            console.error(`Error loading ${filePath}:`, error);&#10;            // Fallback content&#10;            if (elementId === 'nav') {&#10;                element.innerHTML = '&lt;nav&gt;&lt;a href=&quot;index.html&quot;&gt;Atlas Games&lt;/a&gt;&lt;/nav&gt;';&#10;            }&#10;        }&#10;    }&#10;&#10;    initializeNavigation() {&#10;        // Mobile menu toggle&#10;        const navToggle = document.querySelector('.nav-toggle');&#10;        const navMenu = document.querySelector('.nav-menu');&#10;        &#10;        if (navToggle &amp;&amp; navMenu) {&#10;            navToggle.addEventListener('click', () =&gt; {&#10;                const isExpanded = navToggle.getAttribute('aria-expanded') === 'true';&#10;                navToggle.setAttribute('aria-expanded', !isExpanded);&#10;                navMenu.classList.toggle('active');&#10;                document.body.classList.toggle('nav-open');&#10;            });&#10;        }&#10;&#10;        // Set active nav item based on current page&#10;        this.setActiveNavItem();&#10;        &#10;        // Close mobile menu when clicking outside&#10;        document.addEventListener('click', (e) =&gt; {&#10;            if (!e.target.closest('.main-nav') &amp;&amp; navMenu?.classList.contains('active')) {&#10;                navMenu.classList.remove('active');&#10;                navToggle?.setAttribute('aria-expanded', 'false');&#10;                document.body.classList.remove('nav-open');&#10;            }&#10;        });&#10;    }&#10;&#10;    setActiveNavItem() {&#10;        const currentPage = window.location.pathname.split('/').pop() || 'index.html';&#10;        const navLinks = document.querySelectorAll('.nav-menu a');&#10;        &#10;        navLinks.forEach(link =&gt; {&#10;            const href = link.getAttribute('href');&#10;            if (href === currentPage || (currentPage === '' &amp;&amp; href === 'index.html')) {&#10;                link.classList.add('active');&#10;                link.setAttribute('aria-current', 'page');&#10;            }&#10;        });&#10;    }&#10;}&#10;&#10;// Initialize when DOM is loaded&#10;document.addEventListener('DOMContentLoaded', () =&gt; {&#10;    new IncludesLoader();&#10;});&#10;&#10;// Export for use in other modules&#10;window.IncludesLoader = IncludesLoader;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/js/listing-loader.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/js/listing-loader.js" />
              <option name="originalContent" value="// ListingLoader: Loads and renders listings for games, blogs, team, awards&#10;(function() {&#10;  const pageMap = {&#10;    'games.html': {&#10;      data: '/data/games.json',&#10;      card: renderGameCard,&#10;      filterKey: 'genre',&#10;      sortKeys: ['title', 'releaseDate']&#10;    },&#10;    'blogs.html': {&#10;      data: '/data/blogs.json',&#10;      card: renderBlogCard,&#10;      filterKey: null,&#10;      sortKeys: ['date', 'title']&#10;    },&#10;    'team.html': {&#10;      data: '/data/team.json',&#10;      card: renderTeamCard,&#10;      filterKey: 'role',&#10;      sortKeys: ['name', 'role']&#10;    },&#10;    'awards.html': {&#10;      data: '/data/awards.json',&#10;      card: renderAwardCard,&#10;      filterKey: 'category',&#10;      sortKeys: ['year', 'title']&#10;    }&#10;  };&#10;&#10;  function getPageConf() {&#10;    const name = location.pathname.split('/').pop();&#10;    return pageMap[name];&#10;  }&#10;&#10;  window.ListingLoader = {&#10;    load: function() {&#10;      const conf = getPageConf();&#10;      if (!conf) return;&#10;      fetch(conf.data)&#10;        .then(r =&gt; r.text())&#10;        .then(txt =&gt; JSON.parse(txt.replace(/\/\/.*$/gm, '')))&#10;        .then(data =&gt; {&#10;          window.listingData = data;&#10;          window.renderListing(data, conf);&#10;        });&#10;    }&#10;  };&#10;&#10;  // Card renderers&#10;  function renderGameCard(game) {&#10;    return `&lt;div class=&quot;listing-card&quot;&gt;&#10;      &lt;img src=&quot;${game.coverImage}&quot; alt=&quot;${game.title} cover&quot; loading=&quot;lazy&quot;&gt;&#10;      &lt;div class=&quot;card-title&quot;&gt;${game.title}&lt;/div&gt;&#10;      &lt;div class=&quot;card-meta&quot;&gt;${game.genre.join(', ')} | ${game.platforms.join(', ')}&lt;/div&gt;&#10;      &lt;div class=&quot;card-desc&quot;&gt;${game.description}&lt;/div&gt;&#10;      &lt;div class=&quot;card-tags&quot;&gt;${game.genre.map(g=&gt;`&lt;span class='card-tag'&gt;${g}&lt;/span&gt;`).join('')}&lt;/div&gt;&#10;      &lt;a class=&quot;card-link&quot; href=&quot;${game.detailPage}&quot;&gt;View Details&lt;/a&gt;&#10;    &lt;/div&gt;`;&#10;  }&#10;  function renderBlogCard(blog) {&#10;    return `&lt;div class=&quot;listing-card&quot;&gt;&#10;      &lt;img src=&quot;${blog.coverImage}&quot; alt=&quot;${blog.title} cover&quot; loading=&quot;lazy&quot;&gt;&#10;      &lt;div class=&quot;card-title&quot;&gt;${blog.title}&lt;/div&gt;&#10;      &lt;div class=&quot;card-meta&quot;&gt;By ${blog.author} &amp;mdash; ${blog.date}&lt;/div&gt;&#10;      &lt;div class=&quot;card-desc&quot;&gt;${blog.summary}&lt;/div&gt;&#10;      &lt;a class=&quot;card-link&quot; href=&quot;${blog.detailPage}&quot;&gt;Read Blog&lt;/a&gt;&#10;    &lt;/div&gt;`;&#10;  }&#10;  function renderTeamCard(member) {&#10;    return `&lt;div class=&quot;listing-card&quot;&gt;&#10;      &lt;img src=&quot;${member.photo}&quot; alt=&quot;${member.name} photo&quot; loading=&quot;lazy&quot;&gt;&#10;      &lt;div class=&quot;card-title&quot;&gt;${member.name}&lt;/div&gt;&#10;      &lt;div class=&quot;card-meta&quot;&gt;${member.role}&lt;/div&gt;&#10;      &lt;div class=&quot;card-desc&quot;&gt;${member.bio}&lt;/div&gt;&#10;      &lt;div class=&quot;card-tags&quot;&gt;${member.role ? `&lt;span class='card-tag'&gt;${member.role}&lt;/span&gt;` : ''}&lt;/div&gt;&#10;      &lt;a class=&quot;card-link&quot; href=&quot;${member.detailPage}&quot;&gt;View Profile&lt;/a&gt;&#10;    &lt;/div&gt;`;&#10;  }&#10;  function renderAwardCard(award) {&#10;    return `&lt;div class=&quot;listing-card&quot;&gt;&#10;      &lt;img src=&quot;${award.image}&quot; alt=&quot;${award.title} image&quot; loading=&quot;lazy&quot;&gt;&#10;      &lt;div class=&quot;card-title&quot;&gt;${award.title}&lt;/div&gt;&#10;      &lt;div class=&quot;card-meta&quot;&gt;${award.category} &amp;mdash; ${award.year}&lt;/div&gt;&#10;      &lt;div class=&quot;card-desc&quot;&gt;${award.description}&lt;/div&gt;&#10;      &lt;div class=&quot;card-tags&quot;&gt;${award.category ? `&lt;span class='card-tag'&gt;${award.category}&lt;/span&gt;` : ''}&lt;/div&gt;&#10;      &lt;a class=&quot;card-link&quot; href=&quot;${award.detailPage}&quot;&gt;Award Details&lt;/a&gt;&#10;    &lt;/div&gt;`;&#10;  }&#10;&#10;  // Expose card renderers for search/filters&#10;  window.renderListing = function(data, conf) {&#10;    const cards = data.map(conf.card).join('');&#10;    document.getElementById('listing-cards').innerHTML = cards;&#10;    document.getElementById('no-results').style.display = data.length ? 'none' : '';&#10;  };&#10;&#10;  // Auto-load on DOMContentLoaded&#10;  document.addEventListener('DOMContentLoaded', function() {&#10;    window.ListingLoader.load();&#10;  });&#10;})();&#10;" />
              <option name="updatedContent" value="/**&#10; * Listing loader for Atlas Games website&#10; * Handles loading and displaying data for games, blogs, team, awards&#10; */&#10;&#10;class ListingLoader {&#10;    constructor(config) {&#10;        this.dataUrl = config.dataUrl;&#10;        this.containerSelector = config.containerSelector;&#10;        this.filtersSelector = config.filtersSelector;&#10;        this.cardTemplate = config.cardTemplate;&#10;        this.searchFields = config.searchFields || ['title'];&#10;        this.itemsPerPage = config.itemsPerPage || 12;&#10;        &#10;        this.data = [];&#10;        this.filteredData = [];&#10;        this.currentPage = 1;&#10;        this.search = null;&#10;        this.filters = null;&#10;        &#10;        this.init();&#10;    }&#10;&#10;    /**&#10;     * Initialize the listing loader&#10;     */&#10;    async init() {&#10;        try {&#10;            await this.loadData();&#10;            this.initializeSearch();&#10;            this.initializeFilters();&#10;            this.render();&#10;        } catch (error) {&#10;            this.handleError(error);&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Load data from JSON file&#10;     */&#10;    async loadData() {&#10;        const container = document.querySelector(this.containerSelector);&#10;        if (container) {&#10;            container.appendChild(Utils.createLoadingSpinner());&#10;        }&#10;&#10;        try {&#10;            const response = await fetch(this.dataUrl);&#10;            if (!response.ok) {&#10;                throw new Error(`Failed to load data: ${response.status}`);&#10;            }&#10;            &#10;            this.data = await response.json();&#10;            this.filteredData = [...this.data];&#10;            &#10;        } catch (error) {&#10;            console.error('Error loading data:', error);&#10;            throw error;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Initialize search functionality&#10;     */&#10;    initializeSearch() {&#10;        this.search = new Search(this.data, this.searchFields);&#10;    }&#10;&#10;    /**&#10;     * Initialize filters&#10;     */&#10;    initializeFilters() {&#10;        const filterOptions = this.search.getFilterOptions();&#10;        &#10;        this.filters = new Filters(this.filtersSelector, (activeFilters) =&gt; {&#10;            this.applyFilters(activeFilters);&#10;        });&#10;        &#10;        this.filters.init(filterOptions);&#10;    }&#10;&#10;    /**&#10;     * Apply filters and update display&#10;     */&#10;    applyFilters(filters) {&#10;        // Get filtered and sorted data&#10;        this.filteredData = this.search.advancedSearch(filters);&#10;        &#10;        if (filters.sortBy) {&#10;            this.filteredData = this.search.sort(&#10;                this.filteredData,&#10;                filters.sortBy,&#10;                filters.sortOrder || 'desc'&#10;            );&#10;        }&#10;&#10;        // Reset to first page&#10;        this.currentPage = 1;&#10;        &#10;        // Update display&#10;        this.render();&#10;        this.updateResultsCount();&#10;    }&#10;&#10;    /**&#10;     * Render the current page&#10;     */&#10;    render() {&#10;        const container = document.querySelector(this.containerSelector);&#10;        if (!container) return;&#10;&#10;        // Clear container&#10;        container.innerHTML = '';&#10;&#10;        // Show loading state&#10;        if (this.filteredData.length === 0 &amp;&amp; this.data.length &gt; 0) {&#10;            container.appendChild(Utils.createNoResultsMessage());&#10;            return;&#10;        }&#10;&#10;        // Calculate pagination&#10;        const startIndex = (this.currentPage - 1) * this.itemsPerPage;&#10;        const endIndex = startIndex + this.itemsPerPage;&#10;        const pageData = this.filteredData.slice(startIndex, endIndex);&#10;&#10;        // Render items&#10;        const grid = document.createElement('div');&#10;        grid.className = 'grid grid-3';&#10;        &#10;        pageData.forEach(item =&gt; {&#10;            const card = this.createCard(item);&#10;            grid.appendChild(card);&#10;        });&#10;&#10;        container.appendChild(grid);&#10;&#10;        // Add pagination if needed&#10;        if (this.filteredData.length &gt; this.itemsPerPage) {&#10;            container.appendChild(this.createPagination());&#10;        }&#10;&#10;        // Initialize lazy loading for images&#10;        Utils.initLazyLoading();&#10;    }&#10;&#10;    /**&#10;     * Create a card element based on the template&#10;     */&#10;    createCard(item) {&#10;        const card = document.createElement('article');&#10;        card.className = 'card';&#10;        &#10;        // Use template function if provided, otherwise use default&#10;        if (this.cardTemplate &amp;&amp; typeof this.cardTemplate === 'function') {&#10;            card.innerHTML = this.cardTemplate(item);&#10;        } else {&#10;            card.innerHTML = this.getDefaultCardTemplate(item);&#10;        }&#10;&#10;        return card;&#10;    }&#10;&#10;    /**&#10;     * Default card template&#10;     */&#10;    getDefaultCardTemplate(item) {&#10;        const date = item.date || item.releaseDate || '';&#10;        const formattedDate = date ? Utils.formatDate(date) : '';&#10;        &#10;        const tags = item.tags ? item.tags.map(tag =&gt; &#10;            `&lt;span class=&quot;tag&quot;&gt;${tag}&lt;/span&gt;`&#10;        ).join('') : '';&#10;&#10;        const status = item.status ? `&lt;span class=&quot;status status-${item.status.toLowerCase().replace(/\s+/g, '-')}&quot;&gt;${item.status}&lt;/span&gt;` : '';&#10;&#10;        return `&#10;            &lt;img src=&quot;${item.thumbnail}&quot; alt=&quot;${item.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;            &lt;div class=&quot;card-content&quot;&gt;&#10;                &lt;h3 class=&quot;card-title&quot;&gt;&#10;                    &lt;a href=&quot;${item.detailPath}&quot;&gt;${item.title}&lt;/a&gt;&#10;                &lt;/h3&gt;&#10;                ${formattedDate ? `&lt;div class=&quot;card-meta&quot;&gt;${formattedDate}&lt;/div&gt;` : ''}&#10;                ${item.role ? `&lt;div class=&quot;card-meta&quot;&gt;${item.role}&lt;/div&gt;` : ''}&#10;                ${item.competition ? `&lt;div class=&quot;card-meta&quot;&gt;${item.competition}&lt;/div&gt;` : ''}&#10;                ${item.rank ? `&lt;div class=&quot;card-meta&quot;&gt;Rank: ${item.rank}&lt;/div&gt;` : ''}&#10;                &lt;p class=&quot;card-description&quot;&gt;${item.description || item.excerpt || item.bio || ''}&lt;/p&gt;&#10;                ${tags ? `&lt;div class=&quot;card-tags&quot;&gt;${tags}&lt;/div&gt;` : ''}&#10;                ${status}&#10;            &lt;/div&gt;&#10;        `;&#10;    }&#10;&#10;    /**&#10;     * Create pagination controls&#10;     */&#10;    createPagination() {&#10;        const totalPages = Math.ceil(this.filteredData.length / this.itemsPerPage);&#10;        &#10;        const pagination = document.createElement('nav');&#10;        pagination.className = 'pagination';&#10;        pagination.setAttribute('aria-label', 'Pagination navigation');&#10;&#10;        const paginationList = document.createElement('ul');&#10;        paginationList.className = 'pagination-list';&#10;&#10;        // Previous button&#10;        if (this.currentPage &gt; 1) {&#10;            const prevButton = this.createPaginationButton(&#10;                this.currentPage - 1,&#10;                'Previous',&#10;                'prev'&#10;            );&#10;            paginationList.appendChild(prevButton);&#10;        }&#10;&#10;        // Page numbers&#10;        const startPage = Math.max(1, this.currentPage - 2);&#10;        const endPage = Math.min(totalPages, this.currentPage + 2);&#10;&#10;        for (let i = startPage; i &lt;= endPage; i++) {&#10;            const pageButton = this.createPaginationButton(i, i.toString());&#10;            if (i === this.currentPage) {&#10;                pageButton.classList.add('active');&#10;                pageButton.setAttribute('aria-current', 'page');&#10;            }&#10;            paginationList.appendChild(pageButton);&#10;        }&#10;&#10;        // Next button&#10;        if (this.currentPage &lt; totalPages) {&#10;            const nextButton = this.createPaginationButton(&#10;                this.currentPage + 1,&#10;                'Next',&#10;                'next'&#10;            );&#10;            paginationList.appendChild(nextButton);&#10;        }&#10;&#10;        pagination.appendChild(paginationList);&#10;        return pagination;&#10;    }&#10;&#10;    /**&#10;     * Create pagination button&#10;     */&#10;    createPaginationButton(page, text, type = 'page') {&#10;        const li = document.createElement('li');&#10;        const button = document.createElement('button');&#10;        &#10;        button.textContent = text;&#10;        button.className = `pagination-btn ${type}`;&#10;        button.addEventListener('click', () =&gt; this.goToPage(page));&#10;        &#10;        li.appendChild(button);&#10;        return li;&#10;    }&#10;&#10;    /**&#10;     * Navigate to specific page&#10;     */&#10;    goToPage(page) {&#10;        this.currentPage = page;&#10;        this.render();&#10;        &#10;        // Scroll to top of results&#10;        const container = document.querySelector(this.containerSelector);&#10;        if (container) {&#10;            Utils.scrollToElement(container, 100);&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Update results count display&#10;     */&#10;    updateResultsCount() {&#10;        const countElement = document.getElementById('results-count');&#10;        if (countElement) {&#10;            const total = this.filteredData.length;&#10;            const showing = Math.min(this.itemsPerPage, total);&#10;            const start = (this.currentPage - 1) * this.itemsPerPage + 1;&#10;            const end = Math.min(start + showing - 1, total);&#10;            &#10;            if (total === 0) {&#10;                countElement.textContent = 'No results found';&#10;            } else {&#10;                countElement.textContent = `Showing ${start}-${end} of ${total} results`;&#10;            }&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Handle errors&#10;     */&#10;    handleError(error) {&#10;        const container = document.querySelector(this.containerSelector);&#10;        if (container) {&#10;            container.innerHTML = '';&#10;            container.appendChild(Utils.handleError(error, 'Failed to load data. Please try again later.'));&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Refresh data&#10;     */&#10;    async refresh() {&#10;        try {&#10;            await this.loadData();&#10;            this.search.updateData(this.data);&#10;            this.filteredData = [...this.data];&#10;            this.currentPage = 1;&#10;            this.render();&#10;        } catch (error) {&#10;            this.handleError(error);&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Get current data&#10;     */&#10;    getData() {&#10;        return this.data;&#10;    }&#10;&#10;    /**&#10;     * Get filtered data&#10;     */&#10;    getFilteredData() {&#10;        return this.filteredData;&#10;    }&#10;}&#10;&#10;// Export for use in other modules&#10;window.ListingLoader = ListingLoader;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/js/search.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/js/search.js" />
              <option name="originalContent" value="// Search, filter, sort, and update listing&#10;(function() {&#10;  let debounceTimer;&#10;  let lastQuery = '';&#10;&#10;  function getConf() {&#10;    const name = location.pathname.split('/').pop();&#10;    return window.ListingLoader &amp;&amp; window.ListingLoader.load &amp;&amp; window.renderListing &amp;&amp; window.listingData &amp;&amp; window.ListingLoader ?&#10;      (function() {&#10;        const conf = {&#10;          'games.html': {filterKey: 'genre', searchKeys: ['title','genre'], sortKeys: ['title','releaseDate']},&#10;          'blogs.html': {filterKey: null, searchKeys: ['title','summary'], sortKeys: ['date','title']},&#10;          'team.html': {filterKey: 'role', searchKeys: ['name','role'], sortKeys: ['name','role']},&#10;          'awards.html': {filterKey: 'category', searchKeys: ['title','category'], sortKeys: ['year','title']}&#10;        };&#10;        return conf[name];&#10;      })() : null;&#10;  }&#10;&#10;  function getFilters(data, key) {&#10;    if (!key) return [];&#10;    const vals = new Set();&#10;    data.forEach(item =&gt; {&#10;      if (Array.isArray(item[key])) item[key].forEach(v=&gt;vals.add(v));&#10;      else if (item[key]) vals.add(item[key]);&#10;    });&#10;    return Array.from(vals).sort();&#10;  }&#10;&#10;  function updateURL(params) {&#10;    const url = new URL(location);&#10;    Object.keys(params).forEach(k =&gt; {&#10;      if (params[k]) url.searchParams.set(k, params[k]);&#10;      else url.searchParams.delete(k);&#10;    });&#10;    history.replaceState(null, '', url);&#10;  }&#10;&#10;  function applySearchFilterSort() {&#10;    const conf = getConf();&#10;    if (!conf) return;&#10;    let data = window.listingData || [];&#10;    const q = (document.getElementById('search-input')?.value || '').trim().toLowerCase();&#10;    const filter = document.querySelector('.filter-chip.selected')?.dataset.value || '';&#10;    const sort = document.getElementById('sort-dropdown')?.value || conf.sortKeys[0];&#10;    // Search&#10;    if (q) {&#10;      data = data.filter(item =&gt; conf.searchKeys.some(k =&gt; {&#10;        if (Array.isArray(item[k])) return item[k].join(' ').toLowerCase().includes(q);&#10;        return (item[k]||'').toLowerCase().includes(q);&#10;      }));&#10;    }&#10;    // Filter&#10;    if (conf.filterKey &amp;&amp; filter) {&#10;      data = data.filter(item =&gt; {&#10;        if (Array.isArray(item[conf.filterKey])) return item[conf.filterKey].includes(filter);&#10;        return item[conf.filterKey] === filter;&#10;      });&#10;    }&#10;    // Sort&#10;    data = data.slice().sort((a,b) =&gt; {&#10;      if (sort === 'releaseDate' || sort === 'date' || sort === 'year') {&#10;        return (b[sort]||'').localeCompare(a[sort]||'');&#10;      }&#10;      return (a[sort]||'').localeCompare(b[sort]||'');&#10;    });&#10;    window.renderListing(data, window.ListingLoader.getPageConf());&#10;    updateURL({q, filter, sort});&#10;  }&#10;&#10;  function debounceApply() {&#10;    clearTimeout(debounceTimer);&#10;    debounceTimer = setTimeout(applySearchFilterSort, 200);&#10;  }&#10;&#10;  document.addEventListener('DOMContentLoaded', function() {&#10;    if (!window.listingData) return;&#10;    const conf = getConf();&#10;    // Search&#10;    document.getElementById('search-input').addEventListener('input', debounceApply);&#10;    // Filter chips&#10;    const chips = document.getElementById('filter-chips');&#10;    if (conf.filterKey &amp;&amp; chips) {&#10;      const filters = getFilters(window.listingData, conf.filterKey);&#10;      chips.innerHTML = filters.map(f =&gt; `&lt;span class=&quot;filter-chip&quot; data-value=&quot;${f}&quot;&gt;${f}&lt;/span&gt;`).join('');&#10;      chips.addEventListener('click', e =&gt; {&#10;        if (e.target.classList.contains('filter-chip')) {&#10;          chips.querySelectorAll('.filter-chip').forEach(c =&gt; c.classList.remove('selected'));&#10;          e.target.classList.add('selected');&#10;          applySearchFilterSort();&#10;        }&#10;      });&#10;    }&#10;    // Sort&#10;    document.getElementById('sort-dropdown').addEventListener('change', applySearchFilterSort);&#10;    // Initial state from URL&#10;    const url = new URL(location);&#10;    if (url.searchParams.get('q')) document.getElementById('search-input').value = url.searchParams.get('q');&#10;    if (url.searchParams.get('filter')) {&#10;      const chip = chips?.querySelector(`[data-value=&quot;${url.searchParams.get('filter')}&quot;]`);&#10;      if (chip) chip.classList.add('selected');&#10;    }&#10;    if (url.searchParams.get('sort')) document.getElementById('sort-dropdown').value = url.searchParams.get('sort');&#10;    applySearchFilterSort();&#10;  });&#10;})();&#10;" />
              <option name="updatedContent" value="/**&#10; * Search functionality for Atlas Games website&#10; */&#10;&#10;class Search {&#10;    constructor(data, searchFields = ['title']) {&#10;        this.data = data;&#10;        this.searchFields = searchFields;&#10;        this.originalData = [...data];&#10;    }&#10;&#10;    /**&#10;     * Perform search across specified fields&#10;     */&#10;    search(query) {&#10;        if (!query || query.trim() === '') {&#10;            return this.originalData;&#10;        }&#10;&#10;        const searchTerm = query.toLowerCase().trim();&#10;        &#10;        return this.originalData.filter(item =&gt; {&#10;            return this.searchFields.some(field =&gt; {&#10;                const value = item[field];&#10;                &#10;                if (Array.isArray(value)) {&#10;                    return value.some(v =&gt; &#10;                        v.toString().toLowerCase().includes(searchTerm)&#10;                    );&#10;                }&#10;                &#10;                return value &amp;&amp; value.toString().toLowerCase().includes(searchTerm);&#10;            });&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Advanced search with multiple criteria&#10;     */&#10;    advancedSearch(criteria) {&#10;        let results = this.originalData;&#10;&#10;        // Text search&#10;        if (criteria.query) {&#10;            results = this.search(criteria.query);&#10;        }&#10;&#10;        // Filter by tags&#10;        if (criteria.tags &amp;&amp; criteria.tags.length &gt; 0) {&#10;            results = results.filter(item =&gt; {&#10;                if (!item.tags) return false;&#10;                return criteria.tags.every(tag =&gt; item.tags.includes(tag));&#10;            });&#10;        }&#10;&#10;        // Filter by status&#10;        if (criteria.status &amp;&amp; criteria.status !== 'all') {&#10;            results = results.filter(item =&gt; item.status === criteria.status);&#10;        }&#10;&#10;        // Filter by genre&#10;        if (criteria.genre &amp;&amp; criteria.genre !== 'all') {&#10;            results = results.filter(item =&gt; item.genre === criteria.genre);&#10;        }&#10;&#10;        // Filter by platform&#10;        if (criteria.platform &amp;&amp; criteria.platform !== 'all') {&#10;            results = results.filter(item =&gt; {&#10;                if (!item.platform) return false;&#10;                return item.platform.includes(criteria.platform);&#10;            });&#10;        }&#10;&#10;        // Filter by role (for team members)&#10;        if (criteria.role &amp;&amp; criteria.role !== 'all') {&#10;            results = results.filter(item =&gt; item.role === criteria.role);&#10;        }&#10;&#10;        // Filter by competition (for awards)&#10;        if (criteria.competition &amp;&amp; criteria.competition !== 'all') {&#10;            results = results.filter(item =&gt; item.competition === criteria.competition);&#10;        }&#10;&#10;        // Date range filter&#10;        if (criteria.dateFrom || criteria.dateTo) {&#10;            results = results.filter(item =&gt; {&#10;                if (!item.date &amp;&amp; !item.releaseDate) return false;&#10;                &#10;                const itemDate = new Date(item.date || item.releaseDate);&#10;                &#10;                if (criteria.dateFrom) {&#10;                    const fromDate = new Date(criteria.dateFrom);&#10;                    if (itemDate &lt; fromDate) return false;&#10;                }&#10;                &#10;                if (criteria.dateTo) {&#10;                    const toDate = new Date(criteria.dateTo);&#10;                    if (itemDate &gt; toDate) return false;&#10;                }&#10;                &#10;                return true;&#10;            });&#10;        }&#10;&#10;        return results;&#10;    }&#10;&#10;    /**&#10;     * Sort results by specified field and order&#10;     */&#10;    sort(data, sortBy, sortOrder = 'asc') {&#10;        const sortedData = [...data];&#10;&#10;        sortedData.sort((a, b) =&gt; {&#10;            let valueA = a[sortBy];&#10;            let valueB = b[sortBy];&#10;&#10;            // Handle date sorting&#10;            if (sortBy === 'date' || sortBy === 'releaseDate') {&#10;                valueA = new Date(valueA);&#10;                valueB = new Date(valueB);&#10;            }&#10;&#10;            // Handle string sorting&#10;            if (typeof valueA === 'string') {&#10;                valueA = valueA.toLowerCase();&#10;                valueB = valueB.toLowerCase();&#10;            }&#10;&#10;            // Handle array sorting (for tags, platforms, etc.)&#10;            if (Array.isArray(valueA)) {&#10;                valueA = valueA.join(',').toLowerCase();&#10;                valueB = valueB.join(',').toLowerCase();&#10;            }&#10;&#10;            let comparison = 0;&#10;            if (valueA &gt; valueB) {&#10;                comparison = 1;&#10;            } else if (valueA &lt; valueB) {&#10;                comparison = -1;&#10;            }&#10;&#10;            return sortOrder === 'desc' ? comparison * -1 : comparison;&#10;        });&#10;&#10;        return sortedData;&#10;    }&#10;&#10;    /**&#10;     * Get filter options from data&#10;     */&#10;    getFilterOptions() {&#10;        const options = {&#10;            tags: Utils.getUniqueValues(this.originalData, 'tags'),&#10;            genres: Utils.getUniqueValues(this.originalData, 'genre'),&#10;            platforms: Utils.getUniqueValues(this.originalData, 'platform'),&#10;            statuses: Utils.getUniqueValues(this.originalData, 'status'),&#10;            roles: Utils.getUniqueValues(this.originalData, 'role'),&#10;            competitions: Utils.getUniqueValues(this.originalData, 'competition')&#10;        };&#10;&#10;        // Remove empty arrays&#10;        Object.keys(options).forEach(key =&gt; {&#10;            if (options[key].length === 0) {&#10;                delete options[key];&#10;            }&#10;        });&#10;&#10;        return options;&#10;    }&#10;&#10;    /**&#10;     * Highlight search terms in text&#10;     */&#10;    highlightSearchTerms(text, searchTerm) {&#10;        if (!searchTerm || !text) return text;&#10;&#10;        const regex = new RegExp(`(${searchTerm})`, 'gi');&#10;        return text.replace(regex, '&lt;mark&gt;$1&lt;/mark&gt;');&#10;    }&#10;&#10;    /**&#10;     * Get search suggestions based on partial input&#10;     */&#10;    getSuggestions(partialQuery, limit = 5) {&#10;        if (!partialQuery || partialQuery.length &lt; 2) {&#10;            return [];&#10;        }&#10;&#10;        const suggestions = new Set();&#10;        const query = partialQuery.toLowerCase();&#10;&#10;        this.originalData.forEach(item =&gt; {&#10;            this.searchFields.forEach(field =&gt; {&#10;                const value = item[field];&#10;                &#10;                if (Array.isArray(value)) {&#10;                    value.forEach(v =&gt; {&#10;                        if (v.toString().toLowerCase().includes(query)) {&#10;                            suggestions.add(v);&#10;                        }&#10;                    });&#10;                } else if (value &amp;&amp; value.toString().toLowerCase().includes(query)) {&#10;                    // Add words that start with the query&#10;                    const words = value.toString().split(' ');&#10;                    words.forEach(word =&gt; {&#10;                        if (word.toLowerCase().startsWith(query)) {&#10;                            suggestions.add(word);&#10;                        }&#10;                    });&#10;                }&#10;            });&#10;        });&#10;&#10;        return Array.from(suggestions).slice(0, limit);&#10;    }&#10;&#10;    /**&#10;     * Update data (useful for dynamic data updates)&#10;     */&#10;    updateData(newData) {&#10;        this.data = newData;&#10;        this.originalData = [...newData];&#10;    }&#10;}&#10;&#10;// Export for use in other modules&#10;window.Search = Search;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/assets/js/utils.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/assets/js/utils.js" />
              <option name="updatedContent" value="/**&#10; * Utility functions for Atlas Games website&#10; */&#10;&#10;class Utils {&#10;    /**&#10;     * Debounce function to limit rapid function calls&#10;     */&#10;    static debounce(func, wait) {&#10;        let timeout;&#10;        return function executedFunction(...args) {&#10;            const later = () =&gt; {&#10;                clearTimeout(timeout);&#10;                func(...args);&#10;            };&#10;            clearTimeout(timeout);&#10;            timeout = setTimeout(later, wait);&#10;        };&#10;    }&#10;&#10;    /**&#10;     * Format date for display&#10;     */&#10;    static formatDate(dateString) {&#10;        const date = new Date(dateString);&#10;        return date.toLocaleDateString('en-US', {&#10;            year: 'numeric',&#10;            month: 'long',&#10;            day: 'numeric'&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Calculate reading time based on word count&#10;     */&#10;    static calculateReadTime(text, wordsPerMinute = 200) {&#10;        const wordCount = text.split(/\s+/).length;&#10;        return Math.ceil(wordCount / wordsPerMinute);&#10;    }&#10;&#10;    /**&#10;     * Sanitize HTML to prevent XSS&#10;     */&#10;    static sanitizeHTML(str) {&#10;        const temp = document.createElement('div');&#10;        temp.textContent = str;&#10;        return temp.innerHTML;&#10;    }&#10;&#10;    /**&#10;     * Generate slug from title&#10;     */&#10;    static generateSlug(title) {&#10;        return title&#10;            .toLowerCase()&#10;            .replace(/[^\w\s-]/g, '')&#10;            .replace(/[\s_-]+/g, '-')&#10;            .replace(/^-+|-+$/g, '');&#10;    }&#10;&#10;    /**&#10;     * Update URL query parameters without page reload&#10;     */&#10;    static updateURLParams(params) {&#10;        const url = new URL(window.location);&#10;        Object.keys(params).forEach(key =&gt; {&#10;            if (params[key]) {&#10;                url.searchParams.set(key, params[key]);&#10;            } else {&#10;                url.searchParams.delete(key);&#10;            }&#10;        });&#10;        window.history.replaceState(null, '', url);&#10;    }&#10;&#10;    /**&#10;     * Get URL query parameters&#10;     */&#10;    static getURLParams() {&#10;        const params = {};&#10;        const urlParams = new URLSearchParams(window.location.search);&#10;        for (const [key, value] of urlParams) {&#10;            params[key] = value;&#10;        }&#10;        return params;&#10;    }&#10;&#10;    /**&#10;     * Lazy load images when they enter viewport&#10;     */&#10;    static initLazyLoading() {&#10;        const imageObserver = new IntersectionObserver((entries, observer) =&gt; {&#10;            entries.forEach(entry =&gt; {&#10;                if (entry.isIntersecting) {&#10;                    const img = entry.target;&#10;                    img.src = img.dataset.src;&#10;                    img.classList.remove('lazy');&#10;                    imageObserver.unobserve(img);&#10;                }&#10;            });&#10;        });&#10;&#10;        document.querySelectorAll('img[data-src]').forEach(img =&gt; {&#10;            imageObserver.observe(img);&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Create loading spinner element&#10;     */&#10;    static createLoadingSpinner() {&#10;        const spinner = document.createElement('div');&#10;        spinner.className = 'loading';&#10;        spinner.innerHTML = 'Loading...';&#10;        return spinner;&#10;    }&#10;&#10;    /**&#10;     * Create no results message element&#10;     */&#10;    static createNoResultsMessage(message = 'No results found') {&#10;        const noResults = document.createElement('div');&#10;        noResults.className = 'no-results';&#10;        noResults.innerHTML = `&lt;p&gt;${message}&lt;/p&gt;`;&#10;        return noResults;&#10;    }&#10;&#10;    /**&#10;     * Smooth scroll to element&#10;     */&#10;    static scrollToElement(element, offset = 0) {&#10;        const elementPosition = element.offsetTop - offset;&#10;        window.scrollTo({&#10;            top: elementPosition,&#10;            behavior: 'smooth'&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Handle errors gracefully&#10;     */&#10;    static handleError(error, userMessage = 'Something went wrong') {&#10;        console.error('Error:', error);&#10;        &#10;        // Show user-friendly error message&#10;        const errorDiv = document.createElement('div');&#10;        errorDiv.className = 'error-message';&#10;        errorDiv.innerHTML = `&lt;p&gt;${userMessage}&lt;/p&gt;`;&#10;        &#10;        return errorDiv;&#10;    }&#10;&#10;    /**&#10;     * Validate email format&#10;     */&#10;    static isValidEmail(email) {&#10;        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;&#10;        return emailRegex.test(email);&#10;    }&#10;&#10;    /**&#10;     * Get unique values from array of objects by property&#10;     */&#10;    static getUniqueValues(array, property) {&#10;        const values = array.flatMap(item =&gt; {&#10;            const value = item[property];&#10;            return Array.isArray(value) ? value : [value];&#10;        });&#10;        return [...new Set(values)].filter(Boolean).sort();&#10;    }&#10;&#10;    /**&#10;     * Truncate text to specified length&#10;     */&#10;    static truncateText(text, maxLength, suffix = '...') {&#10;        if (text.length &lt;= maxLength) return text;&#10;        return text.substring(0, maxLength - suffix.length) + suffix;&#10;    }&#10;&#10;    /**&#10;     * Create breadcrumb navigation&#10;     */&#10;    static createBreadcrumbs(path) {&#10;        const breadcrumbs = document.createElement('nav');&#10;        breadcrumbs.className = 'breadcrumbs';&#10;        breadcrumbs.setAttribute('aria-label', 'Breadcrumb navigation');&#10;&#10;        const parts = path.split('/').filter(Boolean);&#10;        let currentPath = '';&#10;&#10;        const breadcrumbList = document.createElement('ol');&#10;        &#10;        // Home link&#10;        const homeItem = document.createElement('li');&#10;        homeItem.innerHTML = '&lt;a href=&quot;index.html&quot;&gt;Home&lt;/a&gt;';&#10;        breadcrumbList.appendChild(homeItem);&#10;&#10;        parts.forEach((part, index) =&gt; {&#10;            currentPath += '/' + part;&#10;            const item = document.createElement('li');&#10;            &#10;            if (index === parts.length - 1) {&#10;                item.textContent = part.replace(/-/g, ' ').replace(/\b\w/g, l =&gt; l.toUpperCase());&#10;                item.setAttribute('aria-current', 'page');&#10;            } else {&#10;                const link = document.createElement('a');&#10;                link.href = currentPath + '.html';&#10;                link.textContent = part.replace(/-/g, ' ').replace(/\b\w/g, l =&gt; l.toUpperCase());&#10;                item.appendChild(link);&#10;            }&#10;            &#10;            breadcrumbList.appendChild(item);&#10;        });&#10;&#10;        breadcrumbs.appendChild(breadcrumbList);&#10;        return breadcrumbs;&#10;    }&#10;}&#10;&#10;// Export for use in other modules&#10;window.Utils = Utils;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/awards.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/awards.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;Discover Atlas Games' achievements and recognition in the gaming industry. View our awards, competitions, and accolades.&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;Atlas Games awards, game awards, gaming achievements, recognition, competitions&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;Awards - Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;Our achievements and recognition in the gaming industry&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;assets/images/ui/og-awards.jpg&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;https://atlasgames22.github.io/awards.html&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;Awards - Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;Our achievements and recognition in the gaming industry&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;assets/images/ui/og-awards.jpg&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;CollectionPage&quot;,&#10;        &quot;name&quot;: &quot;Atlas Games Awards&quot;,&#10;        &quot;description&quot;: &quot;Awards and recognition received by Atlas Games&quot;,&#10;        &quot;url&quot;: &quot;https://atlasgames22.github.io/awards.html&quot;&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;assets/css/style.css&quot;&gt;&#10;    &#10;    &lt;title&gt;Awards - Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Page Header --&gt;&#10;            &lt;header class=&quot;page-header section&quot;&gt;&#10;                &lt;h1&gt;Our Awards&lt;/h1&gt;&#10;                &lt;p&gt;Recognition and achievements that celebrate our commitment to creating exceptional gaming experiences.&lt;/p&gt;&#10;            &lt;/header&gt;&#10;&#10;            &lt;!-- Search and Filters --&gt;&#10;            &lt;div id=&quot;filters-container&quot;&gt;&lt;/div&gt;&#10;&#10;            &lt;!-- Results Info --&gt;&#10;            &lt;div class=&quot;results-info&quot;&gt;&#10;                &lt;div id=&quot;results-count&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Awards Grid --&gt;&#10;            &lt;div id=&quot;awards-container&quot;&gt;&#10;                &lt;!-- Awards will be loaded here --&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/search.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/filters.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/listing-loader.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            // Custom card template for awards&#10;            const awardCardTemplate = (award) =&gt; {&#10;                return `&#10;                    &lt;img src=&quot;${award.thumbnail}&quot; alt=&quot;${award.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                    &lt;div class=&quot;card-content&quot;&gt;&#10;                        &lt;h3 class=&quot;card-title&quot;&gt;&#10;                            &lt;a href=&quot;${award.detailPath}&quot;&gt;${award.title}&lt;/a&gt;&#10;                        &lt;/h3&gt;&#10;                        &lt;div class=&quot;card-meta&quot;&gt;&#10;                            &lt;span class=&quot;competition&quot;&gt;${award.competition}&lt;/span&gt;&#10;                            &lt;span class=&quot;date&quot;&gt;${Utils.formatDate(award.date)}&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;award-rank rank-${award.rank.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '')}&quot;&gt;${award.rank}&lt;/div&gt;&#10;                        &lt;p class=&quot;card-description&quot;&gt;${award.description}&lt;/p&gt;&#10;                        ${award.linkedGame ? `&lt;div class=&quot;linked-game&quot;&gt;Game: &lt;a href=&quot;game-collection/${award.linkedGame}/${award.linkedGame}-detail.html&quot;&gt;${award.linkedGame.replace(/-/g, ' ')}&lt;/a&gt;&lt;/div&gt;` : ''}&#10;                        &lt;div class=&quot;card-footer&quot;&gt;&#10;                            &lt;a href=&quot;${award.detailPath}&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;View Details&lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                `;&#10;            };&#10;&#10;            // Initialize awards listing&#10;            const awardsListing = new ListingLoader({&#10;                dataUrl: 'data/awards.json',&#10;                containerSelector: '#awards-container',&#10;                filtersSelector: '#filters-container',&#10;                cardTemplate: awardCardTemplate,&#10;                searchFields: ['title', 'description', 'competition', 'rank'],&#10;                itemsPerPage: 9&#10;            });&#10;        });&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/blogs.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/blogs.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;Read the latest insights from Atlas Games team. Game development stories, tutorials, and behind-the-scenes content from our talented developers.&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;Atlas Games blog, game development, tutorials, behind the scenes, game design&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;Blog - Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;Latest insights from our game development journey&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;assets/images/ui/og-blog.jpg&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;https://atlasgames22.github.io/blogs.html&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;Blog - Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;Latest insights from our game development journey&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;assets/images/ui/og-blog.jpg&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;Blog&quot;,&#10;        &quot;name&quot;: &quot;Atlas Games Blog&quot;,&#10;        &quot;description&quot;: &quot;Game development insights and stories from Atlas Games&quot;,&#10;        &quot;url&quot;: &quot;https://atlasgames22.github.io/blogs.html&quot;,&#10;        &quot;publisher&quot;: {&#10;            &quot;@type&quot;: &quot;Organization&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games&quot;&#10;        }&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;assets/css/style.css&quot;&gt;&#10;    &#10;    &lt;title&gt;Blog - Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Page Header --&gt;&#10;            &lt;header class=&quot;page-header section&quot;&gt;&#10;                &lt;h1&gt;Our Blog&lt;/h1&gt;&#10;                &lt;p&gt;Dive into our game development journey with behind-the-scenes stories, technical insights, and creative processes.&lt;/p&gt;&#10;            &lt;/header&gt;&#10;&#10;            &lt;!-- Search and Filters --&gt;&#10;            &lt;div id=&quot;filters-container&quot;&gt;&lt;/div&gt;&#10;&#10;            &lt;!-- Results Info --&gt;&#10;            &lt;div class=&quot;results-info&quot;&gt;&#10;                &lt;div id=&quot;results-count&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Blogs Grid --&gt;&#10;            &lt;div id=&quot;blogs-container&quot;&gt;&#10;                &lt;!-- Blogs will be loaded here --&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/search.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/filters.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/listing-loader.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            // Custom card template for blogs&#10;            const blogCardTemplate = (blog) =&gt; {&#10;                const tags = blog.tags.map(tag =&gt; `&lt;span class=&quot;tag&quot;&gt;${tag}&lt;/span&gt;`).join('');&#10;                &#10;                return `&#10;                    &lt;img src=&quot;${blog.thumbnail}&quot; alt=&quot;${blog.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                    &lt;div class=&quot;card-content&quot;&gt;&#10;                        &lt;h3 class=&quot;card-title&quot;&gt;&#10;                            &lt;a href=&quot;${blog.detailPath}&quot;&gt;${blog.title}&lt;/a&gt;&#10;                        &lt;/h3&gt;&#10;                        &lt;div class=&quot;card-meta&quot;&gt;&#10;                            &lt;span class=&quot;author&quot;&gt;By ${blog.author}&lt;/span&gt;&#10;                            &lt;span class=&quot;date&quot;&gt;${Utils.formatDate(blog.date)}&lt;/span&gt;&#10;                            &lt;span class=&quot;read-time&quot;&gt;${blog.readTime} min read&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;p class=&quot;card-description&quot;&gt;${blog.excerpt}&lt;/p&gt;&#10;                        &lt;div class=&quot;card-tags&quot;&gt;${tags}&lt;/div&gt;&#10;                        &lt;div class=&quot;card-footer&quot;&gt;&#10;                            &lt;a href=&quot;${blog.detailPath}&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;Read Article&lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                `;&#10;            };&#10;&#10;            // Initialize blogs listing&#10;            const blogsListing = new ListingLoader({&#10;                dataUrl: 'data/blogs.json',&#10;                containerSelector: '#blogs-container',&#10;                filtersSelector: '#filters-container',&#10;                cardTemplate: blogCardTemplate,&#10;                searchFields: ['title', 'excerpt', 'tags', 'author'],&#10;                itemsPerPage: 9&#10;            });&#10;        });&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/contact.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/contact.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;Get in touch with Atlas Games. Contact us for inquiries, partnerships, or feedback about our games and services.&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;Atlas Games contact, game development contact, get in touch&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;Contact - Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;Get in touch with Atlas Games for inquiries and partnerships&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;assets/images/ui/og-contact.jpg&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;https://atlasgames22.github.io/contact.html&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;Contact - Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;Get in touch with Atlas Games for inquiries and partnerships&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;assets/images/ui/og-contact.jpg&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;ContactPage&quot;,&#10;        &quot;name&quot;: &quot;Contact Atlas Games&quot;,&#10;        &quot;description&quot;: &quot;Contact information for Atlas Games&quot;,&#10;        &quot;url&quot;: &quot;https://atlasgames22.github.io/contact.html&quot;,&#10;        &quot;mainEntity&quot;: {&#10;            &quot;@type&quot;: &quot;Organization&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games&quot;,&#10;            &quot;email&quot;: &quot;info@atlasgames.com&quot;,&#10;            &quot;telephone&quot;: &quot;+1-234-567-890&quot;&#10;        }&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;assets/css/style.css&quot;&gt;&#10;    &#10;    &lt;title&gt;Contact - Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Page Header --&gt;&#10;            &lt;header class=&quot;page-header section&quot;&gt;&#10;                &lt;h1&gt;Get In Touch&lt;/h1&gt;&#10;                &lt;p&gt;We'd love to hear from you! Whether you have questions about our games, partnership opportunities, or just want to say hello.&lt;/p&gt;&#10;            &lt;/header&gt;&#10;&#10;            &lt;div class=&quot;contact-content section&quot;&gt;&#10;                &lt;div class=&quot;contact-grid&quot;&gt;&#10;                    &lt;!-- Contact Form --&gt;&#10;                    &lt;div class=&quot;contact-form-section&quot;&gt;&#10;                        &lt;h2&gt;Send us a Message&lt;/h2&gt;&#10;                        &lt;form class=&quot;contact-form&quot; id=&quot;contact-form&quot; action=&quot;mailto:info@atlasgames.com&quot; method=&quot;post&quot; enctype=&quot;text/plain&quot;&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;name&quot;&gt;Name *&lt;/label&gt;&#10;                                &lt;input type=&quot;text&quot; id=&quot;name&quot; name=&quot;name&quot; required aria-describedby=&quot;name-error&quot;&gt;&#10;                                &lt;div class=&quot;error-message&quot; id=&quot;name-error&quot;&gt;&lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;email&quot;&gt;Email *&lt;/label&gt;&#10;                                &lt;input type=&quot;email&quot; id=&quot;email&quot; name=&quot;email&quot; required aria-describedby=&quot;email-error&quot;&gt;&#10;                                &lt;div class=&quot;error-message&quot; id=&quot;email-error&quot;&gt;&lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;subject&quot;&gt;Subject *&lt;/label&gt;&#10;                                &lt;select id=&quot;subject&quot; name=&quot;subject&quot; required aria-describedby=&quot;subject-error&quot;&gt;&#10;                                    &lt;option value=&quot;&quot;&gt;Select a subject&lt;/option&gt;&#10;                                    &lt;option value=&quot;General Inquiry&quot;&gt;General Inquiry&lt;/option&gt;&#10;                                    &lt;option value=&quot;Game Feedback&quot;&gt;Game Feedback&lt;/option&gt;&#10;                                    &lt;option value=&quot;Technical Support&quot;&gt;Technical Support&lt;/option&gt;&#10;                                    &lt;option value=&quot;Partnership&quot;&gt;Partnership Opportunity&lt;/option&gt;&#10;                                    &lt;option value=&quot;Press Inquiry&quot;&gt;Press Inquiry&lt;/option&gt;&#10;                                    &lt;option value=&quot;Other&quot;&gt;Other&lt;/option&gt;&#10;                                &lt;/select&gt;&#10;                                &lt;div class=&quot;error-message&quot; id=&quot;subject-error&quot;&gt;&lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;message&quot;&gt;Message *&lt;/label&gt;&#10;                                &lt;textarea id=&quot;message&quot; name=&quot;message&quot; rows=&quot;6&quot; required aria-describedby=&quot;message-error&quot; placeholder=&quot;Tell us more about your inquiry...&quot;&gt;&lt;/textarea&gt;&#10;                                &lt;div class=&quot;error-message&quot; id=&quot;message-error&quot;&gt;&lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Send Message&lt;/button&gt;&#10;                        &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;!-- Contact Information --&gt;&#10;                    &lt;div class=&quot;contact-info-section&quot;&gt;&#10;                        &lt;h2&gt;Contact Information&lt;/h2&gt;&#10;                        &#10;                        &lt;div class=&quot;contact-info&quot;&gt;&#10;                            &lt;div class=&quot;contact-item&quot;&gt;&#10;                                &lt;h3&gt;Email&lt;/h3&gt;&#10;                                &lt;p&gt;&lt;a href=&quot;mailto:info@atlasgames.com&quot;&gt;info@atlasgames.com&lt;/a&gt;&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div class=&quot;contact-item&quot;&gt;&#10;                                &lt;h3&gt;Phone&lt;/h3&gt;&#10;                                &lt;p&gt;&lt;a href=&quot;tel:+1234567890&quot;&gt;+1 (234) 567-890&lt;/a&gt;&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div class=&quot;contact-item&quot;&gt;&#10;                                &lt;h3&gt;Office Hours&lt;/h3&gt;&#10;                                &lt;p&gt;Monday - Friday: 9:00 AM - 6:00 PM&lt;br&gt;&#10;                                Saturday: 10:00 AM - 4:00 PM&lt;br&gt;&#10;                                Sunday: Closed&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div class=&quot;contact-item&quot;&gt;&#10;                                &lt;h3&gt;Follow Us&lt;/h3&gt;&#10;                                &lt;div class=&quot;social-links&quot;&gt;&#10;                                    &lt;a href=&quot;#&quot; aria-label=&quot;Follow us on Twitter&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;                                        &lt;i class=&quot;social-icon twitter&quot;&gt;&lt;/i&gt; Twitter&#10;                                    &lt;/a&gt;&#10;                                    &lt;a href=&quot;#&quot; aria-label=&quot;Subscribe to our YouTube channel&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;                                        &lt;i class=&quot;social-icon youtube&quot;&gt;&lt;/i&gt; YouTube&#10;                                    &lt;/a&gt;&#10;                                    &lt;a href=&quot;#&quot; aria-label=&quot;Join our Discord server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;                                        &lt;i class=&quot;social-icon discord&quot;&gt;&lt;/i&gt; Discord&#10;                                    &lt;/a&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- Optional: Google Map --&gt;&#10;                        &lt;div class=&quot;map-section&quot;&gt;&#10;                            &lt;h3&gt;Our Location&lt;/h3&gt;&#10;                            &lt;div class=&quot;map-placeholder&quot;&gt;&#10;                                &lt;p&gt;Map coming soon - We're a remote-first team!&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- FAQ Section --&gt;&#10;            &lt;section class=&quot;faq-section section&quot;&gt;&#10;                &lt;h2&gt;Frequently Asked Questions&lt;/h2&gt;&#10;                &lt;div class=&quot;faq-grid&quot;&gt;&#10;                    &lt;div class=&quot;faq-item&quot;&gt;&#10;                        &lt;h3&gt;How can I report a bug in your games?&lt;/h3&gt;&#10;                        &lt;p&gt;Please use our contact form above with &quot;Technical Support&quot; as the subject, or reach out directly via email with details about the issue you're experiencing.&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;faq-item&quot;&gt;&#10;                        &lt;h3&gt;Do you offer internships or job opportunities?&lt;/h3&gt;&#10;                        &lt;p&gt;We're always looking for talented individuals! Send us your portfolio and CV via the contact form with &quot;Partnership&quot; as the subject.&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;faq-item&quot;&gt;&#10;                        &lt;h3&gt;Can I suggest ideas for new games?&lt;/h3&gt;&#10;                        &lt;p&gt;We love hearing creative ideas from our community! Use the &quot;General Inquiry&quot; option to share your thoughts with us.&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;faq-item&quot;&gt;&#10;                        &lt;h3&gt;How do I get press materials for your games?&lt;/h3&gt;&#10;                        &lt;p&gt;For press kits, screenshots, and other media materials, select &quot;Press Inquiry&quot; in the contact form and we'll get back to you promptly.&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/section&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            const contactForm = document.getElementById('contact-form');&#10;            &#10;            if (contactForm) {&#10;                contactForm.addEventListener('submit', handleFormSubmit);&#10;                &#10;                // Real-time validation&#10;                const inputs = contactForm.querySelectorAll('input, select, textarea');&#10;                inputs.forEach(input =&gt; {&#10;                    input.addEventListener('blur', () =&gt; validateField(input));&#10;                    input.addEventListener('input', () =&gt; clearError(input));&#10;                });&#10;            }&#10;        });&#10;&#10;        function handleFormSubmit(e) {&#10;            e.preventDefault();&#10;            &#10;            const form = e.target;&#10;            const formData = new FormData(form);&#10;            &#10;            // Validate all fields&#10;            let isValid = true;&#10;            const inputs = form.querySelectorAll('input, select, textarea');&#10;            &#10;            inputs.forEach(input =&gt; {&#10;                if (!validateField(input)) {&#10;                    isValid = false;&#10;                }&#10;            });&#10;            &#10;            if (isValid) {&#10;                // Create mailto link with form data&#10;                const subject = encodeURIComponent(`Contact Form: ${formData.get('subject')}`);&#10;                const body = encodeURIComponent(`&#10;Name: ${formData.get('name')}&#10;Email: ${formData.get('email')}&#10;Subject: ${formData.get('subject')}&#10;&#10;Message:&#10;${formData.get('message')}&#10;                `);&#10;                &#10;                const mailtoLink = `mailto:info@atlasgames.com?subject=${subject}&amp;body=${body}`;&#10;                window.location.href = mailtoLink;&#10;                &#10;                // Show success message&#10;                showMessage('Thank you for your message! Your email client should open shortly.', 'success');&#10;                form.reset();&#10;            }&#10;        }&#10;&#10;        function validateField(field) {&#10;            const value = field.value.trim();&#10;            const fieldName = field.name;&#10;            let isValid = true;&#10;            let errorMessage = '';&#10;&#10;            // Clear previous error&#10;            clearError(field);&#10;&#10;            // Required field validation&#10;            if (field.hasAttribute('required') &amp;&amp; !value) {&#10;                errorMessage = `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} is required.`;&#10;                isValid = false;&#10;            }&#10;&#10;            // Email validation&#10;            if (field.type === 'email' &amp;&amp; value &amp;&amp; !Utils.isValidEmail(value)) {&#10;                errorMessage = 'Please enter a valid email address.';&#10;                isValid = false;&#10;            }&#10;&#10;            // Message length validation&#10;            if (fieldName === 'message' &amp;&amp; value &amp;&amp; value.length &lt; 10) {&#10;                errorMessage = 'Message must be at least 10 characters long.';&#10;                isValid = false;&#10;            }&#10;&#10;            if (!isValid) {&#10;                showError(field, errorMessage);&#10;            }&#10;&#10;            return isValid;&#10;        }&#10;&#10;        function showError(field, message) {&#10;            const errorElement = document.getElementById(`${field.name}-error`);&#10;            if (errorElement) {&#10;                errorElement.textContent = message;&#10;                errorElement.style.display = 'block';&#10;            }&#10;            field.classList.add('error');&#10;        }&#10;&#10;        function clearError(field) {&#10;            const errorElement = document.getElementById(`${field.name}-error`);&#10;            if (errorElement) {&#10;                errorElement.textContent = '';&#10;                errorElement.style.display = 'none';&#10;            }&#10;            field.classList.remove('error');&#10;        }&#10;&#10;        function showMessage(message, type = 'info') {&#10;            const messageDiv = document.createElement('div');&#10;            messageDiv.className = `form-message ${type}`;&#10;            messageDiv.textContent = message;&#10;            &#10;            const form = document.getElementById('contact-form');&#10;            form.insertBefore(messageDiv, form.firstChild);&#10;            &#10;            setTimeout(() =&gt; {&#10;                messageDiv.remove();&#10;            }, 5000);&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/data/awards.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/data/awards.json" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="[&#10;  {&#10;    &quot;slug&quot;: &quot;indie-game-excellence-2024&quot;,&#10;    &quot;title&quot;: &quot;Excellence in Game Design&quot;,&#10;    &quot;thumbnail&quot;: &quot;assets/images/awards/indie-excellence-2024/trophy.jpg&quot;,&#10;    &quot;competition&quot;: &quot;Indie Game Festival 2024&quot;,&#10;    &quot;date&quot;: &quot;2024-10-15&quot;,&#10;    &quot;rank&quot;: &quot;1st Place&quot;,&#10;    &quot;description&quot;: &quot;Mystical Realms won first place for Excellence in Game Design at the prestigious Indie Game Festival 2024.&quot;,&#10;    &quot;linkedGame&quot;: &quot;mystical-realms&quot;,&#10;    &quot;participatingMembers&quot;: [&quot;sarah-chen&quot;, &quot;marcus-rodriguez&quot;, &quot;emily-watson&quot;],&#10;    &quot;detailPath&quot;: &quot;award-collection/indie-excellence-2024/indie-excellence-2024.html&quot;&#10;  },&#10;  {&#10;    &quot;slug&quot;: &quot;mobile-innovation-award&quot;,&#10;    &quot;title&quot;: &quot;Mobile Innovation Award&quot;,&#10;    &quot;thumbnail&quot;: &quot;assets/images/awards/mobile-innovation/trophy.jpg&quot;,&#10;    &quot;competition&quot;: &quot;Mobile Gaming Awards 2024&quot;,&#10;    &quot;date&quot;: &quot;2024-09-22&quot;,&#10;    &quot;rank&quot;: &quot;2nd Place&quot;,&#10;    &quot;description&quot;: &quot;Neon Runner received recognition for innovative mobile gameplay mechanics and outstanding visual design.&quot;,&#10;    &quot;linkedGame&quot;: &quot;neon-runner&quot;,&#10;    &quot;participatingMembers&quot;: [&quot;marcus-rodriguez&quot;, &quot;emily-watson&quot;],&#10;    &quot;detailPath&quot;: &quot;award-collection/mobile-innovation/mobile-innovation.html&quot;&#10;  },&#10;  {&#10;    &quot;slug&quot;: &quot;best-art-direction-2024&quot;,&#10;    &quot;title&quot;: &quot;Best Art Direction&quot;,&#10;    &quot;thumbnail&quot;: &quot;assets/images/awards/best-art-2024/trophy.jpg&quot;,&#10;    &quot;competition&quot;: &quot;Game Art Showcase 2024&quot;,&#10;    &quot;date&quot;: &quot;2024-11-08&quot;,&#10;    &quot;rank&quot;: &quot;1st Place&quot;,&#10;    &quot;description&quot;: &quot;Our art team's exceptional work on Mystical Realms earned top honors for visual excellence and artistic innovation.&quot;,&#10;    &quot;linkedGame&quot;: &quot;mystical-realms&quot;,&#10;    &quot;participatingMembers&quot;: [&quot;emily-watson&quot;],&#10;    &quot;detailPath&quot;: &quot;award-collection/best-art-2024/best-art-2024.html&quot;&#10;  }&#10;]" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/data/blogs.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/data/blogs.json" />
              <option name="updatedContent" value="// SCHEMA: Atlas Blog&#10;// {&#10;//   &quot;id&quot;: string, // unique&#10;//   &quot;title&quot;: string,&#10;//   &quot;author&quot;: string,&#10;//   &quot;date&quot;: string (YYYY-MM-DD),&#10;//   &quot;summary&quot;: string,&#10;//   &quot;coverImage&quot;: string, // repo-relative path&#10;//   &quot;detailPage&quot;: string // repo-relative path&#10;// }&#10;[&#10;  {&#10;    &quot;id&quot;: &quot;blog-001&quot;,&#10;    &quot;title&quot;: &quot;Behind the Scenes of Skyward Quest&quot;,&#10;    &quot;author&quot;: &quot;Jane Devlin&quot;,&#10;    &quot;date&quot;: &quot;2024-07-01&quot;,&#10;    &quot;summary&quot;: &quot;A look at the making of our flagship game.&quot;,&#10;    &quot;coverImage&quot;: &quot;assets/images/blogs/skyward-dev.jpg&quot;,&#10;    &quot;detailPage&quot;: &quot;blog-collection/skyward-quest-dev.html&quot;&#10;  }&#10;]&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/data/games.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/data/games.json" />
              <option name="updatedContent" value="// SCHEMA: Atlas Game&#10;// {&#10;//   &quot;id&quot;: string, // unique&#10;//   &quot;title&quot;: string,&#10;//   &quot;coverImage&quot;: string, // repo-relative path&#10;//   &quot;description&quot;: string,&#10;//   &quot;genre&quot;: string[],&#10;//   &quot;platforms&quot;: string[],&#10;//   &quot;releaseDate&quot;: string (YYYY-MM-DD),&#10;//   &quot;developer&quot;: string,&#10;//   &quot;publisher&quot;: string,&#10;//   &quot;detailPage&quot;: string // repo-relative path&#10;// }&#10;[&#10;  {&#10;    &quot;id&quot;: &quot;game-001&quot;,&#10;    &quot;title&quot;: &quot;Skyward Quest&quot;,&#10;    &quot;coverImage&quot;: &quot;assets/images/games/skyward-quest.jpg&quot;,&#10;    &quot;description&quot;: &quot;An epic adventure in the floating isles.&quot;,&#10;    &quot;genre&quot;: [&quot;Adventure&quot;, &quot;RPG&quot;],&#10;    &quot;platforms&quot;: [&quot;PC&quot;, &quot;Switch&quot;],&#10;    &quot;releaseDate&quot;: &quot;2024-06-15&quot;,&#10;    &quot;developer&quot;: &quot;Atlas Studios&quot;,&#10;    &quot;publisher&quot;: &quot;Atlas Games&quot;,&#10;    &quot;detailPage&quot;: &quot;game-collection/skyward-quest.html&quot;&#10;  }&#10;]&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/data/patch-notes.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/data/patch-notes.json" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="[&#10;  {&#10;    &quot;slug&quot;: &quot;mystical-realms-v1-2-0&quot;,&#10;    &quot;title&quot;: &quot;Mystical Realms v1.2.0 - Winter Update&quot;,&#10;    &quot;number&quot;: &quot;1.2.0&quot;,&#10;    &quot;relatedGame&quot;: &quot;mystical-realms&quot;,&#10;    &quot;date&quot;: &quot;2024-12-20&quot;,&#10;    &quot;content&quot;: &quot;## New Features\n\n- Added snow-covered winter realm with unique enemies and treasures\n- Introduced ice magic spells and frost resistance mechanics\n- New legendary winter armor sets and weapons\n- Holiday-themed quests and seasonal events\n\n## Improvements\n\n- Enhanced combat system responsiveness\n- Improved inventory management UI\n- Optimized loading times for large areas\n- Better controller support for all platforms\n\n## Bug Fixes\n\n- Fixed issue where players could get stuck in certain dungeon areas\n- Resolved audio distortion problems in underground levels\n- Fixed rare save game corruption issue\n- Corrected spell cooldown display inconsistencies&quot;,&#10;    &quot;youtubeEmbed&quot;: &quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot;,&#10;    &quot;detailPath&quot;: &quot;patch-notes/mystical-realms-v1-2-0/mystical-realms-v1-2-0.html&quot;&#10;  },&#10;  {&#10;    &quot;slug&quot;: &quot;neon-runner-v2-1-5&quot;,&#10;    &quot;title&quot;: &quot;Neon Runner v2.1.5 - Performance Boost&quot;,&#10;    &quot;number&quot;: &quot;2.1.5&quot;,&#10;    &quot;relatedGame&quot;: &quot;neon-runner&quot;,&#10;    &quot;date&quot;: &quot;2024-11-30&quot;,&#10;    &quot;content&quot;: &quot;## Performance Improvements\n\n- Reduced memory usage by 30% on mobile devices\n- Improved frame rate stability across all platforms\n- Optimized particle effects for better performance\n- Enhanced battery life on mobile devices\n\n## New Content\n\n- Added 3 new character skins with unique animations\n- Introduced weekly challenge mode with exclusive rewards\n- New power-up: Time Dilation for slow-motion effects\n\n## Bug Fixes\n\n- Fixed crash issue on older Android devices\n- Resolved leaderboard synchronization problems\n- Fixed audio cutting out during intense gameplay sections\n- Corrected hitbox inconsistencies with certain obstacles&quot;,&#10;    &quot;youtubeEmbed&quot;: null,&#10;    &quot;detailPath&quot;: &quot;patch-notes/neon-runner-v2-1-5/neon-runner-v2-1-5.html&quot;&#10;  },&#10;  {&#10;    &quot;slug&quot;: &quot;mystical-realms-v1-1-8&quot;,&#10;    &quot;title&quot;: &quot;Mystical Realms v1.1.8 - Bug Fixes&quot;,&#10;    &quot;number&quot;: &quot;1.1.8&quot;,&#10;    &quot;relatedGame&quot;: &quot;mystical-realms&quot;,&#10;    &quot;date&quot;: &quot;2024-11-15&quot;,&#10;    &quot;content&quot;: &quot;## Bug Fixes\n\n- Fixed critical bug where quest items could disappear from inventory\n- Resolved issue with NPCs not responding to dialogue interactions\n- Fixed problem where certain spells would not consume mana properly\n- Corrected texture loading issues on high-resolution displays\n\n## Minor Improvements\n\n- Slightly increased drop rates for rare crafting materials\n- Improved visibility of interactive objects in dark areas\n- Enhanced tooltip information for spell descriptions\n- Better error handling for save/load operations&quot;,&#10;    &quot;youtubeEmbed&quot;: null,&#10;    &quot;detailPath&quot;: &quot;patch-notes/mystical-realms-v1-1-8/mystical-realms-v1-1-8.html&quot;&#10;  }&#10;]" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/data/team.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/data/team.json" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="[&#10;  {&#10;    &quot;slug&quot;: &quot;sarah-chen&quot;,&#10;    &quot;name&quot;: &quot;Sarah Chen&quot;,&#10;    &quot;image&quot;: &quot;assets/images/team/sarah-chen/profile.jpg&quot;,&#10;    &quot;role&quot;: &quot;Lead Game Designer&quot;,&#10;    &quot;bio&quot;: &quot;Sarah is a passionate game designer with over 8 years of experience in the industry. She specializes in RPG mechanics and narrative design, bringing worlds to life through compelling gameplay systems.&quot;,&#10;    &quot;skills&quot;: [&quot;Game Design&quot;, &quot;Narrative Design&quot;, &quot;RPG Systems&quot;, &quot;Player Psychology&quot;, &quot;Prototyping&quot;],&#10;    &quot;email&quot;: &quot;sarah.chen@atlasgames.com&quot;,&#10;    &quot;phone&quot;: &quot;+1 (555) 123-4567&quot;,&#10;    &quot;website&quot;: &quot;https://sarahchen.dev&quot;,&#10;    &quot;cvDownload&quot;: &quot;assets/documents/team/sarah-chen-cv.pdf&quot;,&#10;    &quot;socials&quot;: [&#10;      {&#10;        &quot;platform&quot;: &quot;LinkedIn&quot;,&#10;        &quot;url&quot;: &quot;https://linkedin.com/in/sarahchen-gamedev&quot;,&#10;        &quot;icon&quot;: &quot;linkedin&quot;&#10;      },&#10;      {&#10;        &quot;platform&quot;: &quot;Twitter&quot;,&#10;        &quot;url&quot;: &quot;https://twitter.com/sarahchen_dev&quot;,&#10;        &quot;icon&quot;: &quot;twitter&quot;&#10;      }&#10;    ],&#10;    &quot;detailPath&quot;: &quot;team-collection/sarah-chen/sarah-chen-detail.html&quot;&#10;  },&#10;  {&#10;    &quot;slug&quot;: &quot;marcus-rodriguez&quot;,&#10;    &quot;name&quot;: &quot;Marcus Rodriguez&quot;,&#10;    &quot;image&quot;: &quot;assets/images/team/marcus-rodriguez/profile.jpg&quot;,&#10;    &quot;role&quot;: &quot;Lead Developer&quot;,&#10;    &quot;bio&quot;: &quot;Marcus is a full-stack developer who bridges the gap between creative vision and technical implementation. His expertise in multiple programming languages and game engines makes him invaluable to our development process.&quot;,&#10;    &quot;skills&quot;: [&quot;Unity&quot;, &quot;C#&quot;, &quot;JavaScript&quot;, &quot;Mobile Development&quot;, &quot;Performance Optimization&quot;, &quot;Backend Systems&quot;],&#10;    &quot;email&quot;: &quot;marcus.rodriguez@atlasgames.com&quot;,&#10;    &quot;phone&quot;: &quot;+1 (555) 234-5678&quot;,&#10;    &quot;website&quot;: &quot;https://marcusdev.io&quot;,&#10;    &quot;cvDownload&quot;: &quot;assets/documents/team/marcus-rodriguez-cv.pdf&quot;,&#10;    &quot;socials&quot;: [&#10;      {&#10;        &quot;platform&quot;: &quot;GitHub&quot;,&#10;        &quot;url&quot;: &quot;https://github.com/marcusrod&quot;,&#10;        &quot;icon&quot;: &quot;github&quot;&#10;      },&#10;      {&#10;        &quot;platform&quot;: &quot;LinkedIn&quot;,&#10;        &quot;url&quot;: &quot;https://linkedin.com/in/marcus-rodriguez-dev&quot;,&#10;        &quot;icon&quot;: &quot;linkedin&quot;&#10;      }&#10;    ],&#10;    &quot;detailPath&quot;: &quot;team-collection/marcus-rodriguez/marcus-rodriguez-detail.html&quot;&#10;  },&#10;  {&#10;    &quot;slug&quot;: &quot;emily-watson&quot;,&#10;    &quot;name&quot;: &quot;Emily Watson&quot;,&#10;    &quot;image&quot;: &quot;assets/images/team/emily-watson/profile.jpg&quot;,&#10;    &quot;role&quot;: &quot;Art Director&quot;,&#10;    &quot;bio&quot;: &quot;Emily brings visual magic to our games with her exceptional artistic vision. Her background in both traditional and digital art helps create the stunning visuals that define our game aesthetics.&quot;,&#10;    &quot;skills&quot;: [&quot;Digital Art&quot;, &quot;3D Modeling&quot;, &quot;UI/UX Design&quot;, &quot;Animation&quot;, &quot;Concept Art&quot;, &quot;Art Direction&quot;],&#10;    &quot;email&quot;: &quot;emily.watson@atlasgames.com&quot;,&#10;    &quot;phone&quot;: &quot;+1 (555) 345-6789&quot;,&#10;    &quot;website&quot;: &quot;https://emilywatson.art&quot;,&#10;    &quot;cvDownload&quot;: &quot;assets/documents/team/emily-watson-cv.pdf&quot;,&#10;    &quot;socials&quot;: [&#10;      {&#10;        &quot;platform&quot;: &quot;Instagram&quot;,&#10;        &quot;url&quot;: &quot;https://instagram.com/emilywatson_art&quot;,&#10;        &quot;icon&quot;: &quot;instagram&quot;&#10;      },&#10;      {&#10;        &quot;platform&quot;: &quot;ArtStation&quot;,&#10;        &quot;url&quot;: &quot;https://artstation.com/emilywatson&quot;,&#10;        &quot;icon&quot;: &quot;artstation&quot;&#10;      }&#10;    ],&#10;    &quot;detailPath&quot;: &quot;team-collection/emily-watson/emily-watson-detail.html&quot;&#10;  }&#10;]" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/games.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/games.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;Explore Atlas Games' collection of immersive gaming experiences. From epic RPGs to mobile adventures, discover our complete game library.&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;Atlas Games, game library, RPG games, mobile games, indie games, puzzle games&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;Games - Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;Explore our complete collection of immersive gaming experiences&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;assets/images/ui/og-games.jpg&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;https://atlasgames22.github.io/games.html&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;Games - Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;Explore our complete collection of immersive gaming experiences&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;assets/images/ui/og-games.jpg&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;CollectionPage&quot;,&#10;        &quot;name&quot;: &quot;Atlas Games - Game Collection&quot;,&#10;        &quot;description&quot;: &quot;Complete collection of games developed by Atlas Games&quot;,&#10;        &quot;url&quot;: &quot;https://atlasgames22.github.io/games.html&quot;,&#10;        &quot;mainEntity&quot;: {&#10;            &quot;@type&quot;: &quot;ItemList&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games Collection&quot;&#10;        }&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;assets/css/style.css&quot;&gt;&#10;    &#10;    &lt;title&gt;Games - Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Page Header --&gt;&#10;            &lt;header class=&quot;page-header section&quot;&gt;&#10;                &lt;h1&gt;Our Games&lt;/h1&gt;&#10;                &lt;p&gt;Discover our complete collection of immersive gaming experiences, from epic adventures to innovative puzzles.&lt;/p&gt;&#10;            &lt;/header&gt;&#10;&#10;            &lt;!-- Search and Filters --&gt;&#10;            &lt;div id=&quot;filters-container&quot;&gt;&lt;/div&gt;&#10;&#10;            &lt;!-- Results Info --&gt;&#10;            &lt;div class=&quot;results-info&quot;&gt;&#10;                &lt;div id=&quot;results-count&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Games Grid --&gt;&#10;            &lt;div id=&quot;games-container&quot;&gt;&#10;                &lt;!-- Games will be loaded here --&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/search.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/filters.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/listing-loader.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            // Custom card template for games&#10;            const gameCardTemplate = (game) =&gt; {&#10;                const tags = game.tags.map(tag =&gt; `&lt;span class=&quot;tag&quot;&gt;${tag}&lt;/span&gt;`).join('');&#10;                const platforms = game.platform.map(platform =&gt; `&lt;span class=&quot;platform&quot;&gt;${platform}&lt;/span&gt;`).join('');&#10;                &#10;                return `&#10;                    &lt;img src=&quot;${game.thumbnail}&quot; alt=&quot;${game.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                    &lt;div class=&quot;card-content&quot;&gt;&#10;                        &lt;h3 class=&quot;card-title&quot;&gt;&#10;                            &lt;a href=&quot;${game.detailPath}&quot;&gt;${game.title}&lt;/a&gt;&#10;                        &lt;/h3&gt;&#10;                        &lt;div class=&quot;card-meta&quot;&gt;&#10;                            &lt;span class=&quot;release-date&quot;&gt;${Utils.formatDate(game.releaseDate)}&lt;/span&gt;&#10;                            &lt;span class=&quot;genre&quot;&gt;${game.genre}&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;p class=&quot;card-description&quot;&gt;${game.description}&lt;/p&gt;&#10;                        &lt;div class=&quot;card-platforms&quot;&gt;${platforms}&lt;/div&gt;&#10;                        &lt;div class=&quot;card-tags&quot;&gt;${tags}&lt;/div&gt;&#10;                        &lt;div class=&quot;card-footer&quot;&gt;&#10;                            &lt;span class=&quot;status status-${game.status.toLowerCase().replace(/\s+/g, '-')}&quot;&gt;${game.status}&lt;/span&gt;&#10;                            &lt;div class=&quot;card-actions&quot;&gt;&#10;                                &lt;a href=&quot;${game.detailPath}&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;Learn More&lt;/a&gt;&#10;                                ${game.itchUrl ? `&lt;a href=&quot;${game.itchUrl}&quot; class=&quot;btn btn-secondary btn-sm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Play Now&lt;/a&gt;` : ''}&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                `;&#10;            };&#10;&#10;            // Initialize games listing&#10;            const gamesListing = new ListingLoader({&#10;                dataUrl: 'data/games.json',&#10;                containerSelector: '#games-container',&#10;                filtersSelector: '#filters-container',&#10;                cardTemplate: gameCardTemplate,&#10;                searchFields: ['title', 'description', 'tags', 'genre', 'platform'],&#10;                itemsPerPage: 9&#10;            });&#10;        });&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/index.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;Atlas Games - Crafting immersive gaming experiences with passion and innovation. Discover our latest games, meet our talented team, and explore our award-winning projects.&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;Atlas Games, game development, indie games, RPG, mobile games, puzzle games&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;Atlas Games - Home&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;Crafting immersive gaming experiences with passion and innovation&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;assets/images/ui/og-home.jpg&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;https://atlasgames22.github.io&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;Atlas Games - Home&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;Crafting immersive gaming experiences with passion and innovation&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;assets/images/ui/og-home.jpg&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;Organization&quot;,&#10;        &quot;name&quot;: &quot;Atlas Games&quot;,&#10;        &quot;url&quot;: &quot;https://atlasgames22.github.io&quot;,&#10;        &quot;logo&quot;: &quot;https://atlasgames22.github.io/assets/images/ui/logo.png&quot;,&#10;        &quot;description&quot;: &quot;Crafting immersive gaming experiences with passion and innovation&quot;,&#10;        &quot;contactPoint&quot;: {&#10;            &quot;@type&quot;: &quot;ContactPoint&quot;,&#10;            &quot;telephone&quot;: &quot;+1-234-567-890&quot;,&#10;            &quot;contactType&quot;: &quot;customer service&quot;,&#10;            &quot;email&quot;: &quot;info@atlasgames.com&quot;&#10;        },&#10;        &quot;sameAs&quot;: [&#10;            &quot;https://twitter.com/atlasgames&quot;,&#10;            &quot;https://youtube.com/atlasgames&quot;&#10;        ]&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;assets/css/style.css&quot;&gt;&#10;    &#10;    &lt;title&gt;Atlas Games - Home&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;!-- Hero Section --&gt;&#10;        &lt;section class=&quot;hero section&quot;&gt;&#10;            &lt;div class=&quot;container&quot;&gt;&#10;                &lt;div class=&quot;hero-content&quot;&gt;&#10;                    &lt;img src=&quot;assets/images/ui/logo-large.png&quot; alt=&quot;Atlas Games Logo&quot; class=&quot;hero-logo&quot;&gt;&#10;                    &lt;h1&gt;Atlas Games&lt;/h1&gt;&#10;                    &lt;p class=&quot;hero-tagline&quot;&gt;Crafting immersive gaming experiences with passion and innovation&lt;/p&gt;&#10;                    &lt;div class=&quot;hero-actions&quot;&gt;&#10;                        &lt;a href=&quot;games.html&quot; class=&quot;btn btn-primary&quot;&gt;Explore Our Games&lt;/a&gt;&#10;                        &lt;a href=&quot;contact.html&quot; class=&quot;btn btn-secondary&quot;&gt;Get In Touch&lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- Featured Games --&gt;&#10;        &lt;section class=&quot;featured-games section&quot;&gt;&#10;            &lt;div class=&quot;container&quot;&gt;&#10;                &lt;h2&gt;Featured Games&lt;/h2&gt;&#10;                &lt;div id=&quot;featured-games-container&quot; class=&quot;grid grid-3&quot;&gt;&#10;                    &lt;!-- Games will be loaded here --&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;section-footer&quot;&gt;&#10;                    &lt;a href=&quot;games.html&quot; class=&quot;btn btn-primary&quot;&gt;View All Games&lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- Recent Blogs --&gt;&#10;        &lt;section class=&quot;recent-blogs section&quot;&gt;&#10;            &lt;div class=&quot;container&quot;&gt;&#10;                &lt;h2&gt;Latest From Our Blog&lt;/h2&gt;&#10;                &lt;div id=&quot;recent-blogs-container&quot; class=&quot;grid grid-3&quot;&gt;&#10;                    &lt;!-- Blogs will be loaded here --&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;section-footer&quot;&gt;&#10;                    &lt;a href=&quot;blogs.html&quot; class=&quot;btn btn-primary&quot;&gt;Read More Articles&lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- Team Highlight --&gt;&#10;        &lt;section class=&quot;team-highlight section&quot;&gt;&#10;            &lt;div class=&quot;container&quot;&gt;&#10;                &lt;h2&gt;Meet Our Team&lt;/h2&gt;&#10;                &lt;div id=&quot;team-highlight-container&quot; class=&quot;grid grid-3&quot;&gt;&#10;                    &lt;!-- Team members will be loaded here --&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;section-footer&quot;&gt;&#10;                    &lt;a href=&quot;team.html&quot; class=&quot;btn btn-primary&quot;&gt;Meet Everyone&lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- Awards Highlight --&gt;&#10;        &lt;section class=&quot;awards-highlight section&quot;&gt;&#10;            &lt;div class=&quot;container&quot;&gt;&#10;                &lt;h2&gt;Our Achievements&lt;/h2&gt;&#10;                &lt;div id=&quot;awards-highlight-container&quot; class=&quot;grid grid-3&quot;&gt;&#10;                    &lt;!-- Awards will be loaded here --&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;section-footer&quot;&gt;&#10;                    &lt;a href=&quot;awards.html&quot; class=&quot;btn btn-primary&quot;&gt;View All Awards&lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- About Section --&gt;&#10;        &lt;section class=&quot;about section&quot;&gt;&#10;            &lt;div class=&quot;container&quot;&gt;&#10;                &lt;div class=&quot;about-content&quot;&gt;&#10;                    &lt;h2&gt;About Atlas Games&lt;/h2&gt;&#10;                    &lt;p&gt;We are a passionate indie game development studio dedicated to creating memorable gaming experiences. Our team combines creative vision with technical expertise to bring unique worlds and engaging gameplay to life.&lt;/p&gt;&#10;                    &lt;p&gt;From epic RPG adventures to fast-paced mobile games, we explore diverse genres while maintaining our commitment to quality, innovation, and player satisfaction.&lt;/p&gt;&#10;                    &lt;div class=&quot;about-stats&quot;&gt;&#10;                        &lt;div class=&quot;stat&quot;&gt;&#10;                            &lt;span class=&quot;stat-number&quot; id=&quot;games-count&quot;&gt;0&lt;/span&gt;&#10;                            &lt;span class=&quot;stat-label&quot;&gt;Games Released&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;stat&quot;&gt;&#10;                            &lt;span class=&quot;stat-number&quot; id=&quot;awards-count&quot;&gt;0&lt;/span&gt;&#10;                            &lt;span class=&quot;stat-label&quot;&gt;Awards Won&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;stat&quot;&gt;&#10;                            &lt;span class=&quot;stat-number&quot; id=&quot;team-count&quot;&gt;0&lt;/span&gt;&#10;                            &lt;span class=&quot;stat-label&quot;&gt;Team Members&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/search.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script&gt;&#10;        // Homepage specific functionality&#10;        document.addEventListener('DOMContentLoaded', async () =&gt; {&#10;            try {&#10;                // Load and display featured content&#10;                await loadFeaturedGames();&#10;                await loadRecentBlogs();&#10;                await loadTeamHighlight();&#10;                await loadAwardsHighlight();&#10;                await updateStats();&#10;            } catch (error) {&#10;                console.error('Error loading homepage content:', error);&#10;            }&#10;        });&#10;&#10;        async function loadFeaturedGames() {&#10;            try {&#10;                const response = await fetch('data/games.json');&#10;                const games = await response.json();&#10;                const featuredGames = games.slice(0, 3);&#10;                &#10;                const container = document.getElementById('featured-games-container');&#10;                container.innerHTML = '';&#10;                &#10;                featuredGames.forEach(game =&gt; {&#10;                    const card = createGameCard(game);&#10;                    container.appendChild(card);&#10;                });&#10;            } catch (error) {&#10;                console.error('Error loading featured games:', error);&#10;            }&#10;        }&#10;&#10;        async function loadRecentBlogs() {&#10;            try {&#10;                const response = await fetch('data/blogs.json');&#10;                const blogs = await response.json();&#10;                const recentBlogs = blogs.slice(0, 3);&#10;                &#10;                const container = document.getElementById('recent-blogs-container');&#10;                container.innerHTML = '';&#10;                &#10;                recentBlogs.forEach(blog =&gt; {&#10;                    const card = createBlogCard(blog);&#10;                    container.appendChild(card);&#10;                });&#10;            } catch (error) {&#10;                console.error('Error loading recent blogs:', error);&#10;            }&#10;        }&#10;&#10;        async function loadTeamHighlight() {&#10;            try {&#10;                const response = await fetch('data/team.json');&#10;                const team = await response.json();&#10;                const teamHighlight = team.slice(0, 3);&#10;                &#10;                const container = document.getElementById('team-highlight-container');&#10;                container.innerHTML = '';&#10;                &#10;                teamHighlight.forEach(member =&gt; {&#10;                    const card = createTeamCard(member);&#10;                    container.appendChild(card);&#10;                });&#10;            } catch (error) {&#10;                console.error('Error loading team highlight:', error);&#10;            }&#10;        }&#10;&#10;        async function loadAwardsHighlight() {&#10;            try {&#10;                const response = await fetch('data/awards.json');&#10;                const awards = await response.json();&#10;                const awardsHighlight = awards.slice(0, 3);&#10;                &#10;                const container = document.getElementById('awards-highlight-container');&#10;                container.innerHTML = '';&#10;                &#10;                awardsHighlight.forEach(award =&gt; {&#10;                    const card = createAwardCard(award);&#10;                    container.appendChild(card);&#10;                });&#10;            } catch (error) {&#10;                console.error('Error loading awards highlight:', error);&#10;            }&#10;        }&#10;&#10;        function createGameCard(game) {&#10;            const card = document.createElement('article');&#10;            card.className = 'card';&#10;            card.innerHTML = `&#10;                &lt;img src=&quot;${game.thumbnail}&quot; alt=&quot;${game.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                &lt;div class=&quot;card-content&quot;&gt;&#10;                    &lt;h3 class=&quot;card-title&quot;&gt;&#10;                        &lt;a href=&quot;${game.detailPath}&quot;&gt;${game.title}&lt;/a&gt;&#10;                    &lt;/h3&gt;&#10;                    &lt;div class=&quot;card-meta&quot;&gt;${Utils.formatDate(game.releaseDate)}&lt;/div&gt;&#10;                    &lt;p class=&quot;card-description&quot;&gt;${game.description}&lt;/p&gt;&#10;                    &lt;div class=&quot;card-tags&quot;&gt;&#10;                        ${game.tags.map(tag =&gt; `&lt;span class=&quot;tag&quot;&gt;${tag}&lt;/span&gt;`).join('')}&#10;                    &lt;/div&gt;&#10;                    &lt;span class=&quot;status status-${game.status.toLowerCase().replace(/\s+/g, '-')}&quot;&gt;${game.status}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return card;&#10;        }&#10;&#10;        function createBlogCard(blog) {&#10;            const card = document.createElement('article');&#10;            card.className = 'card';&#10;            card.innerHTML = `&#10;                &lt;img src=&quot;${blog.thumbnail}&quot; alt=&quot;${blog.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                &lt;div class=&quot;card-content&quot;&gt;&#10;                    &lt;h3 class=&quot;card-title&quot;&gt;&#10;                        &lt;a href=&quot;${blog.detailPath}&quot;&gt;${blog.title}&lt;/a&gt;&#10;                    &lt;/h3&gt;&#10;                    &lt;div class=&quot;card-meta&quot;&gt;${Utils.formatDate(blog.date)} • ${blog.readTime} min read&lt;/div&gt;&#10;                    &lt;p class=&quot;card-description&quot;&gt;${blog.excerpt}&lt;/p&gt;&#10;                    &lt;div class=&quot;card-tags&quot;&gt;&#10;                        ${blog.tags.map(tag =&gt; `&lt;span class=&quot;tag&quot;&gt;${tag}&lt;/span&gt;`).join('')}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return card;&#10;        }&#10;&#10;        function createTeamCard(member) {&#10;            const card = document.createElement('article');&#10;            card.className = 'card';&#10;            card.innerHTML = `&#10;                &lt;img src=&quot;${member.image}&quot; alt=&quot;${member.name}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                &lt;div class=&quot;card-content&quot;&gt;&#10;                    &lt;h3 class=&quot;card-title&quot;&gt;&#10;                        &lt;a href=&quot;${member.detailPath}&quot;&gt;${member.name}&lt;/a&gt;&#10;                    &lt;/h3&gt;&#10;                    &lt;div class=&quot;card-meta&quot;&gt;${member.role}&lt;/div&gt;&#10;                    &lt;p class=&quot;card-description&quot;&gt;${Utils.truncateText(member.bio, 100)}&lt;/p&gt;&#10;                    &lt;div class=&quot;card-tags&quot;&gt;&#10;                        ${member.skills.slice(0, 3).map(skill =&gt; `&lt;span class=&quot;tag&quot;&gt;${skill}&lt;/span&gt;`).join('')}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return card;&#10;        }&#10;&#10;        function createAwardCard(award) {&#10;            const card = document.createElement('article');&#10;            card.className = 'card';&#10;            card.innerHTML = `&#10;                &lt;img src=&quot;${award.thumbnail}&quot; alt=&quot;${award.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                &lt;div class=&quot;card-content&quot;&gt;&#10;                    &lt;h3 class=&quot;card-title&quot;&gt;&#10;                        &lt;a href=&quot;${award.detailPath}&quot;&gt;${award.title}&lt;/a&gt;&#10;                    &lt;/h3&gt;&#10;                    &lt;div class=&quot;card-meta&quot;&gt;${award.competition} • ${award.rank}&lt;/div&gt;&#10;                    &lt;p class=&quot;card-description&quot;&gt;${award.description}&lt;/p&gt;&#10;                    &lt;div class=&quot;card-meta&quot;&gt;${Utils.formatDate(award.date)}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return card;&#10;        }&#10;&#10;        async function updateStats() {&#10;            try {&#10;                const [games, awards, team] = await Promise.all([&#10;                    fetch('data/games.json').then(r =&gt; r.json()),&#10;                    fetch('data/awards.json').then(r =&gt; r.json()),&#10;                    fetch('data/team.json').then(r =&gt; r.json())&#10;                ]);&#10;&#10;                document.getElementById('games-count').textContent = games.length;&#10;                document.getElementById('awards-count').textContent = awards.length;&#10;                document.getElementById('team-count').textContent = team.length;&#10;            } catch (error) {&#10;                console.error('Error updating stats:', error);&#10;            }&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/reusables/footer.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/reusables/footer.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;footer class=&quot;main-footer&quot; role=&quot;contentinfo&quot;&gt;&#10;    &lt;div class=&quot;footer-container&quot;&gt;&#10;        &lt;div class=&quot;footer-section&quot;&gt;&#10;            &lt;h3&gt;Atlas Games&lt;/h3&gt;&#10;            &lt;p&gt;Crafting immersive gaming experiences with passion and innovation.&lt;/p&gt;&#10;            &lt;div class=&quot;social-links&quot;&gt;&#10;                &lt;a href=&quot;#&quot; aria-label=&quot;Follow us on Twitter&quot;&gt;&lt;i class=&quot;social-icon twitter&quot;&gt;&lt;/i&gt;&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot; aria-label=&quot;Follow us on YouTube&quot;&gt;&lt;i class=&quot;social-icon youtube&quot;&gt;&lt;/i&gt;&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot; aria-label=&quot;Follow us on Discord&quot;&gt;&lt;i class=&quot;social-icon discord&quot;&gt;&lt;/i&gt;&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;div class=&quot;footer-section&quot;&gt;&#10;            &lt;h4&gt;Quick Links&lt;/h4&gt;&#10;            &lt;ul&gt;&#10;                &lt;li&gt;&lt;a href=&quot;games.html&quot;&gt;Our Games&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;blogs.html&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;team.html&quot;&gt;Meet the Team&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;awards.html&quot;&gt;Awards&lt;/a&gt;&lt;/li&gt;&#10;            &lt;/ul&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;div class=&quot;footer-section&quot;&gt;&#10;            &lt;h4&gt;Contact&lt;/h4&gt;&#10;            &lt;p&gt;Email: &lt;a href=&quot;mailto:info@atlasgames.com&quot;&gt;info@atlasgames.com&lt;/a&gt;&lt;/p&gt;&#10;            &lt;p&gt;Phone: &lt;a href=&quot;tel:+1234567890&quot;&gt;+1 (234) 567-890&lt;/a&gt;&lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;div class=&quot;footer-section&quot;&gt;&#10;            &lt;h4&gt;Newsletter&lt;/h4&gt;&#10;            &lt;p&gt;Stay updated with our latest games and news&lt;/p&gt;&#10;            &lt;form class=&quot;newsletter-form&quot;&gt;&#10;                &lt;input type=&quot;email&quot; placeholder=&quot;Enter your email&quot; aria-label=&quot;Email for newsletter&quot;&gt;&#10;                &lt;button type=&quot;submit&quot;&gt;Subscribe&lt;/button&gt;&#10;            &lt;/form&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &#10;    &lt;div class=&quot;footer-bottom&quot;&gt;&#10;        &lt;p&gt;&amp;copy; 2025 Atlas Games. All rights reserved.&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&lt;/footer&gt;&#10;&#10;&lt;script src=&quot;assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;&lt;script src=&quot;assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/reusables/header.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/reusables/header.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;&quot;&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;assets/css/style.css&quot;&gt;&#10;    &#10;    &lt;title&gt;Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/reusables/navigationbar.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/reusables/navigationbar.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;nav class=&quot;main-nav&quot; role=&quot;navigation&quot; aria-label=&quot;Main navigation&quot;&gt;&#10;    &lt;div class=&quot;nav-container&quot;&gt;&#10;        &lt;div class=&quot;nav-brand&quot;&gt;&#10;            &lt;a href=&quot;index.html&quot; aria-label=&quot;Atlas Games Home&quot;&gt;&#10;                &lt;img src=&quot;assets/images/ui/logo.png&quot; alt=&quot;Atlas Games Logo&quot; class=&quot;logo&quot;&gt;&#10;                &lt;span class=&quot;brand-text&quot;&gt;Atlas Games&lt;/span&gt;&#10;            &lt;/a&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;button class=&quot;nav-toggle&quot; aria-label=&quot;Toggle navigation menu&quot; aria-expanded=&quot;false&quot;&gt;&#10;            &lt;span&gt;&lt;/span&gt;&#10;            &lt;span&gt;&lt;/span&gt;&#10;            &lt;span&gt;&lt;/span&gt;&#10;        &lt;/button&gt;&#10;        &#10;        &lt;ul class=&quot;nav-menu&quot;&gt;&#10;            &lt;li&gt;&lt;a href=&quot;index.html&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&#10;            &lt;li&gt;&lt;a href=&quot;games.html&quot;&gt;Games&lt;/a&gt;&lt;/li&gt;&#10;            &lt;li&gt;&lt;a href=&quot;blogs.html&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt;&#10;            &lt;li&gt;&lt;a href=&quot;team.html&quot;&gt;Team&lt;/a&gt;&lt;/li&gt;&#10;            &lt;li&gt;&lt;a href=&quot;awards.html&quot;&gt;Awards&lt;/a&gt;&lt;/li&gt;&#10;            &lt;li&gt;&lt;a href=&quot;contact.html&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;    &lt;/div&gt;&#10;&lt;/nav&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/robots.txt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/robots.txt" />
              <option name="originalContent" value="User-agent: *&#10;Allow: /&#10;Sitemap: https://atlasgames22.github.io/sitemap.xml&#10;&#10;" />
              <option name="updatedContent" value="User-agent: *&#10;Allow: /&#10;&#10;# Sitemap&#10;Sitemap: https://atlasgames22.github.io/sitemap.xml&#10;&#10;# Crawl-delay for polite crawling&#10;Crawl-delay: 1&#10;&#10;# Allow access to CSS and JS files&#10;Allow: /assets/css/&#10;Allow: /assets/js/&#10;Allow: /assets/images/&#10;Allow: /assets/videos/&#10;&#10;# Allow access to data files&#10;Allow: /data/&#10;&#10;# Specific page permissions&#10;Allow: /games.html&#10;Allow: /blogs.html&#10;Allow: /team.html&#10;Allow: /awards.html&#10;Allow: /contact.html&#10;Allow: /game-collection/&#10;Allow: /blog-collection/&#10;Allow: /team-collection/&#10;Allow: /award-collection/&#10;Allow: /patch-notes/&#10;&#10;# Disallow admin or development files (if any exist in future)&#10;Disallow: /admin/&#10;Disallow: *.tmp&#10;Disallow: *.log" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/sitemap.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/sitemap.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;urlset xmlns=&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot;&gt;&#10;    &lt;!-- Main Pages --&gt;&#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;weekly&lt;/changefreq&gt;&#10;        &lt;priority&gt;1.0&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/games.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;weekly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.9&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/blogs.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;weekly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.8&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/team.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;monthly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.7&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/awards.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;monthly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.6&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/contact.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.5&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;!-- Game Detail Pages --&gt;&#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/game-collection/mystical-realms/mystical-realms-detail.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-12-15&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;monthly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.8&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/game-collection/neon-runner/neon-runner-detail.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-08-22&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;monthly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.8&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/game-collection/puzzle-kingdom/puzzle-kingdom-detail.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;weekly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.7&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;!-- Blog Detail Pages --&gt;&#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/blog-collection/game-development-journey/game-development-journey.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-11-15&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.6&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/blog-collection/mobile-optimization/mobile-optimization.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-10-28&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.6&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/blog-collection/puzzle-design/puzzle-design.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-12-03&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.6&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;!-- Team Detail Pages --&gt;&#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/team-collection/sarah-chen/sarah-chen-detail.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;monthly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.5&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/team-collection/marcus-rodriguez/marcus-rodriguez-detail.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;monthly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.5&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/team-collection/emily-watson/emily-watson-detail.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;monthly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.5&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;!-- Award Detail Pages --&gt;&#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/award-collection/indie-excellence-2024/indie-excellence-2024.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-10-15&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.4&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/award-collection/mobile-innovation/mobile-innovation.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-09-22&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.4&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/award-collection/best-art-2024/best-art-2024.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-11-08&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.4&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;!-- Patch Notes Pages --&gt;&#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/patch-notes/mystical-realms-v1-2-0/mystical-realms-v1-2-0.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-12-20&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.3&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/patch-notes/neon-runner-v2-1-5/neon-runner-v2-1-5.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-11-30&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.3&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;    &#10;    &lt;url&gt;&#10;        &lt;loc&gt;https://atlasgames22.github.io/patch-notes/mystical-realms-v1-1-8/mystical-realms-v1-1-8.html&lt;/loc&gt;&#10;        &lt;lastmod&gt;2024-11-15&lt;/lastmod&gt;&#10;        &lt;changefreq&gt;yearly&lt;/changefreq&gt;&#10;        &lt;priority&gt;0.3&lt;/priority&gt;&#10;    &lt;/url&gt;&#10;&lt;/urlset&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/team.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/team.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;Meet the talented team behind Atlas Games. Learn about our passionate developers, designers, and creators who bring our games to life.&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;Atlas Games team, game developers, game designers, meet the team&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;Team - Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;Meet the talented team behind Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;assets/images/ui/og-team.jpg&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;https://atlasgames22.github.io/team.html&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;Team - Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;Meet the talented team behind Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;assets/images/ui/og-team.jpg&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;AboutPage&quot;,&#10;        &quot;name&quot;: &quot;Atlas Games Team&quot;,&#10;        &quot;description&quot;: &quot;Meet the talented team behind Atlas Games&quot;,&#10;        &quot;url&quot;: &quot;https://atlasgames22.github.io/team.html&quot;&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;assets/css/style.css&quot;&gt;&#10;    &#10;    &lt;title&gt;Team - Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Page Header --&gt;&#10;            &lt;header class=&quot;page-header section&quot;&gt;&#10;                &lt;h1&gt;Our Team&lt;/h1&gt;&#10;                &lt;p&gt;Meet the passionate individuals who bring our gaming visions to life with creativity, skill, and dedication.&lt;/p&gt;&#10;            &lt;/header&gt;&#10;&#10;            &lt;!-- Search and Filters --&gt;&#10;            &lt;div id=&quot;filters-container&quot;&gt;&lt;/div&gt;&#10;&#10;            &lt;!-- Results Info --&gt;&#10;            &lt;div class=&quot;results-info&quot;&gt;&#10;                &lt;div id=&quot;results-count&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Team Grid --&gt;&#10;            &lt;div id=&quot;team-container&quot;&gt;&#10;                &lt;!-- Team members will be loaded here --&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/search.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/filters.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;assets/js/listing-loader.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            // Custom card template for team members&#10;            const teamCardTemplate = (member) =&gt; {&#10;                const skills = member.skills.slice(0, 4).map(skill =&gt; `&lt;span class=&quot;tag&quot;&gt;${skill}&lt;/span&gt;`).join('');&#10;                const socials = member.socials ? member.socials.map(social =&gt; &#10;                    `&lt;a href=&quot;${social.url}&quot; class=&quot;social-link&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; aria-label=&quot;${social.platform}&quot;&gt;&#10;                        &lt;i class=&quot;social-icon ${social.icon}&quot;&gt;&lt;/i&gt;&#10;                    &lt;/a&gt;`&#10;                ).join('') : '';&#10;                &#10;                return `&#10;                    &lt;img src=&quot;${member.image}&quot; alt=&quot;${member.name}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                    &lt;div class=&quot;card-content&quot;&gt;&#10;                        &lt;h3 class=&quot;card-title&quot;&gt;&#10;                            &lt;a href=&quot;${member.detailPath}&quot;&gt;${member.name}&lt;/a&gt;&#10;                        &lt;/h3&gt;&#10;                        &lt;div class=&quot;card-meta&quot;&gt;&#10;                            &lt;span class=&quot;role&quot;&gt;${member.role}&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;p class=&quot;card-description&quot;&gt;${Utils.truncateText(member.bio, 120)}&lt;/p&gt;&#10;                        &lt;div class=&quot;card-tags&quot;&gt;${skills}&lt;/div&gt;&#10;                        &lt;div class=&quot;card-footer&quot;&gt;&#10;                            &lt;a href=&quot;${member.detailPath}&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;View Profile&lt;/a&gt;&#10;                            ${socials ? `&lt;div class=&quot;social-links&quot;&gt;${socials}&lt;/div&gt;` : ''}&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                `;&#10;            };&#10;&#10;            // Initialize team listing&#10;            const teamListing = new ListingLoader({&#10;                dataUrl: 'data/team.json',&#10;                containerSelector: '#team-container',&#10;                filtersSelector: '#filters-container',&#10;                cardTemplate: teamCardTemplate,&#10;                searchFields: ['name', 'role', 'bio', 'skills'],&#10;                itemsPerPage: 9&#10;            });&#10;        });&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/blog-detail.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/blog-detail.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;{{BLOG_EXCERPT}}&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;{{BLOG_TAGS}}, Atlas Games blog&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;{{BLOG_AUTHOR}}&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;{{BLOG_TITLE}} - Atlas Games Blog&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;{{BLOG_EXCERPT}}&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;{{BLOG_THUMBNAIL}}&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;{{BLOG_URL}}&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;article&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;article:author&quot; content=&quot;{{BLOG_AUTHOR}}&quot;&gt;&#10;    &lt;meta property=&quot;article:published_time&quot; content=&quot;{{BLOG_DATE}}&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;{{BLOG_TITLE}} - Atlas Games Blog&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;{{BLOG_EXCERPT}}&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;{{BLOG_THUMBNAIL}}&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;BlogPosting&quot;,&#10;        &quot;headline&quot;: &quot;{{BLOG_TITLE}}&quot;,&#10;        &quot;description&quot;: &quot;{{BLOG_EXCERPT}}&quot;,&#10;        &quot;image&quot;: &quot;{{BLOG_THUMBNAIL}}&quot;,&#10;        &quot;author&quot;: {&#10;            &quot;@type&quot;: &quot;Person&quot;,&#10;            &quot;name&quot;: &quot;{{BLOG_AUTHOR}}&quot;&#10;        },&#10;        &quot;publisher&quot;: {&#10;            &quot;@type&quot;: &quot;Organization&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games&quot;&#10;        },&#10;        &quot;datePublished&quot;: &quot;{{BLOG_DATE}}&quot;,&#10;        &quot;url&quot;: &quot;{{BLOG_URL}}&quot;&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/style.css&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/blogs-detail.css&quot;&gt;&#10;    &#10;    &lt;title&gt;{{BLOG_TITLE}} - Atlas Games Blog&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Breadcrumbs --&gt;&#10;            &lt;nav class=&quot;breadcrumbs&quot; aria-label=&quot;Breadcrumb navigation&quot;&gt;&#10;                &lt;ol&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../index.html&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../blogs.html&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li aria-current=&quot;page&quot;&gt;{{BLOG_TITLE}}&lt;/li&gt;&#10;                &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            &lt;!-- Blog Article --&gt;&#10;            &lt;article class=&quot;blog-article&quot;&gt;&#10;                &lt;!-- Article Header --&gt;&#10;                &lt;header class=&quot;article-header section&quot;&gt;&#10;                    &lt;div class=&quot;article-meta&quot;&gt;&#10;                        &lt;span class=&quot;author&quot;&gt;By {{BLOG_AUTHOR}}&lt;/span&gt;&#10;                        &lt;span class=&quot;date&quot;&gt;{{BLOG_DATE_FORMATTED}}&lt;/span&gt;&#10;                        &lt;span class=&quot;read-time&quot;&gt;{{BLOG_READ_TIME}} min read&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h1&gt;{{BLOG_TITLE}}&lt;/h1&gt;&#10;                    &lt;p class=&quot;article-excerpt&quot;&gt;{{BLOG_EXCERPT}}&lt;/p&gt;&#10;                    &lt;div class=&quot;article-tags&quot;&gt;&#10;                        {{BLOG_TAGS_LIST}}&#10;                    &lt;/div&gt;&#10;                &lt;/header&gt;&#10;&#10;                &lt;!-- Featured Image --&gt;&#10;                &lt;div class=&quot;featured-image&quot;&gt;&#10;                    &lt;img src=&quot;{{BLOG_THUMBNAIL}}&quot; alt=&quot;{{BLOG_TITLE}}&quot; loading=&quot;eager&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Article Content --&gt;&#10;                &lt;div class=&quot;article-content&quot;&gt;&#10;                    {{BLOG_CONTENT}}&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Article Footer --&gt;&#10;                &lt;footer class=&quot;article-footer section&quot;&gt;&#10;                    &lt;div class=&quot;article-actions&quot;&gt;&#10;                        &lt;button class=&quot;btn btn-secondary&quot; id=&quot;share-article&quot;&gt;Share Article&lt;/button&gt;&#10;                        &lt;a href=&quot;../../blogs.html&quot; class=&quot;btn btn-primary&quot;&gt;Back to Blog&lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;!-- Related Links --&gt;&#10;                    &lt;div class=&quot;related-links&quot;&gt;&#10;                        {{#if RELATED_GAME}}&#10;                        &lt;div class=&quot;related-game&quot;&gt;&#10;                            &lt;h3&gt;Related Game&lt;/h3&gt;&#10;                            &lt;a href=&quot;../../game-collection/{{RELATED_GAME}}/{{RELATED_GAME}}-detail.html&quot; class=&quot;related-link&quot;&gt;&#10;                                View {{RELATED_GAME_TITLE}}&#10;                            &lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                        {{/if}}&#10;                        &#10;                        {{#if RELATED_TEAM}}&#10;                        &lt;div class=&quot;related-team&quot;&gt;&#10;                            &lt;h3&gt;About the Author&lt;/h3&gt;&#10;                            &lt;a href=&quot;../../team-collection/{{RELATED_TEAM}}/{{RELATED_TEAM}}-detail.html&quot; class=&quot;related-link&quot;&gt;&#10;                                View {{BLOG_AUTHOR}}'s Profile&#10;                            &lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                        {{/if}}&#10;                    &lt;/div&gt;&#10;                &lt;/footer&gt;&#10;            &lt;/article&gt;&#10;&#10;            &lt;!-- Related Articles --&gt;&#10;            &lt;aside class=&quot;related-articles section&quot;&gt;&#10;                &lt;h2&gt;Related Articles&lt;/h2&gt;&#10;                &lt;div id=&quot;related-articles-container&quot; class=&quot;grid grid-3&quot;&gt;&#10;                    &lt;!-- Will be populated by JavaScript --&gt;&#10;                &lt;/div&gt;&#10;            &lt;/aside&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;../../assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;../../assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            initializeSharing();&#10;            loadRelatedArticles();&#10;            enhanceArticleContent();&#10;        });&#10;&#10;        function initializeSharing() {&#10;            const shareBtn = document.getElementById('share-article');&#10;            &#10;            shareBtn.addEventListener('click', async () =&gt; {&#10;                const shareData = {&#10;                    title: '{{BLOG_TITLE}} - Atlas Games Blog',&#10;                    text: '{{BLOG_EXCERPT}}',&#10;                    url: window.location.href&#10;                };&#10;&#10;                if (navigator.share) {&#10;                    try {&#10;                        await navigator.share(shareData);&#10;                    } catch (err) {&#10;                        console.log('Error sharing:', err);&#10;                    }&#10;                } else {&#10;                    // Fallback: copy to clipboard&#10;                    navigator.clipboard.writeText(window.location.href);&#10;                    showMessage('Article link copied to clipboard!');&#10;                }&#10;            });&#10;        }&#10;&#10;        async function loadRelatedArticles() {&#10;            try {&#10;                const response = await fetch('../../data/blogs.json');&#10;                const blogs = await response.json();&#10;                &#10;                // Filter out current article and find related ones&#10;                const currentSlug = '{{BLOG_SLUG}}';&#10;                const relatedBlogs = blogs&#10;                    .filter(blog =&gt; blog.slug !== currentSlug)&#10;                    .filter(blog =&gt; {&#10;                        const currentTags = '{{BLOG_TAGS}}'.split(',');&#10;                        return blog.tags.some(tag =&gt; currentTags.includes(tag));&#10;                    })&#10;                    .slice(0, 3);&#10;&#10;                const container = document.getElementById('related-articles-container');&#10;                &#10;                if (relatedBlogs.length &gt; 0) {&#10;                    container.innerHTML = relatedBlogs.map(blog =&gt; `&#10;                        &lt;article class=&quot;card&quot;&gt;&#10;                            &lt;img src=&quot;${blog.thumbnail}&quot; alt=&quot;${blog.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                            &lt;div class=&quot;card-content&quot;&gt;&#10;                                &lt;h3 class=&quot;card-title&quot;&gt;&#10;                                    &lt;a href=&quot;../../${blog.detailPath}&quot;&gt;${blog.title}&lt;/a&gt;&#10;                                &lt;/h3&gt;&#10;                                &lt;div class=&quot;card-meta&quot;&gt;&#10;                                    &lt;span class=&quot;author&quot;&gt;By ${blog.author}&lt;/span&gt;&#10;                                    &lt;span class=&quot;date&quot;&gt;${Utils.formatDate(blog.date)}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;p class=&quot;card-description&quot;&gt;${blog.excerpt}&lt;/p&gt;&#10;                                &lt;div class=&quot;card-tags&quot;&gt;&#10;                                    ${blog.tags.map(tag =&gt; `&lt;span class=&quot;tag&quot;&gt;${tag}&lt;/span&gt;`).join('')}&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/article&gt;&#10;                    `).join('');&#10;                } else {&#10;                    container.innerHTML = '&lt;p&gt;No related articles found.&lt;/p&gt;';&#10;                }&#10;            } catch (error) {&#10;                console.error('Error loading related articles:', error);&#10;            }&#10;        }&#10;&#10;        function enhanceArticleContent() {&#10;            // Add smooth scrolling to internal links&#10;            const articleContent = document.querySelector('.article-content');&#10;            const links = articleContent.querySelectorAll('a[href^=&quot;#&quot;]');&#10;            &#10;            links.forEach(link =&gt; {&#10;                link.addEventListener('click', (e) =&gt; {&#10;                    e.preventDefault();&#10;                    const target = document.querySelector(link.getAttribute('href'));&#10;                    if (target) {&#10;                        target.scrollIntoView({ behavior: 'smooth' });&#10;                    }&#10;                });&#10;            });&#10;&#10;            // Add lazy loading to images&#10;            const images = articleContent.querySelectorAll('img');&#10;            images.forEach(img =&gt; {&#10;                img.loading = 'lazy';&#10;            });&#10;        }&#10;&#10;        function showMessage(message) {&#10;            const messageDiv = document.createElement('div');&#10;            messageDiv.className = 'toast-message';&#10;            messageDiv.textContent = message;&#10;            document.body.appendChild(messageDiv);&#10;            &#10;            setTimeout(() =&gt; {&#10;                messageDiv.remove();&#10;            }, 3000);&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/game-detail.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/game-detail.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;{{GAME_DESCRIPTION}}&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;{{GAME_TAGS}}, Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;{{GAME_TITLE}} - Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;{{GAME_DESCRIPTION}}&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;{{GAME_THUMBNAIL}}&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;{{GAME_URL}}&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;{{GAME_TITLE}} - Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;{{GAME_DESCRIPTION}}&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;{{GAME_THUMBNAIL}}&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;VideoGame&quot;,&#10;        &quot;name&quot;: &quot;{{GAME_TITLE}}&quot;,&#10;        &quot;description&quot;: &quot;{{GAME_LONG_DESCRIPTION}}&quot;,&#10;        &quot;image&quot;: &quot;{{GAME_THUMBNAIL}}&quot;,&#10;        &quot;url&quot;: &quot;{{GAME_URL}}&quot;,&#10;        &quot;publisher&quot;: {&#10;            &quot;@type&quot;: &quot;Organization&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games&quot;&#10;        },&#10;        &quot;genre&quot;: &quot;{{GAME_GENRE}}&quot;,&#10;        &quot;playMode&quot;: &quot;{{GAME_PLATFORMS}}&quot;,&#10;        &quot;datePublished&quot;: &quot;{{GAME_RELEASE_DATE}}&quot;&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/style.css&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/games-detail.css&quot;&gt;&#10;    &#10;    &lt;title&gt;{{GAME_TITLE}} - Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Breadcrumbs --&gt;&#10;            &lt;nav class=&quot;breadcrumbs&quot; aria-label=&quot;Breadcrumb navigation&quot;&gt;&#10;                &lt;ol&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../index.html&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../games.html&quot;&gt;Games&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li aria-current=&quot;page&quot;&gt;{{GAME_TITLE}}&lt;/li&gt;&#10;                &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            &lt;!-- Game Header --&gt;&#10;            &lt;header class=&quot;game-header section&quot;&gt;&#10;                &lt;div class=&quot;game-hero&quot;&gt;&#10;                    &lt;div class=&quot;game-info&quot;&gt;&#10;                        &lt;h1&gt;{{GAME_TITLE}}&lt;/h1&gt;&#10;                        &lt;div class=&quot;game-meta&quot;&gt;&#10;                            &lt;span class=&quot;release-date&quot;&gt;Released: {{GAME_RELEASE_DATE_FORMATTED}}&lt;/span&gt;&#10;                            &lt;span class=&quot;genre&quot;&gt;Genre: {{GAME_GENRE}}&lt;/span&gt;&#10;                            &lt;span class=&quot;status status-{{GAME_STATUS_CLASS}}&quot;&gt;{{GAME_STATUS}}&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;game-platforms&quot;&gt;&#10;                            {{GAME_PLATFORM_BADGES}}&#10;                        &lt;/div&gt;&#10;                        &lt;p class=&quot;game-description&quot;&gt;{{GAME_DESCRIPTION}}&lt;/p&gt;&#10;                        &lt;div class=&quot;game-actions&quot;&gt;&#10;                            &lt;a href=&quot;{{GAME_ITCH_URL}}&quot; class=&quot;btn btn-primary&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Play Now&lt;/a&gt;&#10;                            &lt;button class=&quot;btn btn-secondary&quot; id=&quot;share-btn&quot;&gt;Share Game&lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;game-thumbnail&quot;&gt;&#10;                        &lt;img src=&quot;{{GAME_THUMBNAIL}}&quot; alt=&quot;{{GAME_TITLE}}&quot; loading=&quot;eager&quot;&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/header&gt;&#10;&#10;            &lt;!-- Game Content --&gt;&#10;            &lt;div class=&quot;game-content&quot;&gt;&#10;                &lt;!-- Screenshots Gallery --&gt;&#10;                &lt;section class=&quot;screenshots-section section&quot;&gt;&#10;                    &lt;h2&gt;Screenshots&lt;/h2&gt;&#10;                    &lt;div class=&quot;screenshots-grid&quot; id=&quot;screenshots-gallery&quot;&gt;&#10;                        {{GAME_SCREENSHOTS}}&#10;                    &lt;/div&gt;&#10;                &lt;/section&gt;&#10;&#10;                &lt;!-- Trailer --&gt;&#10;                &lt;section class=&quot;trailer-section section&quot;&gt;&#10;                    &lt;h2&gt;Game Trailer&lt;/h2&gt;&#10;                    &lt;div class=&quot;trailer-container&quot;&gt;&#10;                        &lt;iframe &#10;                            src=&quot;{{GAME_TRAILER_EMBED}}&quot; &#10;                            title=&quot;{{GAME_TITLE}} Trailer&quot;&#10;                            frameborder=&quot;0&quot; &#10;                            allowfullscreen&#10;                            loading=&quot;lazy&quot;&gt;&#10;                        &lt;/iframe&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/section&gt;&#10;&#10;                &lt;!-- Game Details --&gt;&#10;                &lt;section class=&quot;game-details section&quot;&gt;&#10;                    &lt;h2&gt;About This Game&lt;/h2&gt;&#10;                    &lt;div class=&quot;game-description-full&quot;&gt;&#10;                        {{GAME_LONG_DESCRIPTION}}&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;game-specs&quot;&gt;&#10;                        &lt;div class=&quot;spec-item&quot;&gt;&#10;                            &lt;h3&gt;Genre&lt;/h3&gt;&#10;                            &lt;p&gt;{{GAME_GENRE}}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;spec-item&quot;&gt;&#10;                            &lt;h3&gt;Platforms&lt;/h3&gt;&#10;                            &lt;div class=&quot;platforms-list&quot;&gt;{{GAME_PLATFORM_LIST}}&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;spec-item&quot;&gt;&#10;                            &lt;h3&gt;Release Date&lt;/h3&gt;&#10;                            &lt;p&gt;{{GAME_RELEASE_DATE_FORMATTED}}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;spec-item&quot;&gt;&#10;                            &lt;h3&gt;Status&lt;/h3&gt;&#10;                            &lt;p&gt;{{GAME_STATUS}}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;spec-item&quot;&gt;&#10;                            &lt;h3&gt;Tags&lt;/h3&gt;&#10;                            &lt;div class=&quot;tags-list&quot;&gt;{{GAME_TAGS_LIST}}&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/section&gt;&#10;&#10;                &lt;!-- Related Content --&gt;&#10;                &lt;aside class=&quot;related-content section&quot;&gt;&#10;                    &lt;div class=&quot;related-grid&quot;&gt;&#10;                        &lt;!-- Related Blogs --&gt;&#10;                        &lt;div class=&quot;related-blogs&quot;&gt;&#10;                            &lt;h3&gt;Related Blog Posts&lt;/h3&gt;&#10;                            &lt;div id=&quot;related-blogs-container&quot;&gt;&#10;                                &lt;!-- Will be populated by JavaScript --&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- Patch Notes --&gt;&#10;                        &lt;div class=&quot;patch-notes&quot;&gt;&#10;                            &lt;h3&gt;Latest Updates&lt;/h3&gt;&#10;                            &lt;div id=&quot;patch-notes-container&quot;&gt;&#10;                                &lt;!-- Will be populated by JavaScript --&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/aside&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;!-- Lightbox Modal --&gt;&#10;    &lt;div id=&quot;lightbox-modal&quot; class=&quot;lightbox-modal&quot; role=&quot;dialog&quot; aria-labelledby=&quot;lightbox-title&quot; aria-hidden=&quot;true&quot;&gt;&#10;        &lt;div class=&quot;lightbox-content&quot;&gt;&#10;            &lt;button class=&quot;lightbox-close&quot; aria-label=&quot;Close lightbox&quot;&gt;&amp;times;&lt;/button&gt;&#10;            &lt;img id=&quot;lightbox-image&quot; src=&quot;&quot; alt=&quot;&quot; loading=&quot;lazy&quot;&gt;&#10;            &lt;div class=&quot;lightbox-caption&quot; id=&quot;lightbox-title&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;lightbox-nav&quot;&gt;&#10;                &lt;button class=&quot;lightbox-prev&quot; aria-label=&quot;Previous image&quot;&gt;&amp;#8249;&lt;/button&gt;&#10;                &lt;button class=&quot;lightbox-next&quot; aria-label=&quot;Next image&quot;&gt;&amp;#8250;&lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;../../assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;../../assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            initializeLightbox();&#10;            initializeSharing();&#10;            loadRelatedContent();&#10;        });&#10;&#10;        function initializeLightbox() {&#10;            const modal = document.getElementById('lightbox-modal');&#10;            const lightboxImage = document.getElementById('lightbox-image');&#10;            const lightboxTitle = document.getElementById('lightbox-title');&#10;            const closeBtn = document.querySelector('.lightbox-close');&#10;            const prevBtn = document.querySelector('.lightbox-prev');&#10;            const nextBtn = document.querySelector('.lightbox-next');&#10;&#10;            let currentImageIndex = 0;&#10;            const screenshots = Array.from(document.querySelectorAll('.screenshot-thumb'));&#10;&#10;            screenshots.forEach((thumb, index) =&gt; {&#10;                thumb.addEventListener('click', () =&gt; {&#10;                    currentImageIndex = index;&#10;                    showLightbox(thumb.src, thumb.alt);&#10;                });&#10;            });&#10;&#10;            function showLightbox(src, alt) {&#10;                lightboxImage.src = src;&#10;                lightboxImage.alt = alt;&#10;                lightboxTitle.textContent = alt;&#10;                modal.style.display = 'flex';&#10;                modal.setAttribute('aria-hidden', 'false');&#10;                document.body.style.overflow = 'hidden';&#10;            }&#10;&#10;            function hideLightbox() {&#10;                modal.style.display = 'none';&#10;                modal.setAttribute('aria-hidden', 'true');&#10;                document.body.style.overflow = '';&#10;            }&#10;&#10;            closeBtn.addEventListener('click', hideLightbox);&#10;            &#10;            modal.addEventListener('click', (e) =&gt; {&#10;                if (e.target === modal) hideLightbox();&#10;            });&#10;&#10;            prevBtn.addEventListener('click', () =&gt; {&#10;                currentImageIndex = (currentImageIndex - 1 + screenshots.length) % screenshots.length;&#10;                const prevThumb = screenshots[currentImageIndex];&#10;                showLightbox(prevThumb.src, prevThumb.alt);&#10;            });&#10;&#10;            nextBtn.addEventListener('click', () =&gt; {&#10;                currentImageIndex = (currentImageIndex + 1) % screenshots.length;&#10;                const nextThumb = screenshots[currentImageIndex];&#10;                showLightbox(nextThumb.src, nextThumb.alt);&#10;            });&#10;&#10;            document.addEventListener('keydown', (e) =&gt; {&#10;                if (modal.style.display === 'flex') {&#10;                    if (e.key === 'Escape') hideLightbox();&#10;                    if (e.key === 'ArrowLeft') prevBtn.click();&#10;                    if (e.key === 'ArrowRight') nextBtn.click();&#10;                }&#10;            });&#10;        }&#10;&#10;        function initializeSharing() {&#10;            const shareBtn = document.getElementById('share-btn');&#10;            &#10;            shareBtn.addEventListener('click', async () =&gt; {&#10;                const shareData = {&#10;                    title: '{{GAME_TITLE}} - Atlas Games',&#10;                    text: '{{GAME_DESCRIPTION}}',&#10;                    url: window.location.href&#10;                };&#10;&#10;                if (navigator.share) {&#10;                    try {&#10;                        await navigator.share(shareData);&#10;                    } catch (err) {&#10;                        console.log('Error sharing:', err);&#10;                    }&#10;                } else {&#10;                    // Fallback: copy to clipboard&#10;                    navigator.clipboard.writeText(window.location.href);&#10;                    showMessage('Link copied to clipboard!');&#10;                }&#10;            });&#10;        }&#10;&#10;        async function loadRelatedContent() {&#10;            // Load related blogs&#10;            try {&#10;                const blogsResponse = await fetch('../../data/blogs.json');&#10;                const blogs = await blogsResponse.json();&#10;                const relatedBlogs = blogs.filter(blog =&gt; &#10;                    blog.relatedGame === '{{GAME_SLUG}}' || &#10;                    (blog.tags &amp;&amp; blog.tags.some(tag =&gt; '{{GAME_TAGS}}'.includes(tag)))&#10;                ).slice(0, 3);&#10;&#10;                const blogsContainer = document.getElementById('related-blogs-container');&#10;                if (relatedBlogs.length &gt; 0) {&#10;                    blogsContainer.innerHTML = relatedBlogs.map(blog =&gt; `&#10;                        &lt;article class=&quot;related-item&quot;&gt;&#10;                            &lt;h4&gt;&lt;a href=&quot;../../${blog.detailPath}&quot;&gt;${blog.title}&lt;/a&gt;&lt;/h4&gt;&#10;                            &lt;p&gt;${blog.excerpt.substring(0, 100)}...&lt;/p&gt;&#10;                        &lt;/article&gt;&#10;                    `).join('');&#10;                } else {&#10;                    blogsContainer.innerHTML = '&lt;p&gt;No related blog posts found.&lt;/p&gt;';&#10;                }&#10;            } catch (error) {&#10;                console.error('Error loading related blogs:', error);&#10;            }&#10;&#10;            // Load patch notes&#10;            try {&#10;                const patchNotesResponse = await fetch('../../data/patch-notes.json');&#10;                const patchNotes = await patchNotesResponse.json();&#10;                const gamePatchNotes = patchNotes.filter(patch =&gt; &#10;                    patch.relatedGame === '{{GAME_SLUG}}'&#10;                ).slice(0, 3);&#10;&#10;                const patchContainer = document.getElementById('patch-notes-container');&#10;                if (gamePatchNotes.length &gt; 0) {&#10;                    patchContainer.innerHTML = gamePatchNotes.map(patch =&gt; `&#10;                        &lt;article class=&quot;related-item&quot;&gt;&#10;                            &lt;h4&gt;&lt;a href=&quot;../../${patch.detailPath}&quot;&gt;${patch.title}&lt;/a&gt;&lt;/h4&gt;&#10;                            &lt;p&gt;Version ${patch.number} - ${Utils.formatDate(patch.date)}&lt;/p&gt;&#10;                        &lt;/article&gt;&#10;                    `).join('');&#10;                } else {&#10;                    patchContainer.innerHTML = '&lt;p&gt;No patch notes available.&lt;/p&gt;';&#10;                }&#10;            } catch (error) {&#10;                console.error('Error loading patch notes:', error);&#10;            }&#10;        }&#10;&#10;        function showMessage(message) {&#10;            const messageDiv = document.createElement('div');&#10;            messageDiv.className = 'toast-message';&#10;            messageDiv.textContent = message;&#10;            document.body.appendChild(messageDiv);&#10;            &#10;            setTimeout(() =&gt; {&#10;                messageDiv.remove();&#10;            }, 3000);&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/individual-award.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/individual-award.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;{{AWARD_DESCRIPTION}}&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;{{AWARD_TITLE}}, {{AWARD_COMPETITION}}, Atlas Games awards&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;{{AWARD_TITLE}} - Atlas Games Awards&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;{{AWARD_DESCRIPTION}}&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;{{AWARD_THUMBNAIL}}&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;{{AWARD_URL}}&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;website&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;{{AWARD_TITLE}} - Atlas Games Awards&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;{{AWARD_DESCRIPTION}}&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;{{AWARD_THUMBNAIL}}&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;Award&quot;,&#10;        &quot;name&quot;: &quot;{{AWARD_TITLE}}&quot;,&#10;        &quot;description&quot;: &quot;{{AWARD_DESCRIPTION}}&quot;,&#10;        &quot;image&quot;: &quot;{{AWARD_THUMBNAIL}}&quot;,&#10;        &quot;url&quot;: &quot;{{AWARD_URL}}&quot;,&#10;        &quot;awardingBody&quot;: &quot;{{AWARD_COMPETITION}}&quot;,&#10;        &quot;dateCreated&quot;: &quot;{{AWARD_DATE}}&quot;,&#10;        &quot;recipient&quot;: {&#10;            &quot;@type&quot;: &quot;Organization&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games&quot;&#10;        }&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/style.css&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/awards-detail.css&quot;&gt;&#10;    &#10;    &lt;title&gt;{{AWARD_TITLE}} - Atlas Games Awards&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Breadcrumbs --&gt;&#10;            &lt;nav class=&quot;breadcrumbs&quot; aria-label=&quot;Breadcrumb navigation&quot;&gt;&#10;                &lt;ol&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../index.html&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../awards.html&quot;&gt;Awards&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li aria-current=&quot;page&quot;&gt;{{AWARD_TITLE}}&lt;/li&gt;&#10;                &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            &lt;!-- Award Details --&gt;&#10;            &lt;article class=&quot;award-detail&quot;&gt;&#10;                &lt;!-- Award Header --&gt;&#10;                &lt;header class=&quot;award-header section&quot;&gt;&#10;                    &lt;div class=&quot;award-hero&quot;&gt;&#10;                        &lt;div class=&quot;award-image&quot;&gt;&#10;                            &lt;img src=&quot;{{AWARD_THUMBNAIL}}&quot; alt=&quot;{{AWARD_TITLE}}&quot; loading=&quot;eager&quot;&gt;&#10;                            &lt;div class=&quot;award-rank rank-{{AWARD_RANK_CLASS}}&quot;&gt;{{AWARD_RANK}}&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;award-info&quot;&gt;&#10;                            &lt;h1&gt;{{AWARD_TITLE}}&lt;/h1&gt;&#10;                            &lt;div class=&quot;award-meta&quot;&gt;&#10;                                &lt;div class=&quot;meta-item&quot;&gt;&#10;                                    &lt;span class=&quot;meta-label&quot;&gt;Competition:&lt;/span&gt;&#10;                                    &lt;span class=&quot;meta-value&quot;&gt;{{AWARD_COMPETITION}}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;meta-item&quot;&gt;&#10;                                    &lt;span class=&quot;meta-label&quot;&gt;Date Received:&lt;/span&gt;&#10;                                    &lt;span class=&quot;meta-value&quot;&gt;{{AWARD_DATE_FORMATTED}}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;meta-item&quot;&gt;&#10;                                    &lt;span class=&quot;meta-label&quot;&gt;Achievement:&lt;/span&gt;&#10;                                    &lt;span class=&quot;meta-value rank-badge rank-{{AWARD_RANK_CLASS}}&quot;&gt;{{AWARD_RANK}}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p class=&quot;award-description&quot;&gt;{{AWARD_DESCRIPTION}}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/header&gt;&#10;&#10;                &lt;!-- Award Details Content --&gt;&#10;                &lt;div class=&quot;award-content&quot;&gt;&#10;                    &lt;!-- Related Game --&gt;&#10;                    {{#if AWARD_LINKED_GAME}}&#10;                    &lt;section class=&quot;related-game-section section&quot;&gt;&#10;                        &lt;h2&gt;Award-Winning Game&lt;/h2&gt;&#10;                        &lt;div id=&quot;linked-game-container&quot;&gt;&#10;                            &lt;!-- Will be populated by JavaScript --&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/section&gt;&#10;                    {{/if}}&#10;&#10;                    &lt;!-- Participating Team Members --&gt;&#10;                    &lt;section class=&quot;team-section section&quot;&gt;&#10;                        &lt;h2&gt;Team Members&lt;/h2&gt;&#10;                        &lt;div class=&quot;team-grid&quot; id=&quot;participating-members-container&quot;&gt;&#10;                            &lt;!-- Will be populated by JavaScript --&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/section&gt;&#10;&#10;                    &lt;!-- Award Story --&gt;&#10;                    &lt;section class=&quot;award-story section&quot;&gt;&#10;                        &lt;h2&gt;Our Achievement Story&lt;/h2&gt;&#10;                        &lt;div class=&quot;story-content&quot;&gt;&#10;                            &lt;p&gt;This award represents a significant milestone in our journey as game developers. The recognition from {{AWARD_COMPETITION}} validates our commitment to creating exceptional gaming experiences.&lt;/p&gt;&#10;                            &#10;                            &lt;div class=&quot;achievement-stats&quot;&gt;&#10;                                &lt;div class=&quot;stat-item&quot;&gt;&#10;                                    &lt;span class=&quot;stat-label&quot;&gt;Competition&lt;/span&gt;&#10;                                    &lt;span class=&quot;stat-value&quot;&gt;{{AWARD_COMPETITION}}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;stat-item&quot;&gt;&#10;                                    &lt;span class=&quot;stat-label&quot;&gt;Category&lt;/span&gt;&#10;                                    &lt;span class=&quot;stat-value&quot;&gt;{{AWARD_TITLE}}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;stat-item&quot;&gt;&#10;                                    &lt;span class=&quot;stat-label&quot;&gt;Result&lt;/span&gt;&#10;                                    &lt;span class=&quot;stat-value&quot;&gt;{{AWARD_RANK}}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;stat-item&quot;&gt;&#10;                                    &lt;span class=&quot;stat-label&quot;&gt;Year&lt;/span&gt;&#10;                                    &lt;span class=&quot;stat-value&quot;&gt;{{AWARD_YEAR}}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/section&gt;&#10;&#10;                    &lt;!-- Competition Information --&gt;&#10;                    &lt;section class=&quot;competition-info section&quot;&gt;&#10;                        &lt;h2&gt;About {{AWARD_COMPETITION}}&lt;/h2&gt;&#10;                        &lt;div class=&quot;competition-content&quot;&gt;&#10;                            &lt;p&gt;{{AWARD_COMPETITION}} is a prestigious event in the gaming industry that recognizes outstanding achievements in game development, design, and innovation.&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/section&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Award Actions --&gt;&#10;                &lt;div class=&quot;award-actions section&quot;&gt;&#10;                    &lt;div class=&quot;actions-grid&quot;&gt;&#10;                        {{#if AWARD_LINKED_GAME}}&#10;                        &lt;a href=&quot;../../game-collection/{{AWARD_LINKED_GAME}}/{{AWARD_LINKED_GAME}}-detail.html&quot; class=&quot;btn btn-primary&quot;&gt;&#10;                            View Award-Winning Game&#10;                        &lt;/a&gt;&#10;                        {{/if}}&#10;                        &lt;a href=&quot;../../awards.html&quot; class=&quot;btn btn-secondary&quot;&gt;View All Awards&lt;/a&gt;&#10;                        &lt;button class=&quot;btn btn-secondary&quot; id=&quot;share-award&quot;&gt;Share Achievement&lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/article&gt;&#10;&#10;            &lt;!-- Related Awards --&gt;&#10;            &lt;aside class=&quot;related-awards section&quot;&gt;&#10;                &lt;h2&gt;More Achievements&lt;/h2&gt;&#10;                &lt;div id=&quot;related-awards-container&quot; class=&quot;grid grid-3&quot;&gt;&#10;                    &lt;!-- Will be populated by JavaScript --&gt;&#10;                &lt;/div&gt;&#10;            &lt;/aside&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;../../assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;../../assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            loadLinkedGame();&#10;            loadParticipatingMembers();&#10;            loadRelatedAwards();&#10;            initializeSharing();&#10;        });&#10;&#10;        async function loadLinkedGame() {&#10;            const linkedGame = '{{AWARD_LINKED_GAME}}';&#10;            if (!linkedGame) return;&#10;&#10;            try {&#10;                const response = await fetch('../../data/games.json');&#10;                const games = await response.json();&#10;                const game = games.find(g =&gt; g.slug === linkedGame);&#10;&#10;                if (game) {&#10;                    const container = document.getElementById('linked-game-container');&#10;                    container.innerHTML = `&#10;                        &lt;div class=&quot;linked-game-card&quot;&gt;&#10;                            &lt;img src=&quot;${game.thumbnail}&quot; alt=&quot;${game.title}&quot; class=&quot;game-image&quot;&gt;&#10;                            &lt;div class=&quot;game-info&quot;&gt;&#10;                                &lt;h3&gt;&lt;a href=&quot;../../${game.detailPath}&quot;&gt;${game.title}&lt;/a&gt;&lt;/h3&gt;&#10;                                &lt;p class=&quot;game-meta&quot;&gt;${game.genre} • ${Utils.formatDate(game.releaseDate)}&lt;/p&gt;&#10;                                &lt;p class=&quot;game-description&quot;&gt;${game.description}&lt;/p&gt;&#10;                                &lt;div class=&quot;game-tags&quot;&gt;&#10;                                    ${game.tags.map(tag =&gt; `&lt;span class=&quot;tag&quot;&gt;${tag}&lt;/span&gt;`).join('')}&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;game-actions&quot;&gt;&#10;                                    &lt;a href=&quot;../../${game.detailPath}&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;View Game&lt;/a&gt;&#10;                                    &lt;a href=&quot;${game.itchUrl}&quot; class=&quot;btn btn-secondary btn-sm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Play Now&lt;/a&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    `;&#10;                }&#10;            } catch (error) {&#10;                console.error('Error loading linked game:', error);&#10;            }&#10;        }&#10;&#10;        async function loadParticipatingMembers() {&#10;            const memberSlugs = '{{AWARD_PARTICIPATING_MEMBERS}}';&#10;            if (!memberSlugs) return;&#10;&#10;            try {&#10;                const response = await fetch('../../data/team.json');&#10;                const team = await response.json();&#10;                const participatingMembers = team.filter(member =&gt; &#10;                    memberSlugs.includes(member.slug)&#10;                );&#10;&#10;                const container = document.getElementById('participating-members-container');&#10;                if (participatingMembers.length &gt; 0) {&#10;                    container.innerHTML = participatingMembers.map(member =&gt; `&#10;                        &lt;div class=&quot;member-card&quot;&gt;&#10;                            &lt;img src=&quot;${member.image}&quot; alt=&quot;${member.name}&quot; class=&quot;member-image&quot;&gt;&#10;                            &lt;div class=&quot;member-info&quot;&gt;&#10;                                &lt;h4&gt;&lt;a href=&quot;../../${member.detailPath}&quot;&gt;${member.name}&lt;/a&gt;&lt;/h4&gt;&#10;                                &lt;p class=&quot;member-role&quot;&gt;${member.role}&lt;/p&gt;&#10;                                &lt;p class=&quot;member-contribution&quot;&gt;Contributed to this award-winning project&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;                } else {&#10;                    container.innerHTML = '&lt;p&gt;Team information will be updated soon.&lt;/p&gt;';&#10;                }&#10;            } catch (error) {&#10;                console.error('Error loading participating members:', error);&#10;            }&#10;        }&#10;&#10;        async function loadRelatedAwards() {&#10;            try {&#10;                const response = await fetch('../../data/awards.json');&#10;                const awards = await response.json();&#10;                const currentSlug = '{{AWARD_SLUG}}';&#10;                const relatedAwards = awards&#10;                    .filter(award =&gt; award.slug !== currentSlug)&#10;                    .slice(0, 3);&#10;&#10;                const container = document.getElementById('related-awards-container');&#10;                if (relatedAwards.length &gt; 0) {&#10;                    container.innerHTML = relatedAwards.map(award =&gt; `&#10;                        &lt;article class=&quot;card&quot;&gt;&#10;                            &lt;img src=&quot;${award.thumbnail}&quot; alt=&quot;${award.title}&quot; class=&quot;card-image&quot; loading=&quot;lazy&quot;&gt;&#10;                            &lt;div class=&quot;card-content&quot;&gt;&#10;                                &lt;h3 class=&quot;card-title&quot;&gt;&#10;                                    &lt;a href=&quot;../../${award.detailPath}&quot;&gt;${award.title}&lt;/a&gt;&#10;                                &lt;/h3&gt;&#10;                                &lt;div class=&quot;card-meta&quot;&gt;&#10;                                    &lt;span class=&quot;competition&quot;&gt;${award.competition}&lt;/span&gt;&#10;                                    &lt;span class=&quot;date&quot;&gt;${Utils.formatDate(award.date)}&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;award-rank rank-${award.rank.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '')}&quot;&gt;${award.rank}&lt;/div&gt;&#10;                                &lt;p class=&quot;card-description&quot;&gt;${award.description}&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/article&gt;&#10;                    `).join('');&#10;                } else {&#10;                    container.innerHTML = '&lt;p&gt;No other awards to display.&lt;/p&gt;';&#10;                }&#10;            } catch (error) {&#10;                console.error('Error loading related awards:', error);&#10;            }&#10;        }&#10;&#10;        function initializeSharing() {&#10;            const shareBtn = document.getElementById('share-award');&#10;            &#10;            shareBtn.addEventListener('click', async () =&gt; {&#10;                const shareData = {&#10;                    title: '{{AWARD_TITLE}} - Atlas Games Achievement',&#10;                    text: '{{AWARD_DESCRIPTION}}',&#10;                    url: window.location.href&#10;                };&#10;&#10;                if (navigator.share) {&#10;                    try {&#10;                        await navigator.share(shareData);&#10;                    } catch (err) {&#10;                        console.log('Error sharing:', err);&#10;                    }&#10;                } else {&#10;                    // Fallback: copy to clipboard&#10;                    navigator.clipboard.writeText(window.location.href);&#10;                    showMessage('Achievement link copied to clipboard!');&#10;                }&#10;            });&#10;        }&#10;&#10;        function showMessage(message) {&#10;            const messageDiv = document.createElement('div');&#10;            messageDiv.className = 'toast-message';&#10;            messageDiv.textContent = message;&#10;            document.body.appendChild(messageDiv);&#10;            &#10;            setTimeout(() =&gt; {&#10;                messageDiv.remove();&#10;            }, 3000);&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/patch-notes.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/patch-notes.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;{{PATCH_TITLE}} - Latest update for {{PATCH_GAME}}&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;{{PATCH_GAME}}, patch notes, update, Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;{{PATCH_TITLE}} - Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;Latest update for {{PATCH_GAME}}&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;assets/images/games/{{PATCH_GAME}}/thumbnail.png&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;{{PATCH_URL}}&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;article&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;{{PATCH_TITLE}} - Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;Latest update for {{PATCH_GAME}}&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;assets/images/games/{{PATCH_GAME}}/thumbnail.png&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;TechArticle&quot;,&#10;        &quot;headline&quot;: &quot;{{PATCH_TITLE}}&quot;,&#10;        &quot;description&quot;: &quot;Patch notes for {{PATCH_GAME}}&quot;,&#10;        &quot;author&quot;: {&#10;            &quot;@type&quot;: &quot;Organization&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games&quot;&#10;        },&#10;        &quot;publisher&quot;: {&#10;            &quot;@type&quot;: &quot;Organization&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games&quot;&#10;        },&#10;        &quot;datePublished&quot;: &quot;{{PATCH_DATE}}&quot;,&#10;        &quot;url&quot;: &quot;{{PATCH_URL}}&quot;&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/style.css&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/patch-notes.css&quot;&gt;&#10;    &#10;    &lt;title&gt;{{PATCH_TITLE}} - Atlas Games&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Breadcrumbs --&gt;&#10;            &lt;nav class=&quot;breadcrumbs&quot; aria-label=&quot;Breadcrumb navigation&quot;&gt;&#10;                &lt;ol&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../index.html&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../games.html&quot;&gt;Games&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../game-collection/{{PATCH_GAME}}/{{PATCH_GAME}}-detail.html&quot;&gt;{{PATCH_GAME_TITLE}}&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li aria-current=&quot;page&quot;&gt;{{PATCH_TITLE}}&lt;/li&gt;&#10;                &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            &lt;!-- Patch Notes Article --&gt;&#10;            &lt;article class=&quot;patch-notes-article&quot;&gt;&#10;                &lt;!-- Patch Header --&gt;&#10;                &lt;header class=&quot;patch-header section&quot;&gt;&#10;                    &lt;div class=&quot;patch-meta&quot;&gt;&#10;                        &lt;span class=&quot;game-name&quot;&gt;{{PATCH_GAME_TITLE}}&lt;/span&gt;&#10;                        &lt;span class=&quot;version&quot;&gt;Version {{PATCH_NUMBER}}&lt;/span&gt;&#10;                        &lt;span class=&quot;date&quot;&gt;{{PATCH_DATE_FORMATTED}}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h1&gt;{{PATCH_TITLE}}&lt;/h1&gt;&#10;                    &lt;div class=&quot;related-game-link&quot;&gt;&#10;                        &lt;a href=&quot;../../game-collection/{{PATCH_GAME}}/{{PATCH_GAME}}-detail.html&quot; class=&quot;btn btn-secondary btn-sm&quot;&gt;&#10;                            ← Back to {{PATCH_GAME_TITLE}}&#10;                        &lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/header&gt;&#10;&#10;                &lt;!-- Patch Video (if available) --&gt;&#10;                {{#if PATCH_YOUTUBE}}&#10;                &lt;section class=&quot;patch-video section&quot;&gt;&#10;                    &lt;h2&gt;Update Highlights&lt;/h2&gt;&#10;                    &lt;div class=&quot;video-container&quot;&gt;&#10;                        &lt;iframe &#10;                            src=&quot;{{PATCH_YOUTUBE_EMBED}}&quot; &#10;                            title=&quot;{{PATCH_TITLE}} - Update Highlights&quot;&#10;                            frameborder=&quot;0&quot; &#10;                            allowfullscreen&#10;                            loading=&quot;lazy&quot;&gt;&#10;                        &lt;/iframe&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/section&gt;&#10;                {{/if}}&#10;&#10;                &lt;!-- Patch Content --&gt;&#10;                &lt;div class=&quot;patch-content&quot;&gt;&#10;                    {{PATCH_CONTENT_HTML}}&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Patch Navigation --&gt;&#10;                &lt;nav class=&quot;patch-navigation section&quot;&gt;&#10;                    &lt;div class=&quot;nav-grid&quot;&gt;&#10;                        &lt;div class=&quot;nav-item prev&quot; id=&quot;prev-patch&quot;&gt;&#10;                            &lt;!-- Will be populated by JavaScript --&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;nav-item next&quot; id=&quot;next-patch&quot;&gt;&#10;                            &lt;!-- Will be populated by JavaScript --&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/nav&gt;&#10;&#10;                &lt;!-- Patch Footer --&gt;&#10;                &lt;footer class=&quot;patch-footer section&quot;&gt;&#10;                    &lt;div class=&quot;footer-actions&quot;&gt;&#10;                        &lt;a href=&quot;../../game-collection/{{PATCH_GAME}}/{{PATCH_GAME}}-detail.html&quot; class=&quot;btn btn-primary&quot;&gt;&#10;                            Play {{PATCH_GAME_TITLE}}&#10;                        &lt;/a&gt;&#10;                        &lt;button class=&quot;btn btn-secondary&quot; id=&quot;share-patch&quot;&gt;Share Update&lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;feedback-section&quot;&gt;&#10;                        &lt;h3&gt;Feedback&lt;/h3&gt;&#10;                        &lt;p&gt;Have thoughts about this update? We'd love to hear from you!&lt;/p&gt;&#10;                        &lt;a href=&quot;../../contact.html?subject=Feedback on {{PATCH_TITLE}}&quot; class=&quot;btn btn-secondary btn-sm&quot;&gt;&#10;                            Send Feedback&#10;                        &lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/footer&gt;&#10;            &lt;/article&gt;&#10;&#10;            &lt;!-- All Patch Notes for Game --&gt;&#10;            &lt;aside class=&quot;all-patches section&quot;&gt;&#10;                &lt;h2&gt;All Updates for {{PATCH_GAME_TITLE}}&lt;/h2&gt;&#10;                &lt;div id=&quot;all-patches-container&quot;&gt;&#10;                    &lt;!-- Will be populated by JavaScript --&gt;&#10;                &lt;/div&gt;&#10;            &lt;/aside&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;../../assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;../../assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            loadPatchNavigation();&#10;            loadAllPatches();&#10;            initializeSharing();&#10;            enhancePatchContent();&#10;        });&#10;&#10;        async function loadPatchNavigation() {&#10;            const currentSlug = '{{PATCH_SLUG}}';&#10;            const gameSlug = '{{PATCH_GAME}}';&#10;&#10;            try {&#10;                const response = await fetch('../../data/patch-notes.json');&#10;                const patches = await response.json();&#10;                &#10;                // Filter patches for this game and sort by date&#10;                const gamePatches = patches&#10;                    .filter(patch =&gt; patch.relatedGame === gameSlug)&#10;                    .sort((a, b) =&gt; new Date(b.date) - new Date(a.date));&#10;&#10;                const currentIndex = gamePatches.findIndex(patch =&gt; patch.slug === currentSlug);&#10;                &#10;                // Previous patch (newer)&#10;                const prevContainer = document.getElementById('prev-patch');&#10;                if (currentIndex &gt; 0) {&#10;                    const prevPatch = gamePatches[currentIndex - 1];&#10;                    prevContainer.innerHTML = `&#10;                        &lt;a href=&quot;../../${prevPatch.detailPath}&quot; class=&quot;nav-link&quot;&gt;&#10;                            &lt;span class=&quot;nav-direction&quot;&gt;← Newer&lt;/span&gt;&#10;                            &lt;span class=&quot;nav-title&quot;&gt;${prevPatch.title}&lt;/span&gt;&#10;                            &lt;span class=&quot;nav-version&quot;&gt;v${prevPatch.number}&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                    `;&#10;                } else {&#10;                    prevContainer.innerHTML = '&lt;div class=&quot;nav-placeholder&quot;&gt;No newer updates&lt;/div&gt;';&#10;                }&#10;&#10;                // Next patch (older)&#10;                const nextContainer = document.getElementById('next-patch');&#10;                if (currentIndex &lt; gamePatches.length - 1) {&#10;                    const nextPatch = gamePatches[currentIndex + 1];&#10;                    nextContainer.innerHTML = `&#10;                        &lt;a href=&quot;../../${nextPatch.detailPath}&quot; class=&quot;nav-link&quot;&gt;&#10;                            &lt;span class=&quot;nav-direction&quot;&gt;Older →&lt;/span&gt;&#10;                            &lt;span class=&quot;nav-title&quot;&gt;${nextPatch.title}&lt;/span&gt;&#10;                            &lt;span class=&quot;nav-version&quot;&gt;v${nextPatch.number}&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                    `;&#10;                } else {&#10;                    nextContainer.innerHTML = '&lt;div class=&quot;nav-placeholder&quot;&gt;No older updates&lt;/div&gt;';&#10;                }&#10;&#10;            } catch (error) {&#10;                console.error('Error loading patch navigation:', error);&#10;            }&#10;        }&#10;&#10;        async function loadAllPatches() {&#10;            const gameSlug = '{{PATCH_GAME}}';&#10;            const currentSlug = '{{PATCH_SLUG}}';&#10;&#10;            try {&#10;                const response = await fetch('../../data/patch-notes.json');&#10;                const patches = await response.json();&#10;                &#10;                const gamePatches = patches&#10;                    .filter(patch =&gt; patch.relatedGame === gameSlug &amp;&amp; patch.slug !== currentSlug)&#10;                    .sort((a, b) =&gt; new Date(b.date) - new Date(a.date))&#10;                    .slice(0, 5);&#10;&#10;                const container = document.getElementById('all-patches-container');&#10;                &#10;                if (gamePatches.length &gt; 0) {&#10;                    container.innerHTML = gamePatches.map(patch =&gt; `&#10;                        &lt;div class=&quot;patch-item&quot;&gt;&#10;                            &lt;a href=&quot;../../${patch.detailPath}&quot; class=&quot;patch-link&quot;&gt;&#10;                                &lt;div class=&quot;patch-info&quot;&gt;&#10;                                    &lt;h4&gt;${patch.title}&lt;/h4&gt;&#10;                                    &lt;div class=&quot;patch-meta&quot;&gt;&#10;                                        &lt;span class=&quot;version&quot;&gt;v${patch.number}&lt;/span&gt;&#10;                                        &lt;span class=&quot;date&quot;&gt;${Utils.formatDate(patch.date)}&lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;                } else {&#10;                    container.innerHTML = '&lt;p&gt;No other updates available.&lt;/p&gt;';&#10;                }&#10;&#10;            } catch (error) {&#10;                console.error('Error loading all patches:', error);&#10;            }&#10;        }&#10;&#10;        function initializeSharing() {&#10;            const shareBtn = document.getElementById('share-patch');&#10;            &#10;            shareBtn.addEventListener('click', async () =&gt; {&#10;                const shareData = {&#10;                    title: '{{PATCH_TITLE}} - Atlas Games',&#10;                    text: 'Latest update for {{PATCH_GAME_TITLE}}',&#10;                    url: window.location.href&#10;                };&#10;&#10;                if (navigator.share) {&#10;                    try {&#10;                        await navigator.share(shareData);&#10;                    } catch (err) {&#10;                        console.log('Error sharing:', err);&#10;                    }&#10;                } else {&#10;                    // Fallback: copy to clipboard&#10;                    navigator.clipboard.writeText(window.location.href);&#10;                    showMessage('Patch notes link copied to clipboard!');&#10;                }&#10;            });&#10;        }&#10;&#10;        function enhancePatchContent() {&#10;            // Add smooth scrolling to internal links&#10;            const patchContent = document.querySelector('.patch-content');&#10;            const links = patchContent.querySelectorAll('a[href^=&quot;#&quot;]');&#10;            &#10;            links.forEach(link =&gt; {&#10;                link.addEventListener('click', (e) =&gt; {&#10;                    e.preventDefault();&#10;                    const target = document.querySelector(link.getAttribute('href'));&#10;                    if (target) {&#10;                        target.scrollIntoView({ behavior: 'smooth' });&#10;                    }&#10;                });&#10;            });&#10;&#10;            // Add copy buttons to code blocks&#10;            const codeBlocks = patchContent.querySelectorAll('pre code');&#10;            codeBlocks.forEach(block =&gt; {&#10;                const button = document.createElement('button');&#10;                button.className = 'copy-code-btn';&#10;                button.textContent = 'Copy';&#10;                button.addEventListener('click', () =&gt; {&#10;                    navigator.clipboard.writeText(block.textContent);&#10;                    button.textContent = 'Copied!';&#10;                    setTimeout(() =&gt; {&#10;                        button.textContent = 'Copy';&#10;                    }, 2000);&#10;                });&#10;                block.parentNode.appendChild(button);&#10;            });&#10;        }&#10;&#10;        function showMessage(message) {&#10;            const messageDiv = document.createElement('div');&#10;            messageDiv.className = 'toast-message';&#10;            messageDiv.textContent = message;&#10;            document.body.appendChild(messageDiv);&#10;            &#10;            setTimeout(() =&gt; {&#10;                messageDiv.remove();&#10;            }, 3000);&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/team-member-detail.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/team-member-detail.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;meta name=&quot;description&quot; content=&quot;{{MEMBER_BIO}}&quot;&gt;&#10;    &lt;meta name=&quot;keywords&quot; content=&quot;{{MEMBER_SKILLS}}, Atlas Games team&quot;&gt;&#10;    &lt;meta name=&quot;author&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Open Graph --&gt;&#10;    &lt;meta property=&quot;og:title&quot; content=&quot;{{MEMBER_NAME}} - {{MEMBER_ROLE}} at Atlas Games&quot;&gt;&#10;    &lt;meta property=&quot;og:description&quot; content=&quot;{{MEMBER_BIO}}&quot;&gt;&#10;    &lt;meta property=&quot;og:image&quot; content=&quot;{{MEMBER_IMAGE}}&quot;&gt;&#10;    &lt;meta property=&quot;og:url&quot; content=&quot;{{MEMBER_URL}}&quot;&gt;&#10;    &lt;meta property=&quot;og:type&quot; content=&quot;profile&quot;&gt;&#10;    &lt;meta property=&quot;og:site_name&quot; content=&quot;Atlas Games&quot;&gt;&#10;    &#10;    &lt;!-- Twitter Card --&gt;&#10;    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;&#10;    &lt;meta name=&quot;twitter:title&quot; content=&quot;{{MEMBER_NAME}} - {{MEMBER_ROLE}} at Atlas Games&quot;&gt;&#10;    &lt;meta name=&quot;twitter:description&quot; content=&quot;{{MEMBER_BIO}}&quot;&gt;&#10;    &lt;meta name=&quot;twitter:image&quot; content=&quot;{{MEMBER_IMAGE}}&quot;&gt;&#10;    &#10;    &lt;!-- JSON-LD Schema --&gt;&#10;    &lt;script type=&quot;application/ld+json&quot;&gt;&#10;    {&#10;        &quot;@context&quot;: &quot;https://schema.org&quot;,&#10;        &quot;@type&quot;: &quot;Person&quot;,&#10;        &quot;name&quot;: &quot;{{MEMBER_NAME}}&quot;,&#10;        &quot;jobTitle&quot;: &quot;{{MEMBER_ROLE}}&quot;,&#10;        &quot;description&quot;: &quot;{{MEMBER_BIO}}&quot;,&#10;        &quot;image&quot;: &quot;{{MEMBER_IMAGE}}&quot;,&#10;        &quot;url&quot;: &quot;{{MEMBER_URL}}&quot;,&#10;        &quot;worksFor&quot;: {&#10;            &quot;@type&quot;: &quot;Organization&quot;,&#10;            &quot;name&quot;: &quot;Atlas Games&quot;&#10;        },&#10;        &quot;email&quot;: &quot;{{MEMBER_EMAIL}}&quot;,&#10;        &quot;telephone&quot;: &quot;{{MEMBER_PHONE}}&quot;,&#10;        &quot;sameAs&quot;: {{MEMBER_SOCIALS_JSON}}&#10;    }&#10;    &lt;/script&gt;&#10;    &#10;    &lt;!-- Fonts --&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &#10;    &lt;!-- Styles --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/style.css&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../assets/css/team-detail.css&quot;&gt;&#10;    &#10;    &lt;title&gt;{{MEMBER_NAME}} - Atlas Games Team&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;a href=&quot;#main-content&quot; class=&quot;skip-link&quot;&gt;Skip to main content&lt;/a&gt;&#10;    &#10;    &lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&#10;    &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&#10;    &#10;    &lt;main id=&quot;main-content&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;!-- Breadcrumbs --&gt;&#10;            &lt;nav class=&quot;breadcrumbs&quot; aria-label=&quot;Breadcrumb navigation&quot;&gt;&#10;                &lt;ol&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../index.html&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;../../team.html&quot;&gt;Team&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li aria-current=&quot;page&quot;&gt;{{MEMBER_NAME}}&lt;/li&gt;&#10;                &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            &lt;!-- Team Member Profile --&gt;&#10;            &lt;article class=&quot;member-profile&quot;&gt;&#10;                &lt;!-- Profile Header --&gt;&#10;                &lt;header class=&quot;profile-header section&quot;&gt;&#10;                    &lt;div class=&quot;profile-hero&quot;&gt;&#10;                        &lt;div class=&quot;profile-image&quot;&gt;&#10;                            &lt;img src=&quot;{{MEMBER_IMAGE}}&quot; alt=&quot;{{MEMBER_NAME}}&quot; loading=&quot;eager&quot;&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;profile-info&quot;&gt;&#10;                            &lt;h1&gt;{{MEMBER_NAME}}&lt;/h1&gt;&#10;                            &lt;h2 class=&quot;role&quot;&gt;{{MEMBER_ROLE}}&lt;/h2&gt;&#10;                            &lt;p class=&quot;bio&quot;&gt;{{MEMBER_BIO}}&lt;/p&gt;&#10;                            &#10;                            &lt;!-- Contact Information --&gt;&#10;                            &lt;div class=&quot;contact-info&quot;&gt;&#10;                                {{#if MEMBER_EMAIL}}&#10;                                &lt;div class=&quot;contact-item&quot;&gt;&#10;                                    &lt;span class=&quot;contact-label&quot;&gt;Email:&lt;/span&gt;&#10;                                    &lt;a href=&quot;mailto:{{MEMBER_EMAIL}}&quot;&gt;{{MEMBER_EMAIL}}&lt;/a&gt;&#10;                                &lt;/div&gt;&#10;                                {{/if}}&#10;                                &#10;                                {{#if MEMBER_PHONE}}&#10;                                &lt;div class=&quot;contact-item&quot;&gt;&#10;                                    &lt;span class=&quot;contact-label&quot;&gt;Phone:&lt;/span&gt;&#10;                                    &lt;a href=&quot;tel:{{MEMBER_PHONE}}&quot;&gt;{{MEMBER_PHONE}}&lt;/a&gt;&#10;                                &lt;/div&gt;&#10;                                {{/if}}&#10;                                &#10;                                {{#if MEMBER_WEBSITE}}&#10;                                &lt;div class=&quot;contact-item&quot;&gt;&#10;                                    &lt;span class=&quot;contact-label&quot;&gt;Website:&lt;/span&gt;&#10;                                    &lt;a href=&quot;{{MEMBER_WEBSITE}}&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;{{MEMBER_WEBSITE}}&lt;/a&gt;&#10;                                &lt;/div&gt;&#10;                                {{/if}}&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;!-- Social Links --&gt;&#10;                            {{#if MEMBER_SOCIALS}}&#10;                            &lt;div class=&quot;social-links&quot;&gt;&#10;                                {{MEMBER_SOCIALS_HTML}}&#10;                            &lt;/div&gt;&#10;                            {{/if}}&#10;&#10;                            &lt;!-- CV Download --&gt;&#10;                            {{#if MEMBER_CV}}&#10;                            &lt;div class=&quot;cv-download&quot;&gt;&#10;                                &lt;a href=&quot;{{MEMBER_CV}}&quot; class=&quot;btn btn-primary&quot; download&gt;Download CV&lt;/a&gt;&#10;                            &lt;/div&gt;&#10;                            {{/if}}&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/header&gt;&#10;&#10;                &lt;!-- Skills Section --&gt;&#10;                &lt;section class=&quot;skills-section section&quot;&gt;&#10;                    &lt;h3&gt;Skills &amp; Expertise&lt;/h3&gt;&#10;                    &lt;div class=&quot;skills-grid&quot;&gt;&#10;                        {{MEMBER_SKILLS_LIST}}&#10;                    &lt;/div&gt;&#10;                &lt;/section&gt;&#10;&#10;                &lt;!-- Projects &amp; Contributions --&gt;&#10;                &lt;section class=&quot;contributions-section section&quot;&gt;&#10;                    &lt;h3&gt;Projects &amp; Contributions&lt;/h3&gt;&#10;                    &lt;div class=&quot;contributions-content&quot;&gt;&#10;                        &lt;div class=&quot;games-worked-on&quot;&gt;&#10;                            &lt;h4&gt;Games Worked On&lt;/h4&gt;&#10;                            &lt;div id=&quot;member-games-container&quot;&gt;&#10;                                &lt;!-- Will be populated by JavaScript --&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &#10;                        &lt;div class=&quot;blog-posts&quot;&gt;&#10;                            &lt;h4&gt;Blog Posts&lt;/h4&gt;&#10;                            &lt;div id=&quot;member-blogs-container&quot;&gt;&#10;                                &lt;!-- Will be populated by JavaScript --&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &#10;                        &lt;div class=&quot;awards-participated&quot;&gt;&#10;                            &lt;h4&gt;Awards &amp; Recognition&lt;/h4&gt;&#10;                            &lt;div id=&quot;member-awards-container&quot;&gt;&#10;                                &lt;!-- Will be populated by JavaScript --&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/section&gt;&#10;&#10;                &lt;!-- Professional Journey --&gt;&#10;                &lt;section class=&quot;journey-section section&quot;&gt;&#10;                    &lt;h3&gt;Professional Journey&lt;/h3&gt;&#10;                    &lt;div class=&quot;journey-content&quot;&gt;&#10;                        &lt;p&gt;{{MEMBER_JOURNEY_CONTENT}}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/section&gt;&#10;            &lt;/article&gt;&#10;&#10;            &lt;!-- Back to Team --&gt;&#10;            &lt;div class=&quot;back-to-team section&quot;&gt;&#10;                &lt;a href=&quot;../../team.html&quot; class=&quot;btn btn-secondary&quot;&gt;← Back to Team&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/main&gt;&#10;    &#10;    &lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;&#10;&#10;    &lt;script src=&quot;../../assets/js/includes.js&quot; defer&gt;&lt;/script&gt;&#10;    &lt;script src=&quot;../../assets/js/utils.js&quot; defer&gt;&lt;/script&gt;&#10;    &#10;    &lt;script&gt;&#10;        document.addEventListener('DOMContentLoaded', () =&gt; {&#10;            loadMemberContributions();&#10;        });&#10;&#10;        async function loadMemberContributions() {&#10;            const memberSlug = '{{MEMBER_SLUG}}';&#10;            &#10;            try {&#10;                // Load games this member worked on&#10;                const gamesResponse = await fetch('../../data/games.json');&#10;                const games = await gamesResponse.json();&#10;                &#10;                // For now, we'll show all games as this would need more detailed data structure&#10;                const memberGames = games.slice(0, 3);&#10;                &#10;                const gamesContainer = document.getElementById('member-games-container');&#10;                if (memberGames.length &gt; 0) {&#10;                    gamesContainer.innerHTML = memberGames.map(game =&gt; `&#10;                        &lt;div class=&quot;contribution-item&quot;&gt;&#10;                            &lt;img src=&quot;${game.thumbnail}&quot; alt=&quot;${game.title}&quot; class=&quot;contribution-thumb&quot;&gt;&#10;                            &lt;div class=&quot;contribution-info&quot;&gt;&#10;                                &lt;h5&gt;&lt;a href=&quot;../../${game.detailPath}&quot;&gt;${game.title}&lt;/a&gt;&lt;/h5&gt;&#10;                                &lt;p class=&quot;contribution-role&quot;&gt;Contributed as ${game.status === 'Released' ? 'Developer' : 'Current Project'}&lt;/p&gt;&#10;                                &lt;p class=&quot;contribution-desc&quot;&gt;${game.description.substring(0, 100)}...&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;                } else {&#10;                    gamesContainer.innerHTML = '&lt;p&gt;No games to display yet.&lt;/p&gt;';&#10;                }&#10;&#10;                // Load blog posts by this member&#10;                const blogsResponse = await fetch('../../data/blogs.json');&#10;                const blogs = await blogsResponse.json();&#10;                const memberBlogs = blogs.filter(blog =&gt; blog.author === '{{MEMBER_NAME}}');&#10;                &#10;                const blogsContainer = document.getElementById('member-blogs-container');&#10;                if (memberBlogs.length &gt; 0) {&#10;                    blogsContainer.innerHTML = memberBlogs.map(blog =&gt; `&#10;                        &lt;div class=&quot;contribution-item&quot;&gt;&#10;                            &lt;img src=&quot;${blog.thumbnail}&quot; alt=&quot;${blog.title}&quot; class=&quot;contribution-thumb&quot;&gt;&#10;                            &lt;div class=&quot;contribution-info&quot;&gt;&#10;                                &lt;h5&gt;&lt;a href=&quot;../../${blog.detailPath}&quot;&gt;${blog.title}&lt;/a&gt;&lt;/h5&gt;&#10;                                &lt;p class=&quot;contribution-date&quot;&gt;${Utils.formatDate(blog.date)}&lt;/p&gt;&#10;                                &lt;p class=&quot;contribution-desc&quot;&gt;${blog.excerpt.substring(0, 100)}...&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;                } else {&#10;                    blogsContainer.innerHTML = '&lt;p&gt;No blog posts yet.&lt;/p&gt;';&#10;                }&#10;&#10;                // Load awards this member participated in&#10;                const awardsResponse = await fetch('../../data/awards.json');&#10;                const awards = await awardsResponse.json();&#10;                const memberAwards = awards.filter(award =&gt; &#10;                    award.participatingMembers &amp;&amp; award.participatingMembers.includes(memberSlug)&#10;                );&#10;                &#10;                const awardsContainer = document.getElementById('member-awards-container');&#10;                if (memberAwards.length &gt; 0) {&#10;                    awardsContainer.innerHTML = memberAwards.map(award =&gt; `&#10;                        &lt;div class=&quot;contribution-item&quot;&gt;&#10;                            &lt;img src=&quot;${award.thumbnail}&quot; alt=&quot;${award.title}&quot; class=&quot;contribution-thumb&quot;&gt;&#10;                            &lt;div class=&quot;contribution-info&quot;&gt;&#10;                                &lt;h5&gt;&lt;a href=&quot;../../${award.detailPath}&quot;&gt;${award.title}&lt;/a&gt;&lt;/h5&gt;&#10;                                &lt;p class=&quot;contribution-role&quot;&gt;${award.rank} - ${award.competition}&lt;/p&gt;&#10;                                &lt;p class=&quot;contribution-date&quot;&gt;${Utils.formatDate(award.date)}&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;                } else {&#10;                    awardsContainer.innerHTML = '&lt;p&gt;No awards to display yet.&lt;/p&gt;';&#10;                }&#10;&#10;            } catch (error) {&#10;                console.error('Error loading member contributions:', error);&#10;            }&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>